webpackJsonp([4],{0:function(t,e,n){"use strict";function i(t){return t&&t.__esModule?t:{default:t}}function r(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function o(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function a(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}var s=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}();n(1);var u=n(298),c=i(u),h=n(330),f=i(h),l=n(468),d=i(l),p=n(472),g=i(p),b=function(t){function e(){r(this,e);var t=o(this,(e.__proto__||Object.getPrototypeOf(e)).call(this));return t.firedb=d.default.database(),t.state={test:null},t}return a(e,t),s(e,[{key:"componentWillMount",value:function(){var t=this;this.firedb.ref("test").on("value",function(e){t.setState({test:e.val()})})}},{key:"render",value:function(){return c.default.createElement("div",null,c.default.createElement("h1",null,"Hello edit app"),c.default.createElement("p",null,"Test: ",this.state.test),c.default.createElement(g.default,null))}}]),e}(c.default.Component);f.default.render(c.default.createElement(b,null),document.getElementById("app"))},468:function(t,e,n){"use strict";function i(t){return t&&t.__esModule?t:{default:t}}Object.defineProperty(e,"__esModule",{value:!0});var r=n(469),o=i(r);n(470),n(471),e.default=o.default.initializeApp({apiKey:"AIzaSyDR2zyCGLTU9cx6SZmsTvzUq31DLfoAd3U",authDomain:"quotes-92672.firebaseapp.com",databaseURL:"https://quotes-92672.firebaseio.com",storageBucket:"quotes-92672.appspot.com",messagingSenderId:"936175857202"})},469:function(t,e){(function(e){/*! @license Firebase v3.6.1
	    Build: 3.6.1-rc.3
	    Terms: https://firebase.google.com/terms/ */
var n=null;!function(){function t(t,e){function n(){this.constructor=t}for(var i in e)e.hasOwnProperty(i)&&(t[i]=e[i]);t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}function i(t,e,n,i){var r,o=arguments.length,a=3>o?e:null===i?i=Object.getOwnPropertyDescriptor(e,n):i;if(r=l.Reflect,"object"==typeof r&&"function"==typeof r.decorate)a=r.decorate(t,e,n,i);else for(var s=t.length-1;0<=s;s--)(r=t[s])&&(a=(3>o?r(a):3<o?r(e,n,a):r(e,n))||a);return 3<o&&a&&Object.defineProperty(e,n,a),a}function r(t,e){var n=l.Reflect;if("object"==typeof n&&"function"==typeof n.metadata)return n.metadata(t,e)}function o(t,e){if(!(e instanceof Object))return e;switch(e.constructor){case Date:return new Date(e.getTime());case Object:void 0===t&&(t={});break;case Array:t=[];break;default:return e}for(var n in e)e.hasOwnProperty(n)&&(t[n]=o(t[n],e[n]));return t}function a(t,e){return t=new vt(t,e),t.subscribe.bind(t)}function s(t){if("object"!=typeof t||null===t)return!1;var e;e=["next","error","complete"],y();var n=e[Symbol.iterator];for(e=n?n.call(e):m(e),n=e.next();!n.done;n=e.next())if(n=n.value,n in t&&"function"==typeof t[n])return!0;return!1}function u(){}function c(){function t(t){t=t||"[DEFAULT]";var e=i[t];return void 0===e&&h("noApp",{name:t}),e}function e(t,e){Object.keys(r).forEach(function(i){i=n(t,i),null!==i&&s[i]&&s[i](e,t)})}function n(t,e){if("serverAuth"===e)return null;var n=e;return t=t.options,"auth"===e&&(t.serviceAccount||t.credential)&&(n="serverAuth","serverAuth"in r||h("serverAuthMissing")),n}var i={},r={},s={},u={__esModule:!0,initializeApp:function(t,n){return void 0===n?n="[DEFAULT]":"string"==typeof n&&""!==n||h("bad-app-name",{name:n+""}),void 0!==i[n]&&h("dupApp",{name:n}),t=new St(t,n,u),i[n]=t,e(t,"create"),void 0!=t.INTERNAL&&void 0!=t.INTERNAL.getToken||o(t,{INTERNAL:{getToken:function(){return Tt.resolve(null)},addAuthTokenListener:function(){},removeAuthTokenListener:function(){}}}),t},app:t,apps:null,Promise:Tt,SDK_VERSION:"0.0.0",INTERNAL:{registerService:function(e,n,i,a){return r[e]&&h("dupService",{name:e}),r[e]=n,a&&(s[e]=a),n=function(n){return void 0===n&&(n=t()),n[e]()},void 0!==i&&o(n,i),u[e]=n},createFirebaseNamespace:c,extendNamespace:function(t){o(u,t)},createSubscribe:a,ErrorFactory:Et,removeApp:function(t){e(i[t],"delete"),delete i[t]},factories:r,useAsService:n,Promise:tt,deepExtend:o}};return u.default=u,Object.defineProperty(u,"apps",{get:function(){return Object.keys(i).map(function(t){return i[t]})}}),t.App=St,u}function h(t,e){throw Error(f(t,e))}function f(t,e){return e=e||{},e={noApp:"No Firebase App '"+e.name+"' has been created - call Firebase App.initializeApp().","bad-app-name":"Illegal App name: '"+e.name+"'.",dupApp:"Firebase App named '"+e.name+"' already exists.",deleted:"Firebase App named '"+e.name+"' already deleted.",dupService:"Firebase Service named '"+e.name+"' already registered.",serverAuthMissing:"Initializing the Firebase SDK with a service account is only allowed in a Node.js environment. On client devices, you should instead initialize the SDK with an api key and auth domain."}[t],void 0===e?"Application Error: ("+t+")":e}var l,d="function"==typeof Object.defineProperties?Object.defineProperty:function(t,e,n){if(n.get||n.set)throw new TypeError("ES3 does not support getters and setters.");t!=Array.prototype&&t!=Object.prototype&&(t[e]=n.value)},p="undefined"!=typeof window&&window===this?this:"undefined"!=typeof e&&null!=e?e:this,g=function(){g=function(){},p.Symbol||(p.Symbol=v)},b=0,v=function(t){return"jscomp_symbol_"+(t||"")+b++},y=function(){g();var t=p.Symbol.iterator;t||(t=p.Symbol.iterator=p.Symbol("iterator")),"function"!=typeof Array.prototype[t]&&d(Array.prototype,t,{configurable:!0,writable:!0,value:function(){return m(this)}}),y=function(){}},m=function(t){var e=0;return w(function(){return e<t.length?{done:!1,value:t[e++]}:{done:!0}})},w=function(t){return y(),t={next:t},t[p.Symbol.iterator]=function(){return this},t},k=this,E=function(){},T=function(t){var e=typeof t;if("object"==e){if(!t)return"null";if(t instanceof Array)return"array";if(t instanceof Object)return e;var n=Object.prototype.toString.call(t);if("[object Window]"==n)return"object";if("[object Array]"==n||"number"==typeof t.length&&"undefined"!=typeof t.splice&&"undefined"!=typeof t.propertyIsEnumerable&&!t.propertyIsEnumerable("splice"))return"array";if("[object Function]"==n||"undefined"!=typeof t.call&&"undefined"!=typeof t.propertyIsEnumerable&&!t.propertyIsEnumerable("call"))return"function"}else if("function"==e&&"undefined"==typeof t.call)return"object";return e},S=function(t){return"function"==T(t)},A=function(t,e,n){return t.call.apply(t.bind,arguments)},I=function(t,e,n){if(!t)throw Error();if(2<arguments.length){var i=Array.prototype.slice.call(arguments,2);return function(){var n=Array.prototype.slice.call(arguments);return Array.prototype.unshift.apply(n,i),t.apply(e,n)}}return function(){return t.apply(e,arguments)}},C=function(t,e,n){return C=Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf("native code")?A:I,C.apply(null,arguments)},x=function(t,e){var n=Array.prototype.slice.call(arguments,1);return function(){var e=n.slice();return e.push.apply(e,arguments),t.apply(this,e)}},R=function(t,e){function n(){}n.prototype=e.prototype,t.ba=e.prototype,t.prototype=new n,t.prototype.constructor=t,t.aa=function(t,n,i){for(var r=Array(arguments.length-2),o=2;o<arguments.length;o++)r[o-2]=arguments[o];return e.prototype[n].apply(t,r)}};l="undefined"!=typeof window?window:"undefined"!=typeof self?self:e;var O=function(t,e){return function(n,i){e(n,i,t)}},P=function(t,e,n,i){return new(n||(n=Promise))(function(r,o){function a(t){try{u(i.next(t))}catch(t){o(t)}}function s(t){try{u(i.throw(t))}catch(t){o(t)}}function u(t){t.done?r(t.value):new n(function(e){e(t.value)}).then(a,s)}u((i=i.apply(t,e)).next())})};"undefined"!=typeof l.M&&l.M||(l.__extends=t,l.__decorate=i,l.__metadata=r,l.__param=O,l.__awaiter=P);var N=function(t){if(Error.captureStackTrace)Error.captureStackTrace(this,N);else{var e=Error().stack;e&&(this.stack=e)}t&&(this.message=String(t))};R(N,Error),N.prototype.name="CustomError";var D=function(t,e){for(var n=t.split("%s"),i="",r=Array.prototype.slice.call(arguments,1);r.length&&1<n.length;)i+=n.shift()+r.shift();return i+n.join("%s")},j=function(t,e){e.unshift(t),N.call(this,D.apply(null,e)),e.shift()};R(j,N),j.prototype.name="AssertionError";var L=function(t,e,n,i){var r="Assertion failed";if(n)var r=r+(": "+n),o=i;else t&&(r+=": "+t,o=e);throw new j(""+r,o||[])},M=function(t,e,n){t||L("",null,e,Array.prototype.slice.call(arguments,2))},F=function(t,e,n){S(t)||L("Expected function but got %s: %s.",[T(t),t],e,Array.prototype.slice.call(arguments,2))},U=function(t,e,n){this.T=n,this.N=t,this.U=e,this.s=0,this.o=null};U.prototype.get=function(){var t;return 0<this.s?(this.s--,t=this.o,this.o=t.next,t.next=null):t=this.N(),t},U.prototype.put=function(t){this.U(t),this.s<this.T&&(this.s++,t.next=this.o,this.o=t)};var _;t:{var W=k.navigator;if(W){var q=W.userAgent;if(q){_=q;break t}}_=""}var H,K=function(t){k.setTimeout(function(){throw t},0)},V=function(){var t=k.MessageChannel;if("undefined"==typeof t&&"undefined"!=typeof window&&window.postMessage&&window.addEventListener&&-1==_.indexOf("Presto")&&(t=function(){var t=document.createElement("IFRAME");t.style.display="none",t.src="",document.documentElement.appendChild(t);var e=t.contentWindow,t=e.document;t.open(),t.write(""),t.close();var n="callImmediate"+Math.random(),i="file:"==e.location.protocol?"*":e.location.protocol+"//"+e.location.host,t=C(function(t){"*"!=i&&t.origin!=i||t.data!=n||this.port1.onmessage()},this);e.addEventListener("message",t,!1),this.port1={},this.port2={postMessage:function(){e.postMessage(n,i)}}}),"undefined"!=typeof t&&-1==_.indexOf("Trident")&&-1==_.indexOf("MSIE")){var e=new t,n={},i=n;return e.port1.onmessage=function(){if(void 0!==n.next){n=n.next;var t=n.G;n.G=null,t()}},function(t){i.next={G:t},i=i.next,e.port2.postMessage(0)}}return"undefined"!=typeof document&&"onreadystatechange"in document.createElement("SCRIPT")?function(t){var e=document.createElement("SCRIPT");e.onreadystatechange=function(){e.onreadystatechange=null,e.parentNode.removeChild(e),e=null,t(),t=null},document.documentElement.appendChild(e)}:function(t){k.setTimeout(t,0)}},X=function(){this.v=this.f=null},Q=new U(function(){return new B},function(t){t.reset()},100);X.prototype.add=function(t,e){var n=Q.get();n.set(t,e),this.v?this.v.next=n:(M(!this.f),this.f=n),this.v=n},X.prototype.remove=function(){var t=null;return this.f&&(t=this.f,this.f=this.f.next,this.f||(this.v=null),t.next=null),t};var B=function(){this.next=this.scope=this.B=null};B.prototype.set=function(t,e){this.B=t,this.scope=e,this.next=null},B.prototype.reset=function(){this.next=this.scope=this.B=null};var G,J=function(t,e){G||Y(),Z||(G(),Z=!0),z.add(t,e)},Y=function(){var t=k.Promise;if(-1!=String(t).indexOf("[native code]")){var e=t.resolve(void 0);G=function(){e.then($)}}else G=function(){var t=$;!S(k.setImmediate)||k.Window&&k.Window.prototype&&-1==_.indexOf("Edge")&&k.Window.prototype.setImmediate==k.setImmediate?(H||(H=V()),H(t)):k.setImmediate(t)}},Z=!1,z=new X,$=function(){for(var t;t=z.remove();){try{t.B.call(t.scope)}catch(t){K(t)}Q.put(t)}Z=!1},tt=function(t,e){if(this.b=0,this.L=void 0,this.j=this.g=this.u=null,this.m=this.A=!1,t!=E)try{var n=this;t.call(e,function(t){st(n,2,t)},function(t){try{if(t instanceof Error)throw t;throw Error("Promise rejected.")}catch(t){}st(n,3,t)})}catch(t){st(this,3,t)}},et=function(){this.next=this.context=this.h=this.c=this.child=null,this.w=!1};et.prototype.reset=function(){this.context=this.h=this.c=this.child=null,this.w=!1};var nt=new U(function(){return new et},function(t){t.reset()},100),it=function(t,e,n){var i=nt.get();return i.c=t,i.h=e,i.context=n,i},rt=function(t,e,n){ut(t,e,n,null)||J(x(e,t))};tt.prototype.then=function(t,e,n){return null!=t&&F(t,"opt_onFulfilled should be a function."),null!=e&&F(e,"opt_onRejected should be a function. Did you pass opt_context as the second argument instead of the third?"),at(this,S(t)?t:null,S(e)?e:null,n)},tt.prototype.then=tt.prototype.then,tt.prototype.$goog_Thenable=!0,tt.prototype.X=function(t,e){return at(this,null,t,e)};var ot=function(t,e){t.g||2!=t.b&&3!=t.b||ht(t),M(null!=e.c),t.j?t.j.next=e:t.g=e,t.j=e},at=function(t,e,n,i){var r=it(null,null,null);return r.child=new tt(function(t,o){r.c=e?function(n){try{var r=e.call(i,n);t(r)}catch(t){o(t)}}:t,r.h=n?function(e){try{var r=n.call(i,e);t(r)}catch(t){o(t)}}:o}),r.child.u=t,ot(t,r),r.child};tt.prototype.Y=function(t){M(1==this.b),this.b=0,st(this,2,t)},tt.prototype.Z=function(t){M(1==this.b),this.b=0,st(this,3,t)};var st=function(t,e,n){0==t.b&&(t===n&&(e=3,n=new TypeError("Promise cannot resolve to itself")),t.b=1,ut(n,t.Y,t.Z,t)||(t.L=n,t.b=e,t.u=null,ht(t),3!=e||dt(t,n)))},ut=function(t,e,n,i){if(t instanceof tt)return null!=e&&F(e,"opt_onFulfilled should be a function."),null!=n&&F(n,"opt_onRejected should be a function. Did you pass opt_context as the second argument instead of the third?"),ot(t,it(e||E,n||null,i)),!0;var r;if(t)try{r=!!t.$goog_Thenable}catch(t){r=!1}else r=!1;if(r)return t.then(e,n,i),!0;if(r=typeof t,"object"==r&&null!=t||"function"==r)try{var o=t.then;if(S(o))return ct(t,o,e,n,i),!0}catch(t){return n.call(i,t),!0}return!1},ct=function(t,e,n,i,r){var o=!1,a=function(t){o||(o=!0,n.call(r,t))},s=function(t){o||(o=!0,i.call(r,t))};try{e.call(t,a,s)}catch(t){s(t)}},ht=function(t){t.A||(t.A=!0,J(t.P,t))},ft=function(t){var e=null;return t.g&&(e=t.g,t.g=e.next,e.next=null),t.g||(t.j=null),null!=e&&M(null!=e.c),e};tt.prototype.P=function(){for(var t;t=ft(this);){var e=this.b,n=this.L;if(3==e&&t.h&&!t.w){var i;for(i=this;i&&i.m;i=i.u)i.m=!1}if(t.child)t.child.u=null,lt(t,e,n);else try{t.w?t.c.call(t.context):lt(t,e,n)}catch(t){pt.call(null,t)}nt.put(t)}this.A=!1};var lt=function(t,e,n){2==e?t.c.call(t.context,n):t.h&&t.h.call(t.context,n)},dt=function(t,e){t.m=!0,J(function(){t.m&&pt.call(null,e)})},pt=K;tt.all=function(t){return new tt(function(e,n){var i=t.length,r=[];if(i)for(var o,a=function(t,n){i--,r[t]=n,0==i&&e(r)},s=function(t){n(t)},u=0;u<t.length;u++)o=t[u],rt(o,x(a,u),s);else e(r)})},tt.resolve=function(t){if(t instanceof tt)return t;var e=new tt(E);return st(e,2,t),e},tt.reject=function(t){return new tt(function(e,n){n(t)})},tt.prototype.catch=tt.prototype.X;var gt=tt;"undefined"!=typeof Promise&&(gt=Promise);var bt=gt,vt=function(t,e){var n=this;this.a=[],this.K=0,this.task=bt.resolve(),this.l=!1,this.D=e,this.task.then(function(){t(n)}).catch(function(t){n.error(t)})};vt.prototype.next=function(t){yt(this,function(e){e.next(t)})},vt.prototype.error=function(t){yt(this,function(e){e.error(t)}),this.close(t)},vt.prototype.complete=function(){yt(this,function(t){t.complete()}),this.close()},vt.prototype.subscribe=function(t,e,n){var i,r=this;if(void 0===t&&void 0===e&&void 0===n)throw Error("Missing Observer.");return i=s(t)?t:{next:t,error:e,complete:n},void 0===i.next&&(i.next=u),void 0===i.error&&(i.error=u),void 0===i.complete&&(i.complete=u),t=this.$.bind(this,this.a.length),this.l&&this.task.then(function(){try{r.H?i.error(r.H):i.complete()}catch(t){}}),this.a.push(i),t},vt.prototype.$=function(t){void 0!==this.a&&void 0!==this.a[t]&&(delete this.a[t],--this.K,0===this.K&&void 0!==this.D&&this.D(this))};var yt=function(t,e){if(!t.l)for(var n=0;n<t.a.length;n++)mt(t,n,e)},mt=function(t,e,n){t.task.then(function(){if(void 0!==t.a&&void 0!==t.a[e])try{n(t.a[e])}catch(t){"undefined"!=typeof console&&console.error&&console.error(t)}})};vt.prototype.close=function(t){var e=this;this.l||(this.l=!0,void 0!==t&&(this.H=t),this.task.then(function(){e.a=void 0,e.D=void 0}))};var wt=Error.captureStackTrace,kt=function(t,e){if(this.code=t,this.message=e,wt)wt(this,Et.prototype.create);else{var n=Error.apply(this,arguments);this.name="FirebaseError",Object.defineProperty(this,"stack",{get:function(){return n.stack}})}};kt.prototype=Object.create(Error.prototype),kt.prototype.constructor=kt,kt.prototype.name="FirebaseError";var Et=function(t,e,n){this.V=t,this.W=e,this.O=n,this.pattern=/\{\$([^}]+)}/g};Et.prototype.create=function(t,e){void 0===e&&(e={});var n=this.O[t];t=this.V+"/"+t;var i,n=void 0===n?"Error":n.replace(this.pattern,function(t,n){return t=e[n],void 0!==t?t.toString():"<"+n+"?>"}),n=this.W+": "+n+" ("+t+").",n=new kt(t,n);for(i in e)e.hasOwnProperty(i)&&"_"!==i.slice(-1)&&(n[i]=e[i]);return n};var Tt=gt,St=function(t,e,n){var i=this;this.I=n,this.J=!1,this.i={},this.C=e,this.F=o(void 0,t),t="serviceAccount"in this.F,("credential"in this.F||t)&&"undefined"!=typeof console&&console.log("The '"+(t?"serviceAccount":"credential")+"' property specified in the first argument to initializeApp() is deprecated and will be removed in the next major version. You should instead use the 'firebase-admin' package. See https://firebase.google.com/docs/admin/setup for details on how to get started."),Object.keys(n.INTERNAL.factories).forEach(function(t){var e=n.INTERNAL.useAsService(i,t);null!==e&&(e=i.S.bind(i,e),i[t]=e)})};St.prototype.delete=function(){var t=this;return new Tt(function(e){At(t),e()}).then(function(){return t.I.INTERNAL.removeApp(t.C),Tt.all(Object.keys(t.i).map(function(e){return t.i[e].INTERNAL.delete()}))}).then(function(){t.J=!0,t.i={}})},St.prototype.S=function(t){return At(this),void 0===this.i[t]&&(this.i[t]=this.I.INTERNAL.factories[t](this,this.R.bind(this))),this.i[t]},St.prototype.R=function(t){o(this,t)};var At=function(t){t.J&&h(f("deleted",{name:t.C}))};p.Object.defineProperties(St.prototype,{name:{configurable:!0,enumerable:!0,get:function(){return At(this),this.C}},options:{configurable:!0,enumerable:!0,get:function(){return At(this),this.F}}}),St.prototype.name&&St.prototype.options||St.prototype.delete||console.log("dc"),"undefined"!=typeof n&&(n=c())}(),n.SDK_VERSION="3.6.1",t.exports=n}).call(e,function(){return this}())},470:function(module,exports,__webpack_require__){var firebase=__webpack_require__(469);/*! @license Firebase v3.6.1
	    Build: 3.6.1-rc.3
	    Terms: https://firebase.google.com/terms/ */
!function(){var h,aa=aa||{},l=this,ba=function(){},ca=function(){throw Error("unimplemented abstract method")},m=function(t){var e=typeof t;if("object"==e){if(!t)return"null";if(t instanceof Array)return"array";if(t instanceof Object)return e;var n=Object.prototype.toString.call(t);if("[object Window]"==n)return"object";if("[object Array]"==n||"number"==typeof t.length&&"undefined"!=typeof t.splice&&"undefined"!=typeof t.propertyIsEnumerable&&!t.propertyIsEnumerable("splice"))return"array";if("[object Function]"==n||"undefined"!=typeof t.call&&"undefined"!=typeof t.propertyIsEnumerable&&!t.propertyIsEnumerable("call"))return"function"}else if("function"==e&&"undefined"==typeof t.call)return"object";return e},da=function(t){return null===t},ea=function(t){return"array"==m(t)},fa=function(t){var e=m(t);return"array"==e||"object"==e&&"number"==typeof t.length},n=function(t){return"string"==typeof t},ga=function(t){return"number"==typeof t},p=function(t){return"function"==m(t)},ha=function(t){var e=typeof t;return"object"==e&&null!=t||"function"==e},ia=function(t,e,n){return t.call.apply(t.bind,arguments)},ja=function(t,e,n){if(!t)throw Error();if(2<arguments.length){var i=Array.prototype.slice.call(arguments,2);return function(){var n=Array.prototype.slice.call(arguments);return Array.prototype.unshift.apply(n,i),t.apply(e,n)}}return function(){return t.apply(e,arguments)}},q=function(t,e,n){return q=Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf("native code")?ia:ja,q.apply(null,arguments)},ka=function(t,e){var n=Array.prototype.slice.call(arguments,1);return function(){var e=n.slice();return e.push.apply(e,arguments),t.apply(this,e)}},la=Date.now||function(){return+new Date},r=function(t,e){function n(){}n.prototype=e.prototype,t.Rc=e.prototype,t.prototype=new n,t.prototype.constructor=t,t.$e=function(t,n,i){for(var r=Array(arguments.length-2),o=2;o<arguments.length;o++)r[o-2]=arguments[o];return e.prototype[n].apply(t,r)}},t=function(e){if(Error.captureStackTrace)Error.captureStackTrace(this,t);else{var n=Error().stack;n&&(this.stack=n)}e&&(this.message=String(e))};r(t,Error),t.prototype.name="CustomError";var ma=function(t,e){for(var n=t.split("%s"),i="",r=Array.prototype.slice.call(arguments,1);r.length&&1<n.length;)i+=n.shift()+r.shift();return i+n.join("%s")},na=String.prototype.trim?function(t){return t.trim()}:function(t){return t.replace(/^[\s\xa0]+|[\s\xa0]+$/g,"")},pa=/&/g,qa=/</g,ra=/>/g,sa=/"/g,ta=/'/g,ua=/\x00/g,va=/[\x00&<>"']/,u=function(t,e){return-1!=t.indexOf(e)},wa=function(t,e){return t<e?-1:t>e?1:0},xa=function(e,n){n.unshift(e),t.call(this,ma.apply(null,n)),n.shift()};r(xa,t),xa.prototype.name="AssertionError";var ya=function(t,e,n,i){var r="Assertion failed";if(n)var r=r+(": "+n),o=i;else t&&(r+=": "+t,o=e);throw new xa(""+r,o||[])},w=function(t,e,n){t||ya("",null,e,Array.prototype.slice.call(arguments,2))},za=function(t,e){throw new xa("Failure"+(t?": "+t:""),Array.prototype.slice.call(arguments,1))},Aa=function(t,e,n){return ga(t)||ya("Expected number but got %s: %s.",[m(t),t],e,Array.prototype.slice.call(arguments,2)),t},Ba=function(t,e,i){n(t)||ya("Expected string but got %s: %s.",[m(t),t],e,Array.prototype.slice.call(arguments,2))},Ca=function(t,e,n){p(t)||ya("Expected function but got %s: %s.",[m(t),t],e,Array.prototype.slice.call(arguments,2))},Da=Array.prototype.indexOf?function(t,e,n){return w(null!=t.length),Array.prototype.indexOf.call(t,e,n)}:function(t,e,i){if(i=null==i?0:0>i?Math.max(0,t.length+i):i,n(t))return n(e)&&1==e.length?t.indexOf(e,i):-1;for(;i<t.length;i++)if(i in t&&t[i]===e)return i;return-1},x=Array.prototype.forEach?function(t,e,n){w(null!=t.length),Array.prototype.forEach.call(t,e,n)}:function(t,e,i){for(var r=t.length,o=n(t)?t.split(""):t,a=0;a<r;a++)a in o&&e.call(i,o[a],a,t)},Ea=function(t,e){for(var i=n(t)?t.split(""):t,r=t.length-1;0<=r;--r)r in i&&e.call(void 0,i[r],r,t)},Fa=Array.prototype.map?function(t,e,n){return w(null!=t.length),Array.prototype.map.call(t,e,n)}:function(t,e,i){for(var r=t.length,o=Array(r),a=n(t)?t.split(""):t,s=0;s<r;s++)s in a&&(o[s]=e.call(i,a[s],s,t));return o},Ga=Array.prototype.some?function(t,e,n){return w(null!=t.length),Array.prototype.some.call(t,e,n)}:function(t,e,i){for(var r=t.length,o=n(t)?t.split(""):t,a=0;a<r;a++)if(a in o&&e.call(i,o[a],a,t))return!0;return!1},Ia=function(t){var e;t:{e=Ha;for(var i=t.length,r=n(t)?t.split(""):t,o=0;o<i;o++)if(o in r&&e.call(void 0,r[o],o,t)){e=o;break t}e=-1}return 0>e?null:n(t)?t.charAt(e):t[e]},Ja=function(t,e){return 0<=Da(t,e)},La=function(t,e){e=Da(t,e);var n;return(n=0<=e)&&Ka(t,e),n},Ka=function(t,e){return w(null!=t.length),1==Array.prototype.splice.call(t,e,1).length},Ma=function(t,e){var n=0;Ea(t,function(i,r){e.call(void 0,i,r,t)&&Ka(t,r)&&n++})},Na=function(t){return Array.prototype.concat.apply(Array.prototype,arguments)},Oa=function(t){var e=t.length;if(0<e){for(var n=Array(e),i=0;i<e;i++)n[i]=t[i];return n}return[]},Pa=function(t,e){for(var n in t)e.call(void 0,t[n],n,t)},Qa=function(t){var e,n=[],i=0;for(e in t)n[i++]=t[e];return n},Ra=function(t){var e,n=[],i=0;for(e in t)n[i++]=e;return n},Sa=function(t){for(var e in t)return!1;return!0},Ta=function(t,e){for(var n in t)if(!(n in e)||t[n]!==e[n])return!1;for(n in e)if(!(n in t))return!1;return!0},Ua=function(t){var e,n={};for(e in t)n[e]=t[e];return n},Va="constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" "),Wa=function(t,e){for(var n,i,r=1;r<arguments.length;r++){i=arguments[r];for(n in i)t[n]=i[n];for(var o=0;o<Va.length;o++)n=Va[o],Object.prototype.hasOwnProperty.call(i,n)&&(t[n]=i[n])}},Xa;t:{var Ya=l.navigator;if(Ya){var Za=Ya.userAgent;if(Za){Xa=Za;break t}}Xa=""}var y=function(t){return u(Xa,t)},$a=function(t){return $a[" "](t),t};$a[" "]=ba;var bb=function(t,e){var n=ab;return Object.prototype.hasOwnProperty.call(n,t)?n[t]:n[t]=e(t)},cb=y("Opera"),z=y("Trident")||y("MSIE"),db=y("Edge"),eb=db||z,fb=y("Gecko")&&!(u(Xa.toLowerCase(),"webkit")&&!y("Edge"))&&!(y("Trident")||y("MSIE"))&&!y("Edge"),gb=u(Xa.toLowerCase(),"webkit")&&!y("Edge"),hb=function(){var t=l.document;return t?t.documentMode:void 0},ib;t:{var jb="",kb=function(){var t=Xa;return fb?/rv\:([^\);]+)(\)|;)/.exec(t):db?/Edge\/([\d\.]+)/.exec(t):z?/\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/.exec(t):gb?/WebKit\/(\S+)/.exec(t):cb?/(?:Version)[ \/]?(\S+)/.exec(t):void 0}();if(kb&&(jb=kb?kb[1]:""),z){var lb=hb();if(null!=lb&&lb>parseFloat(jb)){ib=String(lb);break t}}ib=jb}var mb=ib,ab={},A=function(t){return bb(t,function(){for(var e=0,n=na(String(mb)).split("."),i=na(String(t)).split("."),r=Math.max(n.length,i.length),o=0;0==e&&o<r;o++){var a=n[o]||"",s=i[o]||"";do{if(a=/(\d*)(\D*)(.*)/.exec(a)||["","","",""],s=/(\d*)(\D*)(.*)/.exec(s)||["","","",""],0==a[0].length&&0==s[0].length)break;e=wa(0==a[1].length?0:parseInt(a[1],10),0==s[1].length?0:parseInt(s[1],10))||wa(0==a[2].length,0==s[2].length)||wa(a[2],s[2]),a=a[3],s=s[3]}while(0==e)}return 0<=e})},nb,ob=l.document;nb=ob&&z?hb()||("CSS1Compat"==ob.compatMode?parseInt(mb,10):5):void 0;var pb=null,qb=null,sb=function(t){var e="";return rb(t,function(t){e+=String.fromCharCode(t)}),e},rb=function(t,e){function n(e){for(;i<t.length;){var n=t.charAt(i++),r=qb[n];if(null!=r)return r;if(!/^[\s\xa0]*$/.test(n))throw Error("Unknown base64 encoding at char: "+n)}return e}tb();for(var i=0;;){var r=n(-1),o=n(0),a=n(64),s=n(64);if(64===s&&-1===r)break;e(r<<2|o>>4),64!=a&&(e(o<<4&240|a>>2),64!=s&&e(a<<6&192|s))}},tb=function(){if(!pb){pb={},qb={};for(var t=0;65>t;t++)pb[t]="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".charAt(t),qb[pb[t]]=t,62<=t&&(qb["ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_.".charAt(t)]=t)}},ub=!z||9<=Number(nb),vb=z&&!A("9");!gb||A("528"),fb&&A("1.9b")||z&&A("8")||cb&&A("9.5")||gb&&A("528"),fb&&!A("8")||z&&A("9");var wb=function(){this.za=this.za,this.Rb=this.Rb};wb.prototype.za=!1,wb.prototype.isDisposed=function(){return this.za},wb.prototype.Na=function(){if(this.Rb)for(;this.Rb.length;)this.Rb.shift()()};var xb=function(t,e){this.type=t,this.currentTarget=this.target=e,this.defaultPrevented=this.Ua=!1,this.ud=!0};xb.prototype.preventDefault=function(){this.defaultPrevented=!0,this.ud=!1};var yb=function(t,e){xb.call(this,t?t.type:""),this.relatedTarget=this.currentTarget=this.target=null,this.charCode=this.keyCode=this.button=this.screenY=this.screenX=this.clientY=this.clientX=this.offsetY=this.offsetX=0,this.metaKey=this.shiftKey=this.altKey=this.ctrlKey=!1,this.lb=this.state=null,t&&this.init(t,e)};r(yb,xb),yb.prototype.init=function(t,e){var n=this.type=t.type,i=t.changedTouches?t.changedTouches[0]:null;if(this.target=t.target||t.srcElement,this.currentTarget=e,e=t.relatedTarget){if(fb){var r;t:{try{$a(e.nodeName),r=!0;break t}catch(t){}r=!1}r||(e=null)}}else"mouseover"==n?e=t.fromElement:"mouseout"==n&&(e=t.toElement);this.relatedTarget=e,null===i?(this.offsetX=gb||void 0!==t.offsetX?t.offsetX:t.layerX,this.offsetY=gb||void 0!==t.offsetY?t.offsetY:t.layerY,this.clientX=void 0!==t.clientX?t.clientX:t.pageX,this.clientY=void 0!==t.clientY?t.clientY:t.pageY,this.screenX=t.screenX||0,this.screenY=t.screenY||0):(this.clientX=void 0!==i.clientX?i.clientX:i.pageX,this.clientY=void 0!==i.clientY?i.clientY:i.pageY,this.screenX=i.screenX||0,this.screenY=i.screenY||0),this.button=t.button,this.keyCode=t.keyCode||0,this.charCode=t.charCode||("keypress"==n?t.keyCode:0),this.ctrlKey=t.ctrlKey,this.altKey=t.altKey,this.shiftKey=t.shiftKey,this.metaKey=t.metaKey,this.state=t.state,this.lb=t,t.defaultPrevented&&this.preventDefault()},yb.prototype.preventDefault=function(){yb.Rc.preventDefault.call(this);var t=this.lb;if(t.preventDefault)t.preventDefault();else if(t.returnValue=!1,vb)try{(t.ctrlKey||112<=t.keyCode&&123>=t.keyCode)&&(t.keyCode=-1)}catch(t){}},yb.prototype.ee=function(){return this.lb};var zb="closure_listenable_"+(1e6*Math.random()|0),Ab=0,Bb=function(t,e,n,i,r){this.listener=t,this.Wb=null,this.src=e,this.type=n,this.capture=!!i,this.Ib=r,this.key=++Ab,this.Za=this.Cb=!1},Cb=function(t){t.Za=!0,t.listener=null,t.Wb=null,t.src=null,t.Ib=null},Db=function(t){this.src=t,this.v={},this.zb=0};Db.prototype.add=function(t,e,n,i,r){var o=t.toString();t=this.v[o],t||(t=this.v[o]=[],this.zb++);var a=Eb(t,e,i,r);return-1<a?(e=t[a],n||(e.Cb=!1)):(e=new Bb(e,this.src,o,!!i,r),e.Cb=n,t.push(e)),e},Db.prototype.remove=function(t,e,n,i){if(t=t.toString(),!(t in this.v))return!1;var r=this.v[t];return e=Eb(r,e,n,i),-1<e&&(Cb(r[e]),Ka(r,e),0==r.length&&(delete this.v[t],this.zb--),!0)};var Fb=function(t,e){var n=e.type;n in t.v&&La(t.v[n],e)&&(Cb(e),0==t.v[n].length&&(delete t.v[n],t.zb--))};Db.prototype.vc=function(t,e,n,i){t=this.v[t.toString()];var r=-1;return t&&(r=Eb(t,e,n,i)),-1<r?t[r]:null};var Eb=function(t,e,n,i){for(var r=0;r<t.length;++r){var o=t[r];if(!o.Za&&o.listener==e&&o.capture==!!n&&o.Ib==i)return r}return-1},Gb="closure_lm_"+(1e6*Math.random()|0),Hb={},Ib=0,Jb=function(t,e,n,i,r){if(ea(e))for(var o=0;o<e.length;o++)Jb(t,e[o],n,i,r);else n=Kb(n),t&&t[zb]?t.listen(e,n,i,r):Lb(t,e,n,!1,i,r)},Lb=function(t,e,n,i,r,o){if(!e)throw Error("Invalid event type");var a=!!r,s=Mb(t);if(s||(t[Gb]=s=new Db(t)),n=s.add(e,n,i,r,o),!n.Wb){if(i=Nb(),n.Wb=i,i.src=t,i.listener=n,t.addEventListener)t.addEventListener(e.toString(),i,a);else{if(!t.attachEvent)throw Error("addEventListener and attachEvent are unavailable.");t.attachEvent(Ob(e.toString()),i)}Ib++}},Nb=function(){var t=Pb,e=ub?function(n){return t.call(e.src,e.listener,n)}:function(n){if(n=t.call(e.src,e.listener,n),!n)return n};return e},Qb=function(t,e,n,i,r){if(ea(e))for(var o=0;o<e.length;o++)Qb(t,e[o],n,i,r);else n=Kb(n),t&&t[zb]?Rb(t,e,n,i,r):Lb(t,e,n,!0,i,r)},Sb=function(t,e,n,i,r){if(ea(e))for(var o=0;o<e.length;o++)Sb(t,e[o],n,i,r);else n=Kb(n),t&&t[zb]?t.$.remove(String(e),n,i,r):t&&(t=Mb(t))&&(e=t.vc(e,n,!!i,r))&&Tb(e)},Tb=function(t){if(!ga(t)&&t&&!t.Za){var e=t.src;if(e&&e[zb])Fb(e.$,t);else{var n=t.type,i=t.Wb;e.removeEventListener?e.removeEventListener(n,i,t.capture):e.detachEvent&&e.detachEvent(Ob(n),i),Ib--,(n=Mb(e))?(Fb(n,t),0==n.zb&&(n.src=null,e[Gb]=null)):Cb(t)}}},Ob=function(t){return t in Hb?Hb[t]:Hb[t]="on"+t},Vb=function(t,e,n,i){var r=!0;if((t=Mb(t))&&(e=t.v[e.toString()]))for(e=e.concat(),t=0;t<e.length;t++){var o=e[t];o&&o.capture==n&&!o.Za&&(o=Ub(o,i),r=r&&!1!==o)}return r},Ub=function(t,e){var n=t.listener,i=t.Ib||t.src;return t.Cb&&Tb(t),n.call(i,e)},Pb=function(t,e){if(t.Za)return!0;if(!ub){if(!e)t:{e=["window","event"];for(var n,i=l;n=e.shift();){if(null==i[n]){e=null;break t}i=i[n]}e=i}if(n=e,e=new yb(n,this),i=!0,!(0>n.keyCode||void 0!=n.returnValue)){t:{var r=!1;if(0==n.keyCode)try{n.keyCode=-1;break t}catch(t){r=!0}(r||void 0==n.returnValue)&&(n.returnValue=!0)}for(n=[],r=e.currentTarget;r;r=r.parentNode)n.push(r);for(t=t.type,r=n.length-1;!e.Ua&&0<=r;r--){e.currentTarget=n[r];var o=Vb(n[r],t,!0,e),i=i&&o}for(r=0;!e.Ua&&r<n.length;r++)e.currentTarget=n[r],o=Vb(n[r],t,!1,e),i=i&&o}return i}return Ub(t,new yb(e,this))},Mb=function(t){return t=t[Gb],t instanceof Db?t:null},Wb="__closure_events_fn_"+(1e9*Math.random()>>>0),Kb=function(t){return w(t,"Listener can not be null."),p(t)?t:(w(t.handleEvent,"An object listener must have handleEvent method."),t[Wb]||(t[Wb]=function(e){return t.handleEvent(e)}),t[Wb])},Xb=/^[+a-zA-Z0-9_.!#$%&'*\/=?^`{|}~-]+@([a-zA-Z0-9-]+\.)+[a-zA-Z0-9]{2,63}$/,Zb=function(){this.fc="",this.Md=Yb};Zb.prototype.Lb=!0,Zb.prototype.Gb=function(){return this.fc},Zb.prototype.toString=function(){return"Const{"+this.fc+"}"};var $b=function(t){return t instanceof Zb&&t.constructor===Zb&&t.Md===Yb?t.fc:(za("expected object of type Const, got '"+t+"'"),"type_error:Const")},Yb={},ac=function(t){var e=new Zb;return e.fc=t,e};ac("");var B=function(){this.ka="",this.Ld=bc};B.prototype.Lb=!0,B.prototype.Gb=function(){return this.ka},B.prototype.toString=function(){return"SafeUrl{"+this.ka+"}"};var cc=function(t){return t instanceof B&&t.constructor===B&&t.Ld===bc?t.ka:(za("expected object of type SafeUrl, got '"+t+"' of type "+m(t)),"type_error:SafeUrl")},dc=/^(?:(?:https?|mailto|ftp):|[^&:\/?#]*(?:[\/?#]|$))/i,fc=function(t){return t instanceof B?t:(t=t.Lb?t.Gb():String(t),dc.test(t)||(t="about:invalid#zClosurez"),ec(t))},bc={},ec=function(t){var e=new B;return e.ka=t,e};ec("about:blank");var gc=function(t){return!/^\s*$/.test(t)&&/^[\],:{}\s\u2028\u2029]*$/.test(t.replace(/\\["\\\/bfnrtu]/g,"@").replace(/(?:"[^"\\\n\r\u2028\u2029\x00-\x08\x0a-\x1f]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?)[\s\u2028\u2029]*(?=:|,|]|}|$)/g,"]").replace(/(?:^|:|,)(?:[\s\u2028\u2029]*\[)+/g,""))},hc=function(a){if(a=String(a),gc(a))try{return eval("("+a+")")}catch(t){}throw Error("Invalid JSON string: "+a)},kc=function(t){var e=[];return ic(new jc,t,e),e.join("")},jc=function(){this.$b=void 0},ic=function(t,e,n){if(null==e)n.push("null");else{if("object"==typeof e){if(ea(e)){var i=e;e=i.length,n.push("[");for(var r="",o=0;o<e;o++)n.push(r),r=i[o],ic(t,t.$b?t.$b.call(i,String(o),r):r,n),r=",";return void n.push("]")}if(!(e instanceof String||e instanceof Number||e instanceof Boolean)){n.push("{"),o="";for(i in e)Object.prototype.hasOwnProperty.call(e,i)&&(r=e[i],"function"!=typeof r&&(n.push(o),lc(i,n),n.push(":"),ic(t,t.$b?t.$b.call(e,i,r):r,n),o=","));return void n.push("}")}e=e.valueOf()}switch(typeof e){case"string":lc(e,n);break;case"number":n.push(isFinite(e)&&!isNaN(e)?String(e):"null");break;case"boolean":n.push(String(e));break;case"function":n.push("null");break;default:throw Error("Unknown type: "+typeof e)}}},mc={'"':'\\"',"\\":"\\\\","/":"\\/","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t","\v":"\\u000b"},nc=/\uffff/.test("￿")?/[\\\"\x00-\x1f\x7f-\uffff]/g:/[\\\"\x00-\x1f\x7f-\xff]/g,lc=function(t,e){e.push('"',t.replace(nc,function(t){var e=mc[t];return e||(e="\\u"+(65536|t.charCodeAt(0)).toString(16).substr(1),mc[t]=e),e}),'"')},oc=function(){};oc.prototype.Vc=null,oc.prototype.kb=ca;var pc=function(t){return t.Vc||(t.Vc=t.Ob())};oc.prototype.Ob=ca;var qc,rc=function(){};r(rc,oc),rc.prototype.kb=function(){var t=sc(this);return t?new ActiveXObject(t):new XMLHttpRequest},rc.prototype.Ob=function(){var t={};return sc(this)&&(t[0]=!0,t[1]=!0),t};var sc=function(t){if(!t.jd&&"undefined"==typeof XMLHttpRequest&&"undefined"!=typeof ActiveXObject){for(var e=["MSXML2.XMLHTTP.6.0","MSXML2.XMLHTTP.3.0","MSXML2.XMLHTTP","Microsoft.XMLHTTP"],n=0;n<e.length;n++){var i=e[n];try{return new ActiveXObject(i),t.jd=i}catch(t){}}throw Error("Could not create ActiveXObject. ActiveX might be disabled, or MSXML might not be installed")}return t.jd};qc=new rc;var tc=function(){};r(tc,oc),tc.prototype.kb=function(){var t=new XMLHttpRequest;if("withCredentials"in t)return t;if("undefined"!=typeof XDomainRequest)return new uc;throw Error("Unsupported browser")},tc.prototype.Ob=function(){return{}};var uc=function(){this.na=new XDomainRequest,this.readyState=0,this.onreadystatechange=null,this.responseText="",this.status=-1,this.statusText=this.responseXML=null,this.na.onload=q(this.ie,this),this.na.onerror=q(this.gd,this),this.na.onprogress=q(this.je,this),this.na.ontimeout=q(this.ke,this)};h=uc.prototype,h.open=function(t,e,n){if(null!=n&&!n)throw Error("Only async requests are supported.");this.na.open(t,e)},h.send=function(t){if(t){if("string"!=typeof t)throw Error("Only string data is supported");this.na.send(t)}else this.na.send()},h.abort=function(){this.na.abort()},h.setRequestHeader=function(){},h.ie=function(){this.status=200,this.responseText=this.na.responseText,vc(this,4)},h.gd=function(){this.status=500,this.responseText="",vc(this,4)},h.ke=function(){this.gd()},h.je=function(){this.status=200,vc(this,1)};var vc=function(t,e){t.readyState=e,t.onreadystatechange&&t.onreadystatechange()},xc=function(){this.Ub="",this.Nd=wc};xc.prototype.Lb=!0,xc.prototype.Gb=function(){return this.Ub},xc.prototype.toString=function(){return"TrustedResourceUrl{"+this.Ub+"}"};var wc={},zc=function(){this.ka="",this.Kd=yc};zc.prototype.Lb=!0,zc.prototype.Gb=function(){return this.ka},zc.prototype.toString=function(){return"SafeHtml{"+this.ka+"}"};var Ac=function(t){return t instanceof zc&&t.constructor===zc&&t.Kd===yc?t.ka:(za("expected object of type SafeHtml, got '"+t+"' of type "+m(t)),"type_error:SafeHtml")},yc={};zc.prototype.re=function(t){return this.ka=t,this},!fb&&!z||z&&9<=Number(nb)||fb&&A("1.9.1"),z&&A("9");var Cc=function(t,e){Pa(e,function(e,n){"style"==n?t.style.cssText=e:"class"==n?t.className=e:"for"==n?t.htmlFor=e:Bc.hasOwnProperty(n)?t.setAttribute(Bc[n],e):0==n.lastIndexOf("aria-",0)||0==n.lastIndexOf("data-",0)?t.setAttribute(n,e):t[n]=e})},Bc={cellpadding:"cellPadding",cellspacing:"cellSpacing",colspan:"colSpan",frameborder:"frameBorder",height:"height",maxlength:"maxLength",nonce:"nonce",role:"role",rowspan:"rowSpan",type:"type",usemap:"useMap",valign:"vAlign",width:"width"},Dc=function(t,e,n){this.ue=n,this.Ud=t,this.Ge=e,this.Qb=0,this.Jb=null};Dc.prototype.get=function(){var t;return 0<this.Qb?(this.Qb--,t=this.Jb,this.Jb=t.next,t.next=null):t=this.Ud(),t},Dc.prototype.put=function(t){this.Ge(t),this.Qb<this.ue&&(this.Qb++,t.next=this.Jb,this.Jb=t)};var Ec=function(t){l.setTimeout(function(){throw t},0)},Fc,Gc=function(){var t=l.MessageChannel;if("undefined"==typeof t&&"undefined"!=typeof window&&window.postMessage&&window.addEventListener&&!y("Presto")&&(t=function(){var t=document.createElement("IFRAME");t.style.display="none",t.src="",document.documentElement.appendChild(t);var e=t.contentWindow,t=e.document;t.open(),t.write(""),t.close();var n="callImmediate"+Math.random(),i="file:"==e.location.protocol?"*":e.location.protocol+"//"+e.location.host,t=q(function(t){"*"!=i&&t.origin!=i||t.data!=n||this.port1.onmessage()},this);e.addEventListener("message",t,!1),this.port1={},this.port2={postMessage:function(){e.postMessage(n,i)}}}),"undefined"!=typeof t&&!y("Trident")&&!y("MSIE")){var e=new t,n={},i=n;return e.port1.onmessage=function(){if(void 0!==n.next){n=n.next;var t=n.Zc;n.Zc=null,t()}},function(t){i.next={Zc:t},i=i.next,e.port2.postMessage(0)}}return"undefined"!=typeof document&&"onreadystatechange"in document.createElement("SCRIPT")?function(t){var e=document.createElement("SCRIPT");e.onreadystatechange=function(){e.onreadystatechange=null,e.parentNode.removeChild(e),e=null,t(),t=null},document.documentElement.appendChild(e)}:function(t){l.setTimeout(t,0)}},Hc=function(){this.kc=this.Ia=null},Jc=new Dc(function(){return new Ic},function(t){t.reset()},100);Hc.prototype.add=function(t,e){var n=Jc.get();n.set(t,e),this.kc?this.kc.next=n:(w(!this.Ia),this.Ia=n),this.kc=n},Hc.prototype.remove=function(){var t=null;return this.Ia&&(t=this.Ia,this.Ia=this.Ia.next,this.Ia||(this.kc=null),t.next=null),t};var Ic=function(){this.next=this.scope=this.uc=null};Ic.prototype.set=function(t,e){this.uc=t,this.scope=e,this.next=null},Ic.prototype.reset=function(){this.next=this.scope=this.uc=null};var Oc=function(t,e){Kc||Lc(),Mc||(Kc(),Mc=!0),Nc.add(t,e)},Kc,Lc=function(){var t=l.Promise;if(-1!=String(t).indexOf("[native code]")){var e=t.resolve(void 0);Kc=function(){e.then(Pc)}}else Kc=function(){var t=Pc;!p(l.setImmediate)||l.Window&&l.Window.prototype&&!y("Edge")&&l.Window.prototype.setImmediate==l.setImmediate?(Fc||(Fc=Gc()),Fc(t)):l.setImmediate(t)}},Mc=!1,Nc=new Hc,Pc=function(){for(var t;t=Nc.remove();){try{t.uc.call(t.scope)}catch(t){Ec(t)}Jc.put(t)}Mc=!1},Qc=function(t){t.prototype.then=t.prototype.then,t.prototype.$goog_Thenable=!0},Rc=function(t){if(!t)return!1;try{return!!t.$goog_Thenable}catch(t){return!1}},C=function(t,e){if(this.G=0,this.la=void 0,this.La=this.ga=this.m=null,this.Hb=this.tc=!1,t!=ba)try{var n=this;t.call(e,function(t){Sc(n,2,t)},function(t){if(!(t instanceof Tc))try{if(t instanceof Error)throw t;throw Error("Promise rejected.")}catch(t){}Sc(n,3,t)})}catch(t){Sc(this,3,t)}},Uc=function(){this.next=this.context=this.Ra=this.Da=this.child=null,this.ib=!1};Uc.prototype.reset=function(){this.context=this.Ra=this.Da=this.child=null,this.ib=!1};var Vc=new Dc(function(){return new Uc},function(t){t.reset()},100),Wc=function(t,e,n){var i=Vc.get();return i.Da=t,i.Ra=e,i.context=n,i},D=function(t){if(t instanceof C)return t;var e=new C(ba);return Sc(e,2,t),e},E=function(t){return new C(function(e,n){n(t)})},Yc=function(t,e,n){Xc(t,e,n,null)||Oc(ka(e,t))},Zc=function(t){return new C(function(e){var n=t.length,i=[];if(n)for(var r,o=function(t,r,o){n--,i[t]=r?{de:!0,value:o}:{de:!1,reason:o},0==n&&e(i)},a=0;a<t.length;a++)r=t[a],Yc(r,ka(o,a,!0),ka(o,a,!1));else e(i)})};C.prototype.then=function(t,e,n){return null!=t&&Ca(t,"opt_onFulfilled should be a function."),null!=e&&Ca(e,"opt_onRejected should be a function. Did you pass opt_context as the second argument instead of the third?"),$c(this,p(t)?t:null,p(e)?e:null,n)},Qc(C);var bd=function(t,e){return e=Wc(e,e,void 0),e.ib=!0,ad(t,e),t};C.prototype.h=function(t,e){return $c(this,null,t,e)},C.prototype.cancel=function(t){0==this.G&&Oc(function(){var e=new Tc(t);cd(this,e)},this)};var cd=function(t,e){if(0==t.G)if(t.m){var n=t.m;if(n.ga){for(var i=0,r=null,o=null,a=n.ga;a&&(a.ib||(i++,a.child==t&&(r=a),!(r&&1<i)));a=a.next)r||(o=a);r&&(0==n.G&&1==i?cd(n,e):(o?(i=o,w(n.ga),w(null!=i),i.next==n.La&&(n.La=i),i.next=i.next.next):dd(n),ed(n,r,3,e)))}t.m=null}else Sc(t,3,e)},ad=function(t,e){t.ga||2!=t.G&&3!=t.G||fd(t),w(null!=e.Da),t.La?t.La.next=e:t.ga=e,t.La=e},$c=function(t,e,n,i){var r=Wc(null,null,null);return r.child=new C(function(t,o){r.Da=e?function(n){try{var r=e.call(i,n);t(r)}catch(t){o(t)}}:t,r.Ra=n?function(e){try{var r=n.call(i,e);void 0===r&&e instanceof Tc?o(e):t(r)}catch(t){o(t)}}:o}),r.child.m=t,ad(t,r),r.child};C.prototype.Qe=function(t){w(1==this.G),this.G=0,Sc(this,2,t)},C.prototype.Re=function(t){w(1==this.G),this.G=0,Sc(this,3,t)};var Sc=function(t,e,n){0==t.G&&(t===n&&(e=3,n=new TypeError("Promise cannot resolve to itself")),t.G=1,Xc(n,t.Qe,t.Re,t)||(t.la=n,t.G=e,t.m=null,fd(t),3!=e||n instanceof Tc||gd(t,n)))},Xc=function(t,e,n,i){if(t instanceof C)return null!=e&&Ca(e,"opt_onFulfilled should be a function."),null!=n&&Ca(n,"opt_onRejected should be a function. Did you pass opt_context as the second argument instead of the third?"),ad(t,Wc(e||ba,n||null,i)),!0;if(Rc(t))return t.then(e,n,i),!0;if(ha(t))try{var r=t.then;if(p(r))return hd(t,r,e,n,i),!0}catch(t){return n.call(i,t),!0}return!1},hd=function(t,e,n,i,r){var o=!1,a=function(t){o||(o=!0,n.call(r,t))},s=function(t){o||(o=!0,i.call(r,t))};try{e.call(t,a,s)}catch(t){s(t)}},fd=function(t){t.tc||(t.tc=!0,Oc(t.Zd,t))},dd=function(t){var e=null;return t.ga&&(e=t.ga,t.ga=e.next,e.next=null),t.ga||(t.La=null),null!=e&&w(null!=e.Da),e};C.prototype.Zd=function(){for(var t;t=dd(this);)ed(this,t,this.G,this.la);this.tc=!1};var ed=function(t,e,n,i){if(3==n&&e.Ra&&!e.ib)for(;t&&t.Hb;t=t.m)t.Hb=!1;if(e.child)e.child.m=null,id(e,n,i);else try{e.ib?e.Da.call(e.context):id(e,n,i)}catch(t){jd.call(null,t)}Vc.put(e)},id=function(t,e,n){2==e?t.Da.call(t.context,n):t.Ra&&t.Ra.call(t.context,n)},gd=function(t,e){t.Hb=!0,Oc(function(){t.Hb&&jd.call(null,e)})},jd=Ec,Tc=function(e){t.call(this,e)};r(Tc,t),Tc.prototype.name="cancel";var F=function(t,e){this.bc=[],this.od=t,this.bd=e||null,this.nb=this.Pa=!1,this.la=void 0,this.Pc=this.Uc=this.oc=!1,this.ic=0,this.m=null,this.pc=0};F.prototype.cancel=function(t){if(this.Pa)this.la instanceof F&&this.la.cancel();else{if(this.m){var e=this.m;delete this.m,t?e.cancel(t):(e.pc--,0>=e.pc&&e.cancel())}this.od?this.od.call(this.bd,this):this.Pc=!0,this.Pa||kd(this,new ld)}},F.prototype.$c=function(t,e){this.oc=!1,md(this,t,e)};var md=function(t,e,n){t.Pa=!0,t.la=n,t.nb=!e,nd(t)},pd=function(t){if(t.Pa){if(!t.Pc)throw new od;t.Pc=!1}};F.prototype.callback=function(t){pd(this),qd(t),md(this,!0,t)};var kd=function(t,e){pd(t),qd(e),md(t,!1,e)},qd=function(t){w(!(t instanceof F),"An execution sequence may not be initiated with a blocking Deferred.")},ud=function(t){var e=rd("https://apis.google.com/js/client.js?onload="+sd);td(e,null,t,void 0)},td=function(t,e,n,i){w(!t.Uc,"Blocking Deferreds can not be re-used"),t.bc.push([e,n,i]),t.Pa&&nd(t)};F.prototype.then=function(t,e,n){var i,r,o=new C(function(t,e){i=t,r=e});return td(this,i,function(t){t instanceof ld?o.cancel():r(t)}),o.then(t,e,n)},Qc(F);var vd=function(t){return Ga(t.bc,function(t){return p(t[1])})},nd=function(t){if(t.ic&&t.Pa&&vd(t)){var e=t.ic,n=wd[e];n&&(l.clearTimeout(n.ob),delete wd[e]),t.ic=0}t.m&&(t.m.pc--,delete t.m);for(var e=t.la,i=n=!1;t.bc.length&&!t.oc;){var r=t.bc.shift(),o=r[0],a=r[1],r=r[2];if(o=t.nb?a:o)try{var s=o.call(r||t.bd,e);void 0!==s&&(t.nb=t.nb&&(s==e||s instanceof Error),t.la=e=s),(Rc(e)||"function"==typeof l.Promise&&e instanceof l.Promise)&&(i=!0,t.oc=!0)}catch(i){e=i,t.nb=!0,vd(t)||(n=!0)}}t.la=e,i&&(s=q(t.$c,t,!0),i=q(t.$c,t,!1),e instanceof F?(td(e,s,i),e.Uc=!0):e.then(s,i)),n&&(e=new xd(e),wd[e.ob]=e,t.ic=e.ob)},od=function(){t.call(this)};r(od,t),od.prototype.message="Deferred has already fired",od.prototype.name="AlreadyCalledError";var ld=function(){t.call(this)};r(ld,t),ld.prototype.message="Deferred was canceled",ld.prototype.name="CanceledError";var xd=function(t){this.ob=l.setTimeout(q(this.Pe,this),0),this.K=t};xd.prototype.Pe=function(){throw w(wd[this.ob],"Cannot throw an error that is not scheduled."),delete wd[this.ob],this.K};var wd={},rd=function(t){var e=new xc;return e.Ub=t,yd(e)},yd=function(t){var e,n={},i=n.document||document;t instanceof xc&&t.constructor===xc&&t.Nd===wc?e=t.Ub:(za("expected object of type TrustedResourceUrl, got '"+t+"' of type "+m(t)),e="type_error:TrustedResourceUrl");var r=document.createElement("SCRIPT");t={vd:r,yb:void 0};var o=new F(zd,t),a=null,s=null!=n.timeout?n.timeout:5e3;return 0<s&&(a=window.setTimeout(function(){Ad(r,!0),kd(o,new Bd(1,"Timeout reached for loading script "+e))},s),t.yb=a),r.onload=r.onreadystatechange=function(){r.readyState&&"loaded"!=r.readyState&&"complete"!=r.readyState||(Ad(r,n.af||!1,a),o.callback(null))},r.onerror=function(){Ad(r,!0,a),kd(o,new Bd(0,"Error while loading script "+e))},t=n.attributes||{},Wa(t,{type:"text/javascript",charset:"UTF-8",src:e}),Cc(r,t),Cd(i).appendChild(r),o},Cd=function(t){var e;return(e=(t||document).getElementsByTagName("HEAD"))&&0!=e.length?e[0]:t.documentElement},zd=function(){if(this&&this.vd){var t=this.vd;t&&"SCRIPT"==t.tagName&&Ad(t,!0,this.yb)}},Ad=function(t,e,n){null!=n&&l.clearTimeout(n),t.onload=ba,t.onerror=ba,t.onreadystatechange=ba,e&&window.setTimeout(function(){t&&t.parentNode&&t.parentNode.removeChild(t)},0)},Bd=function(e,n){var i="Jsloader error (code #"+e+")";n&&(i+=": "+n),t.call(this,i),this.code=e};r(Bd,t);var G=function(){wb.call(this),this.$=new Db(this),this.Qd=this,this.Ec=null};r(G,wb),G.prototype[zb]=!0,h=G.prototype,h.addEventListener=function(t,e,n,i){Jb(this,t,e,n,i)},h.removeEventListener=function(t,e,n,i){Sb(this,t,e,n,i)},h.dispatchEvent=function(t){Dd(this);var e,i=this.Ec;if(i){e=[];for(var r=1;i;i=i.Ec)e.push(i),w(1e3>++r,"infinite loop")}if(i=this.Qd,r=t.type||t,n(t))t=new xb(t,i);else if(t instanceof xb)t.target=t.target||i;else{var o=t;t=new xb(r,i),Wa(t,o)}var a,o=!0;if(e)for(var s=e.length-1;!t.Ua&&0<=s;s--)a=t.currentTarget=e[s],o=Ed(a,r,!0,t)&&o;if(t.Ua||(a=t.currentTarget=i,o=Ed(a,r,!0,t)&&o,t.Ua||(o=Ed(a,r,!1,t)&&o)),e)for(s=0;!t.Ua&&s<e.length;s++)a=t.currentTarget=e[s],o=Ed(a,r,!1,t)&&o;return o},h.Na=function(){if(G.Rc.Na.call(this),this.$){var t,e=this.$,n=0;for(t in e.v){for(var i=e.v[t],r=0;r<i.length;r++)++n,Cb(i[r]);delete e.v[t],e.zb--}}this.Ec=null},h.listen=function(t,e,n,i){return Dd(this),this.$.add(String(t),e,!1,n,i)};var Rb=function(t,e,n,i,r){t.$.add(String(e),n,!0,i,r)},Ed=function(t,e,n,i){if(e=t.$.v[String(e)],!e)return!0;e=e.concat();for(var r=!0,o=0;o<e.length;++o){var a=e[o];if(a&&!a.Za&&a.capture==n){var s=a.listener,u=a.Ib||a.src;a.Cb&&Fb(t.$,a),r=!1!==s.call(u,i)&&r}}return r&&0!=i.ud};G.prototype.vc=function(t,e,n,i){return this.$.vc(String(t),e,n,i)};var Dd=function(t){w(t.$,"Event target is not initialized. Did you call the superclass (goog.events.EventTarget) constructor?")},Fd="StopIteration"in l?l.StopIteration:{message:"StopIteration",stack:""},Gd=function(){};Gd.prototype.next=function(){throw Fd},Gd.prototype.Pd=function(){return this};var H=function(t,e){this.aa={},this.s=[],this.hb=this.l=0;var n=arguments.length;if(1<n){if(n%2)throw Error("Uneven number of arguments");for(var i=0;i<n;i+=2)this.set(arguments[i],arguments[i+1])}else t&&this.addAll(t)};H.prototype.V=function(){Hd(this);for(var t=[],e=0;e<this.s.length;e++)t.push(this.aa[this.s[e]]);return t},H.prototype.ia=function(){return Hd(this),this.s.concat()},H.prototype.jb=function(t){return Id(this.aa,t)},H.prototype.remove=function(t){return!!Id(this.aa,t)&&(delete this.aa[t],this.l--,this.hb++,this.s.length>2*this.l&&Hd(this),!0)};var Hd=function(t){if(t.l!=t.s.length){for(var e=0,n=0;e<t.s.length;){var i=t.s[e];Id(t.aa,i)&&(t.s[n++]=i),e++}t.s.length=n}if(t.l!=t.s.length){for(var r={},n=e=0;e<t.s.length;)i=t.s[e],Id(r,i)||(t.s[n++]=i,r[i]=1),e++;t.s.length=n}};h=H.prototype,h.get=function(t,e){return Id(this.aa,t)?this.aa[t]:e},h.set=function(t,e){Id(this.aa,t)||(this.l++,this.s.push(t),this.hb++),this.aa[t]=e},h.addAll=function(t){var e;t instanceof H?(e=t.ia(),t=t.V()):(e=Ra(t),t=Qa(t));for(var n=0;n<e.length;n++)this.set(e[n],t[n])},h.forEach=function(t,e){for(var n=this.ia(),i=0;i<n.length;i++){var r=n[i],o=this.get(r);t.call(e,o,r,this)}},h.clone=function(){return new H(this)},h.Pd=function(t){Hd(this);var e=0,n=this.hb,i=this,r=new Gd;return r.next=function(){if(n!=i.hb)throw Error("The map has changed since the iterator was created");if(e>=i.s.length)throw Fd;var r=i.s[e++];return t?r:i.aa[r]},r};var Id=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},Jd=function(t){if(t.V&&"function"==typeof t.V)return t.V();if(n(t))return t.split("");if(fa(t)){for(var e=[],i=t.length,r=0;r<i;r++)e.push(t[r]);
return e}return Qa(t)},Kd=function(t){if(t.ia&&"function"==typeof t.ia)return t.ia();if(!t.V||"function"!=typeof t.V){if(fa(t)||n(t)){var e=[];t=t.length;for(var i=0;i<t;i++)e.push(i);return e}return Ra(t)}},Ld=function(t,e){if(t.forEach&&"function"==typeof t.forEach)t.forEach(e,void 0);else if(fa(t)||n(t))x(t,e,void 0);else for(var i=Kd(t),r=Jd(t),o=r.length,a=0;a<o;a++)e.call(void 0,r[a],i&&i[a],t)},Md=function(t,e,n,i,r){this.reset(t,e,n,i,r)};Md.prototype.dd=null;var Nd=0;Md.prototype.reset=function(t,e,n,i,r){"number"==typeof r||Nd++,i||la(),this.rb=t,this.ze=e,delete this.dd},Md.prototype.yd=function(t){this.rb=t};var Od=function(t){this.Ae=t,this.hd=this.qc=this.rb=this.m=null},Pd=function(t,e){this.name=t,this.value=e};Pd.prototype.toString=function(){return this.name};var Qd=new Pd("SEVERE",1e3),Rd=new Pd("CONFIG",700),Sd=new Pd("FINE",500);Od.prototype.getParent=function(){return this.m},Od.prototype.yd=function(t){this.rb=t};var Td=function(t){return t.rb?t.rb:t.m?Td(t.m):(za("Root logger has no level set."),null)};Od.prototype.log=function(t,e,n){if(t.value>=Td(this).value)for(p(e)&&(e=e()),t=new Md(t,String(e),this.Ae),n&&(t.dd=n),n="log:"+t.ze,l.console&&(l.console.timeStamp?l.console.timeStamp(n):l.console.markTimeline&&l.console.markTimeline(n)),l.msWriteProfilerMark&&l.msWriteProfilerMark(n),n=this;n;){e=n;var i=t;if(e.hd)for(var r,o=0;r=e.hd[o];o++)r(i);n=n.getParent()}};var Ud={},Vd=null,Wd=function(t){Vd||(Vd=new Od(""),Ud[""]=Vd,Vd.yd(Rd));var e;if(!(e=Ud[t])){e=new Od(t);var n=t.lastIndexOf("."),i=t.substr(n+1),n=Wd(t.substr(0,n));n.qc||(n.qc={}),n.qc[i]=e,e.m=n,Ud[t]=e}return e},I=function(t,e){t&&t.log(Sd,e,void 0)},Xd=function(t,e,n){if(p(t))n&&(t=q(t,n));else{if(!t||"function"!=typeof t.handleEvent)throw Error("Invalid listener argument");t=q(t.handleEvent,t)}return 2147483647<Number(e)?-1:l.setTimeout(t,e||0)},Yd=function(t){var e=null;return new C(function(n,i){e=Xd(function(){n(void 0)},t),-1==e&&i(Error("Failed to schedule timer."))}).h(function(t){throw l.clearTimeout(e),t})},Zd=/^(?:([^:\/?#.]+):)?(?:\/\/(?:([^\/?#]*)@)?([^\/#?]*?)(?::([0-9]+))?(?=[\/#?]|$))?([^?#]+)?(?:\?([^#]*))?(?:#([\s\S]*))?$/,$d=function(t,e){if(t){t=t.split("&");for(var n=0;n<t.length;n++){var i,r=t[n].indexOf("="),o=null;0<=r?(i=t[n].substring(0,r),o=t[n].substring(r+1)):i=t[n],e(i,o?decodeURIComponent(o.replace(/\+/g," ")):"")}}},J=function(t){G.call(this),this.headers=new H,this.mc=t||null,this.oa=!1,this.lc=this.b=null,this.qb=this.md=this.Pb="",this.Ba=this.yc=this.Mb=this.sc=!1,this.eb=0,this.hc=null,this.td="",this.jc=this.Fe=this.Gd=!1};r(J,G);var ae=J.prototype,be=Wd("goog.net.XhrIo");ae.R=be;var ce=/^https?$/i,de=["POST","PUT"];J.prototype.send=function(t,e,n,i){if(this.b)throw Error("[goog.net.XhrIo] Object is active with another request="+this.Pb+"; newUri="+t);e=e?e.toUpperCase():"GET",this.Pb=t,this.qb="",this.md=e,this.sc=!1,this.oa=!0,this.b=this.mc?this.mc.kb():qc.kb(),this.lc=pc(this.mc?this.mc:qc),this.b.onreadystatechange=q(this.qd,this),this.Fe&&"onprogress"in this.b&&(this.b.onprogress=q(function(t){this.pd(t,!0)},this),this.b.upload&&(this.b.upload.onprogress=q(this.pd,this)));try{I(this.R,ee(this,"Opening Xhr")),this.yc=!0,this.b.open(e,String(t),!0),this.yc=!1}catch(t){return I(this.R,ee(this,"Error opening Xhr: "+t.message)),void this.K(5,t)}t=n||"";var r=this.headers.clone();i&&Ld(i,function(t,e){r.set(e,t)}),i=Ia(r.ia()),n=l.FormData&&t instanceof l.FormData,!Ja(de,e)||i||n||r.set("Content-Type","application/x-www-form-urlencoded;charset=utf-8"),r.forEach(function(t,e){this.b.setRequestHeader(e,t)},this),this.td&&(this.b.responseType=this.td),"withCredentials"in this.b&&this.b.withCredentials!==this.Gd&&(this.b.withCredentials=this.Gd);try{fe(this),0<this.eb&&(this.jc=ge(this.b),I(this.R,ee(this,"Will abort after "+this.eb+"ms if incomplete, xhr2 "+this.jc)),this.jc?(this.b.timeout=this.eb,this.b.ontimeout=q(this.yb,this)):this.hc=Xd(this.yb,this.eb,this)),I(this.R,ee(this,"Sending request")),this.Mb=!0,this.b.send(t),this.Mb=!1}catch(t){I(this.R,ee(this,"Send error: "+t.message)),this.K(5,t)}};var ge=function(t){return z&&A(9)&&ga(t.timeout)&&void 0!==t.ontimeout},Ha=function(t){return"content-type"==t.toLowerCase()};J.prototype.yb=function(){"undefined"!=typeof aa&&this.b&&(this.qb="Timed out after "+this.eb+"ms, aborting",I(this.R,ee(this,this.qb)),this.dispatchEvent("timeout"),this.abort(8))},J.prototype.K=function(t,e){this.oa=!1,this.b&&(this.Ba=!0,this.b.abort(),this.Ba=!1),this.qb=e,he(this),ie(this)};var he=function(t){t.sc||(t.sc=!0,t.dispatchEvent("complete"),t.dispatchEvent("error"))};J.prototype.abort=function(){this.b&&this.oa&&(I(this.R,ee(this,"Aborting")),this.oa=!1,this.Ba=!0,this.b.abort(),this.Ba=!1,this.dispatchEvent("complete"),this.dispatchEvent("abort"),ie(this))},J.prototype.Na=function(){this.b&&(this.oa&&(this.oa=!1,this.Ba=!0,this.b.abort(),this.Ba=!1),ie(this,!0)),J.Rc.Na.call(this)},J.prototype.qd=function(){this.isDisposed()||(this.yc||this.Mb||this.Ba?je(this):this.De())},J.prototype.De=function(){je(this)};var je=function(t){if(t.oa&&"undefined"!=typeof aa)if(t.lc[1]&&4==ke(t)&&2==le(t))I(t.R,ee(t,"Local request error detected and ignored"));else if(t.Mb&&4==ke(t))Xd(t.qd,0,t);else if(t.dispatchEvent("readystatechange"),4==ke(t)){I(t.R,ee(t,"Request complete")),t.oa=!1;try{var e,n=le(t);t:switch(n){case 200:case 201:case 202:case 204:case 206:case 304:case 1223:e=!0;break t;default:e=!1}var i;if(!(i=e)){var r;if(r=0===n){var o=String(t.Pb).match(Zd)[1]||null;if(!o&&l.self&&l.self.location)var a=l.self.location.protocol,o=a.substr(0,a.length-1);r=!ce.test(o?o.toLowerCase():"")}i=r}if(i)t.dispatchEvent("complete"),t.dispatchEvent("success");else{var s;try{s=2<ke(t)?t.b.statusText:""}catch(e){I(t.R,"Can not get status: "+e.message),s=""}t.qb=s+" ["+le(t)+"]",he(t)}}finally{ie(t)}}};J.prototype.pd=function(t,e){w("progress"===t.type,"goog.net.EventType.PROGRESS is of the same type as raw XHR progress."),this.dispatchEvent(me(t,"progress")),this.dispatchEvent(me(t,e?"downloadprogress":"uploadprogress"))};var me=function(t,e){return{type:e,lengthComputable:t.lengthComputable,loaded:t.loaded,total:t.total}},ie=function(t,e){if(t.b){fe(t);var n=t.b,i=t.lc[0]?ba:null;t.b=null,t.lc=null,e||t.dispatchEvent("ready");try{n.onreadystatechange=i}catch(e){(t=t.R)&&t.log(Qd,"Problem encountered resetting onreadystatechange: "+e.message,void 0)}}},fe=function(t){t.b&&t.jc&&(t.b.ontimeout=null),ga(t.hc)&&(l.clearTimeout(t.hc),t.hc=null)},ke=function(t){return t.b?t.b.readyState:0},le=function(t){try{return 2<ke(t)?t.b.status:-1}catch(t){return-1}},ne=function(t){try{return t.b?t.b.responseText:""}catch(e){return I(t.R,"Can not get responseText: "+e.message),""}},ee=function(t,e){return e+" ["+t.md+" "+t.Pb+" "+le(t)+"]"},oe=function(t,e){this.ha=this.Ga=this.ca="",this.Ta=null,this.Aa=this.qa="",this.N=this.te=!1;var n;t instanceof oe?(this.N=void 0!==e?e:t.N,pe(this,t.ca),n=t.Ga,K(this),this.Ga=n,qe(this,t.ha),re(this,t.Ta),se(this,t.qa),te(this,t.Y.clone()),t=t.Aa,K(this),this.Aa=t):t&&(n=String(t).match(Zd))?(this.N=!!e,pe(this,n[1]||"",!0),t=n[2]||"",K(this),this.Ga=ue(t),qe(this,n[3]||"",!0),re(this,n[4]),se(this,n[5]||"",!0),te(this,n[6]||"",!0),t=n[7]||"",K(this),this.Aa=ue(t)):(this.N=!!e,this.Y=new L(null,0,this.N))};oe.prototype.toString=function(){var t=[],e=this.ca;e&&t.push(ve(e,we,!0),":");var n=this.ha;return(n||"file"==e)&&(t.push("//"),(e=this.Ga)&&t.push(ve(e,we,!0),"@"),t.push(encodeURIComponent(String(n)).replace(/%25([0-9a-fA-F]{2})/g,"%$1")),n=this.Ta,null!=n&&t.push(":",String(n))),(n=this.qa)&&(this.ha&&"/"!=n.charAt(0)&&t.push("/"),t.push(ve(n,"/"==n.charAt(0)?xe:ye,!0))),(n=this.Y.toString())&&t.push("?",n),(n=this.Aa)&&t.push("#",ve(n,ze)),t.join("")},oe.prototype.resolve=function(t){var e=this.clone(),n=!!t.ca;if(n?pe(e,t.ca):n=!!t.Ga,n){var i=t.Ga;K(e),e.Ga=i}else n=!!t.ha;if(n?qe(e,t.ha):n=null!=t.Ta,i=t.qa,n)re(e,t.Ta);else if(n=!!t.qa){if("/"!=i.charAt(0))if(this.ha&&!this.qa)i="/"+i;else{var r=e.qa.lastIndexOf("/");-1!=r&&(i=e.qa.substr(0,r+1)+i)}if(r=i,".."==r||"."==r)i="";else if(u(r,"./")||u(r,"/.")){for(var i=0==r.lastIndexOf("/",0),r=r.split("/"),o=[],a=0;a<r.length;){var s=r[a++];"."==s?i&&a==r.length&&o.push(""):".."==s?((1<o.length||1==o.length&&""!=o[0])&&o.pop(),i&&a==r.length&&o.push("")):(o.push(s),i=!0)}i=o.join("/")}else i=r}return n?se(e,i):n=""!==t.Y.toString(),n?te(e,t.Y.clone()):n=!!t.Aa,n&&(t=t.Aa,K(e),e.Aa=t),e},oe.prototype.clone=function(){return new oe(this)};var pe=function(t,e,n){K(t),t.ca=n?ue(e,!0):e,t.ca&&(t.ca=t.ca.replace(/:$/,""))},qe=function(t,e,n){K(t),t.ha=n?ue(e,!0):e},re=function(t,e){if(K(t),e){if(e=Number(e),isNaN(e)||0>e)throw Error("Bad port number "+e);t.Ta=e}else t.Ta=null},se=function(t,e,n){K(t),t.qa=n?ue(e,!0):e},te=function(t,e,n){K(t),e instanceof L?(t.Y=e,t.Y.Oc(t.N)):(n||(e=ve(e,Ae)),t.Y=new L(e,0,t.N))},M=function(t,e,n){K(t),t.Y.set(e,n)},Be=function(t,e){K(t),t.Y.remove(e)},K=function(t){if(t.te)throw Error("Tried to modify a read-only Uri")};oe.prototype.Oc=function(t){return this.N=t,this.Y&&this.Y.Oc(t),this};var Ce=function(t){return t instanceof oe?t.clone():new oe(t,void 0)},De=function(t,e){var n=new oe(null,void 0);return pe(n,"https"),t&&qe(n,t),e&&se(n,e),n},ue=function(t,e){return t?e?decodeURI(t.replace(/%25/g,"%2525")):decodeURIComponent(t):""},ve=function(t,e,i){return n(t)?(t=encodeURI(t).replace(e,Ee),i&&(t=t.replace(/%25([0-9a-fA-F]{2})/g,"%$1")),t):null},Ee=function(t){return t=t.charCodeAt(0),"%"+(t>>4&15).toString(16)+(15&t).toString(16)},we=/[#\/\?@]/g,ye=/[\#\?:]/g,xe=/[\#\?]/g,Ae=/[\#\?@]/g,ze=/#/g,L=function(t,e,n){this.l=this.g=null,this.J=t||null,this.N=!!n},Fe=function(t){t.g||(t.g=new H,t.l=0,t.J&&$d(t.J,function(e,n){t.add(decodeURIComponent(e.replace(/\+/g," ")),n)}))},He=function(t){var e=Kd(t);if("undefined"==typeof e)throw Error("Keys are undefined");var n=new L(null,0,void 0);t=Jd(t);for(var i=0;i<e.length;i++){var r=e[i],o=t[i];ea(o)?Ge(n,r,o):n.add(r,o)}return n};h=L.prototype,h.add=function(t,e){Fe(this),this.J=null,t=this.M(t);var n=this.g.get(t);return n||this.g.set(t,n=[]),n.push(e),this.l=Aa(this.l)+1,this},h.remove=function(t){return Fe(this),t=this.M(t),!!this.g.jb(t)&&(this.J=null,this.l=Aa(this.l)-this.g.get(t).length,this.g.remove(t))},h.jb=function(t){return Fe(this),t=this.M(t),this.g.jb(t)},h.ia=function(){Fe(this);for(var t=this.g.V(),e=this.g.ia(),n=[],i=0;i<e.length;i++)for(var r=t[i],o=0;o<r.length;o++)n.push(e[i]);return n},h.V=function(t){Fe(this);var e=[];if(n(t))this.jb(t)&&(e=Na(e,this.g.get(this.M(t))));else{t=this.g.V();for(var i=0;i<t.length;i++)e=Na(e,t[i])}return e},h.set=function(t,e){return Fe(this),this.J=null,t=this.M(t),this.jb(t)&&(this.l=Aa(this.l)-this.g.get(t).length),this.g.set(t,[e]),this.l=Aa(this.l)+1,this},h.get=function(t,e){return t=t?this.V(t):[],0<t.length?String(t[0]):e};var Ge=function(t,e,n){t.remove(e),0<n.length&&(t.J=null,t.g.set(t.M(e),Oa(n)),t.l=Aa(t.l)+n.length)};L.prototype.toString=function(){if(this.J)return this.J;if(!this.g)return"";for(var t=[],e=this.g.ia(),n=0;n<e.length;n++)for(var i=e[n],r=encodeURIComponent(String(i)),i=this.V(i),o=0;o<i.length;o++){var a=r;""!==i[o]&&(a+="="+encodeURIComponent(String(i[o]))),t.push(a)}return this.J=t.join("&")},L.prototype.clone=function(){var t=new L;return t.J=this.J,this.g&&(t.g=this.g.clone(),t.l=this.l),t},L.prototype.M=function(t){return t=String(t),this.N&&(t=t.toLowerCase()),t},L.prototype.Oc=function(t){t&&!this.N&&(Fe(this),this.J=null,this.g.forEach(function(t,e){var n=e.toLowerCase();e!=n&&(this.remove(e),Ge(this,n,t))},this)),this.N=t};var Ie=function(){var t=N();return z&&!!nb&&11==nb||/Edge\/\d+/.test(t)},Je=function(){return l.window&&l.window.location.href||""},Ke=function(t,e){var n,i=[];for(n in t)n in e?typeof t[n]!=typeof e[n]?i.push(n):ea(t[n])?Ta(t[n],e[n])||i.push(n):"object"==typeof t[n]&&null!=t[n]&&null!=e[n]?0<Ke(t[n],e[n]).length&&i.push(n):t[n]!==e[n]&&i.push(n):i.push(n);for(n in e)n in t||i.push(n);return i},Me=function(){var t;return t=N(),t="Chrome"!=Le(t)?null:(t=t.match(/\sChrome\/(\d+)/i))&&2==t.length?parseInt(t[1],10):null,!(t&&30>t)&&(!z||!nb||9<nb)},Ne=function(t){return t=(t||N()).toLowerCase(),!!(t.match(/android/)||t.match(/webos/)||t.match(/iphone|ipad|ipod/)||t.match(/blackberry/)||t.match(/windows phone/)||t.match(/iemobile/))},Oe=function(t){t=t||l.window;try{t.close()}catch(t){}},Pe=function(t,e,n){var i=Math.floor(1e9*Math.random()).toString();e=e||500,n=n||600;var r=(window.screen.availHeight-n)/2,o=(window.screen.availWidth-e)/2;e={width:e,height:n,top:0<r?r:0,left:0<o?o:0,location:!0,resizable:!0,statusbar:!0,toolbar:!1},n=N().toLowerCase(),i&&(e.target=i,u(n,"crios/")&&(e.target="_blank")),"Firefox"==Le(N())&&(t=t||"http://localhost",e.scrollbars=!0);var a;n=t||"about:blank",(i=e)||(i={}),t=window,e=n instanceof B?n:fc("undefined"!=typeof n.href?n.href:String(n)),n=i.target||n.target,r=[];for(a in i)switch(a){case"width":case"height":case"top":case"left":r.push(a+"="+i[a]);break;case"target":case"noreferrer":break;default:r.push(a+"="+(i[a]?1:0))}if(a=r.join(","),(y("iPhone")&&!y("iPod")&&!y("iPad")||y("iPad")||y("iPod"))&&t.navigator&&t.navigator.standalone&&n&&"_self"!=n?(a=t.document.createElement("A"),"undefined"!=typeof HTMLAnchorElement&&"undefined"!=typeof Location&&"undefined"!=typeof Element&&(r=a&&(a instanceof HTMLAnchorElement||!(a instanceof Location||a instanceof Element)),o=ha(a)?a.constructor.displayName||a.constructor.name||Object.prototype.toString.call(a):void 0===a?"undefined":null===a?"null":typeof a,w(r,"Argument is not a HTMLAnchorElement (or a non-Element mock); got: %s",o)),e=e instanceof B?e:fc(e),a.href=cc(e),a.setAttribute("target",n),i.noreferrer&&a.setAttribute("rel","noreferrer"),i=document.createEvent("MouseEvent"),i.initMouseEvent("click",!0,!0,t,1),a.dispatchEvent(i),a={}):i.noreferrer?(a=t.open("",n,a),i=cc(e),a&&(eb&&u(i,";")&&(i="'"+i.replace(/'/g,"%27")+"'"),a.opener=null,t=ac("b/12014412, meta tag with sanitized URL"),va.test(i)&&(-1!=i.indexOf("&")&&(i=i.replace(pa,"&amp;")),-1!=i.indexOf("<")&&(i=i.replace(qa,"&lt;")),-1!=i.indexOf(">")&&(i=i.replace(ra,"&gt;")),-1!=i.indexOf('"')&&(i=i.replace(sa,"&quot;")),-1!=i.indexOf("'")&&(i=i.replace(ta,"&#39;")),-1!=i.indexOf("\0")&&(i=i.replace(ua,"&#0;"))),i='<META HTTP-EQUIV="refresh" content="0; url='+i+'">',Ba($b(t),"must provide justification"),w(!/^[\s\xa0]*$/.test($b(t)),"must provide non-empty justification"),a.document.write(Ac((new zc).re(i))),a.document.close())):a=t.open(cc(e),n,a),a)try{a.focus()}catch(t){}return a},Qe=function(t){return new C(function(e){var n=function(){Yd(2e3).then(function(){return t&&!t.closed?n():void e()})};return n()})},Re=/^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$/,Se=function(){var t=null;return new C(function(e){"complete"==l.document.readyState?e():(t=function(){e()},Qb(window,"load",t))}).h(function(e){throw Sb(window,"load",t),e})},O=function(t){switch(t||l.navigator&&l.navigator.product||""){case"ReactNative":return"ReactNative";default:return"undefined"!=typeof l.process?"Node":"Browser"}},Te=function(){var t=O();return"ReactNative"===t||"Node"===t},Le=function(t){var e=t.toLowerCase();return u(e,"opera/")||u(e,"opr/")||u(e,"opios/")?"Opera":u(e,"iemobile")?"IEMobile":u(e,"msie")||u(e,"trident/")?"IE":u(e,"edge/")?"Edge":u(e,"firefox/")?"Firefox":u(e,"silk/")?"Silk":u(e,"blackberry")?"Blackberry":u(e,"webos")?"Webos":!u(e,"safari/")||u(e,"chrome/")||u(e,"crios/")||u(e,"android")?!u(e,"chrome/")&&!u(e,"crios/")||u(e,"edge/")?u(e,"android")?"Android":(t=t.match(/([a-zA-Z\d\.]+)\/[a-zA-Z\d\.]*$/))&&2==t.length?t[1]:"Other":"Chrome":"Safari"},Ue=function(t){var e=O(void 0);return("Browser"===e?Le(N()):e)+"/JsCore/"+t},N=function(){return l.navigator&&l.navigator.userAgent||""},Ve=function(t){t=t.split(".");for(var e=l,n=0;n<t.length&&"object"==typeof e&&null!=e;n++)e=e[t[n]];return n!=t.length&&(e=void 0),e},Xe=function(){var t;if(!(t=!l.location||!l.location.protocol||"http:"!=l.location.protocol&&"https:"!=l.location.protocol||Te())){var e;t:{try{var n=l.localStorage,i=We();if(n){n.setItem(i,"1"),n.removeItem(i),e=!Ie()||!!l.indexedDB;break t}}catch(t){}e=!1}t=!e}return!t},Ye=function(t){return t=t||N(),!Ne(t)&&"Firefox"!=Le(t)},Ze=function(t){return"undefined"==typeof t?null:kc(t)},$e=function(t){var e,n={};for(e in t)t.hasOwnProperty(e)&&null!==t[e]&&void 0!==t[e]&&(n[e]=t[e]);return n},af=function(t){if(null!==t){var e;try{e=hc(t)}catch(n){try{e=JSON.parse(t)}catch(t){throw n}}return e}},We=function(t){return t?t:""+Math.floor(1e9*Math.random()).toString()},bf=function(t){return t=t||N(),"Safari"!=Le(t)&&!t.toLowerCase().match(/iphone|ipad|ipod/)},cf=function(){var t=l.___jsl;if(t&&t.H)for(var e in t.H)if(t.H[e].r=t.H[e].r||[],t.H[e].L=t.H[e].L||[],t.H[e].r=t.H[e].L.concat(),t.CP)for(var n=0;n<t.CP.length;n++)t.CP[n]=null},df=function(t,e,n,i){if(t>e)throw Error("Short delay should be less than long delay!");this.Me=t,this.ye=e,t=i||O(),this.se=Ne(n||N())||"ReactNative"===t};df.prototype.get=function(){return this.se?this.ye:this.Me};var ef;try{var ff={};Object.defineProperty(ff,"abcd",{configurable:!0,enumerable:!0,value:1}),Object.defineProperty(ff,"abcd",{configurable:!0,enumerable:!0,value:2}),ef=2==ff.abcd}catch(t){ef=!1}var P=function(t,e,n){ef?Object.defineProperty(t,e,{configurable:!0,enumerable:!0,value:n}):t[e]=n},gf=function(t,e){if(e)for(var n in e)e.hasOwnProperty(n)&&P(t,n,e[n])},hf=function(t){var e,n={};for(e in t)t.hasOwnProperty(e)&&(n[e]=t[e]);return n},jf=function(t,e){if(!e||!e.length)return!0;if(!t)return!1;for(var n=0;n<e.length;n++){var i=t[e[n]];if(void 0===i||null===i||""===i)return!1}return!0},kf=function(t){var e=t;if("object"==typeof t&&null!=t){var n,e="length"in t?[]:{};for(n in t)P(e,n,kf(t[n]))}return e},lf=["client_id","response_type","scope","redirect_uri","state"],mf={Hd:{ub:500,tb:600,providerId:"facebook.com",ac:lf},Id:{ub:500,tb:620,providerId:"github.com",ac:lf},Jd:{ub:515,tb:680,providerId:"google.com",ac:lf},Od:{ub:485,tb:705,providerId:"twitter.com",ac:"oauth_consumer_key oauth_nonce oauth_signature oauth_signature_method oauth_timestamp oauth_token oauth_version".split(" ")}},nf=function(t){for(var e in mf)if(mf[e].providerId==t)return mf[e];return null},of=function(t){return(t=nf(t))&&t.ac||[]},Q=function(t,e){this.code="auth/"+t,this.message=e||pf[t]||""};r(Q,Error),Q.prototype.I=function(){return{name:this.code,code:this.code,message:this.message}};var pf={"argument-error":"","app-not-authorized":"This app, identified by the domain where it's hosted, is not authorized to use Firebase Authentication with the provided API key. Review your key configuration in the Google API console.","cors-unsupported":"This browser is not supported.","credential-already-in-use":"This credential is already associated with a different user account.","custom-token-mismatch":"The custom token corresponds to a different audience.","requires-recent-login":"This operation is sensitive and requires recent authentication. Log in again before retrying this request.","email-already-in-use":"The email address is already in use by another account.","expired-action-code":"The action code has expired. ","cancelled-popup-request":"This operation has been cancelled due to another conflicting popup being opened.","internal-error":"An internal error has occurred.","invalid-user-token":"The user's credential is no longer valid. The user must sign in again.","invalid-auth-event":"An internal error has occurred.","invalid-custom-token":"The custom token format is incorrect. Please check the documentation.","invalid-email":"The email address is badly formatted.","invalid-api-key":"Your API key is invalid, please check you have copied it correctly.","invalid-credential":"The supplied auth credential is malformed or has expired.","invalid-oauth-provider":"EmailAuthProvider is not supported for this operation. This operation only supports OAuth providers.","unauthorized-domain":"This domain is not authorized for OAuth operations for your Firebase project. Edit the list of authorized domains from the Firebase console.","invalid-action-code":"The action code is invalid. This can happen if the code is malformed, expired, or has already been used.","wrong-password":"The password is invalid or the user does not have a password.","missing-iframe-start":"An internal error has occurred.","auth-domain-config-required":"Be sure to include authDomain when calling firebase.initializeApp(), by following the instructions in the Firebase console.","app-deleted":"This instance of FirebaseApp has been deleted.","account-exists-with-different-credential":"An account already exists with the same email address but different sign-in credentials. Sign in using a provider associated with this email address.","network-request-failed":"A network error (such as timeout, interrupted connection or unreachable host) has occurred.","no-auth-event":"An internal error has occurred.","no-such-provider":"User was not linked to an account with the given provider.","operation-not-allowed":"The given sign-in provider is disabled for this Firebase project. Enable it in the Firebase console, under the sign-in method tab of the Auth section.","operation-not-supported-in-this-environment":'This operation is not supported in the environment this application is running on. "location.protocol" must be http or https and web storage must be enabled.',"popup-blocked":"Unable to establish a connection with the popup. It may have been blocked by the browser.","popup-closed-by-user":"The popup has been closed by the user before finalizing the operation.","provider-already-linked":"User can only be linked to one identity for the given provider.",timeout:"The operation has timed out.","user-token-expired":"The user's credential is no longer valid. The user must sign in again.","too-many-requests":"We have blocked all requests from this device due to unusual activity. Try again later.","user-cancelled":"User did not grant your application the permissions it requested.","user-not-found":"There is no user record corresponding to this identifier. The user may have been deleted.","user-disabled":"The user account has been disabled by an administrator.","user-mismatch":"The supplied credentials do not correspond to the previously signed in user.","user-signed-out":"","weak-password":"The password must be 6 characters long or more.","web-storage-unsupported":"This browser is not supported or 3rd party cookies and data may be disabled."},qf=function(t,e,n,i,r){if(this.wa=t,this.U=e||null,this.gb=n||null,this.cc=i||null,this.K=r||null,!this.gb&&!this.K)throw new Q("invalid-auth-event");if(this.gb&&this.K)throw new Q("invalid-auth-event");if(this.gb&&!this.cc)throw new Q("invalid-auth-event")};qf.prototype.getError=function(){return this.K},qf.prototype.I=function(){return{type:this.wa,eventId:this.U,urlResponse:this.gb,sessionId:this.cc,error:this.K&&this.K.I()}};var rf=function(t){var e="unauthorized-domain",n=void 0,i=Ce(t);t=i.ha,i=i.ca,"http"!=i&&"https"!=i?e="operation-not-supported-in-this-environment":n=ma("This domain (%s) is not authorized to run this operation. Add it to the OAuth redirect domains list in the Firebase console -> Auth section -> Sign in method tab.",t),Q.call(this,e,n)};r(rf,Q);var sf=function(t){this.xe=t.sub,la(),this.Db=t.email||null},tf=function(t,e,i,r){var o={};if(ha(i)?o=i:e&&n(i)&&n(r)?o={oauthToken:i,oauthTokenSecret:r}:!e&&n(i)&&(o={accessToken:i}),e||!o.idToken&&!o.accessToken){if(!(e&&o.oauthToken&&o.oauthTokenSecret)){if(e)throw new Q("argument-error","credential failed: expected 2 arguments (the OAuth access token and secret).");throw new Q("argument-error","credential failed: expected 1 argument (the OAuth access token).")}P(this,"accessToken",o.oauthToken),P(this,"secret",o.oauthTokenSecret)}else o.idToken&&P(this,"idToken",o.idToken),o.accessToken&&P(this,"accessToken",o.accessToken);P(this,"provider",t)};tf.prototype.Fb=function(t){return uf(t,vf(this))},tf.prototype.nd=function(t,e){var n=vf(this);return n.idToken=e,wf(t,n)};var vf=function(t){var e={};return t.idToken&&(e.id_token=t.idToken),t.accessToken&&(e.access_token=t.accessToken),t.secret&&(e.oauth_token_secret=t.secret),e.providerId=t.provider,{postBody:He(e).toString(),requestUri:Xe()?Je():"http://localhost"}};tf.prototype.I=function(){var t={provider:this.provider};return this.idToken&&(t.oauthIdToken=this.idToken),this.accessToken&&(t.oauthAccessToken=this.accessToken),this.secret&&(t.oauthTokenSecret=this.secret),t};var xf=function(t,e,n){var i=!!e,r=n||[];return e=function(){gf(this,{providerId:t,isOAuthProvider:!0}),this.Nc=[],this.ad={},"google.com"==t&&this.addScope("profile")},i||(e.prototype.addScope=function(t){Ja(this.Nc,t)||this.Nc.push(t)}),e.prototype.setCustomParameters=function(t){this.ad=Ua(t)},e.prototype.fe=function(){var t,e=$e(this.ad);for(t in e)e[t]=e[t].toString();for(e=Ua(e),t=0;t<r.length;t++){var n=r[t];n in e&&delete e[n]}return e},e.prototype.ge=function(){return Oa(this.Nc)},e.credential=function(e,n){return new tf(t,i,e,n)},gf(e,{PROVIDER_ID:t}),e},yf=xf("facebook.com",!1,of("facebook.com"));yf.prototype.addScope=yf.prototype.addScope||void 0;var zf=xf("github.com",!1,of("github.com"));zf.prototype.addScope=zf.prototype.addScope||void 0;var Af=xf("google.com",!1,of("google.com"));Af.prototype.addScope=Af.prototype.addScope||void 0,Af.credential=function(t,e){if(!t&&!e)throw new Q("argument-error","credential failed: must provide the ID token and/or the access token.");return new tf("google.com",!1,ha(t)?t:{idToken:t||null,accessToken:e||null})};var Bf=xf("twitter.com",!0,of("twitter.com")),Cf=function(t,e){this.Db=t,this.Fc=e,P(this,"provider","password")};Cf.prototype.Fb=function(t){return R(t,Df,{email:this.Db,password:this.Fc})},Cf.prototype.nd=function(t,e){return R(t,Ef,{idToken:e,email:this.Db,password:this.Fc})},Cf.prototype.I=function(){return{email:this.Db,password:this.Fc}};var Ff=function(){gf(this,{providerId:"password",isOAuthProvider:!1})};gf(Ff,{PROVIDER_ID:"password"});var Gf={Ze:Ff,Hd:yf,Jd:Af,Id:zf,Od:Bf},Hf=function(t){var e=t&&t.providerId;if(!e)return null;var n=t&&t.oauthAccessToken,i=t&&t.oauthTokenSecret;t=t&&t.oauthIdToken;for(var r in Gf)if(Gf[r].PROVIDER_ID==e)try{return Gf[r].credential({accessToken:n,idToken:t,oauthToken:n,oauthTokenSecret:i})}catch(t){break}return null},If=function(t,e,n,i){Q.call(this,t,i),P(this,"email",e),P(this,"credential",n)};r(If,Q),If.prototype.I=function(){var t={code:this.code,message:this.message,email:this.email},e=this.credential&&this.credential.I();return e&&(Wa(t,e),t.providerId=e.provider,delete t.provider),t};var Jf=function(t){if(t.code){var e=t.code||"";return 0==e.indexOf("auth/")&&(e=e.substring(5)),t.email?new If(e,t.email,Hf(t),t.message):new Q(e,t.message||void 0)}return null},Kf=function(t){this.Ye=t};r(Kf,oc),Kf.prototype.kb=function(){return new this.Ye},Kf.prototype.Ob=function(){return{}};var S=function(t,e,n){var i;if(i="Node"==O(),i=l.XMLHttpRequest||i&&firebase.INTERNAL.node&&firebase.INTERNAL.node.XMLHttpRequest,!i)throw new Q("internal-error","The XMLHttpRequest compatibility library was not found.");this.i=t,t=e||{},this.Ie=t.secureTokenEndpoint||"https://securetoken.googleapis.com/v1/token",this.Je=t.secureTokenTimeout||Lf,this.wd=Ua(t.secureTokenHeaders||Mf),this.be=t.firebaseEndpoint||"https://www.googleapis.com/identitytoolkit/v3/relyingparty/",this.ce=t.firebaseTimeout||Nf,this.fd=Ua(t.firebaseHeaders||Of),n&&(this.fd["X-Client-Version"]=n,this.wd["X-Client-Version"]=n),this.Td=new tc,this.Xe=new Kf(i)},Pf,Lf=new df(1e4,3e4),Mf={"Content-Type":"application/x-www-form-urlencoded"},Nf=new df(1e4,3e4),Of={"Content-Type":"application/json"},Rf=function(t,e,n,i,r,o,a){Me()?t=q(t.Le,t):(Pf||(Pf=new C(function(t,e){Qf(t,e)})),t=q(t.Ke,t)),t(e,n,i,r,o,a)};S.prototype.Le=function(t,e,n,i,r,o){var a,s="Node"==O(),u=Te()?s?new J(this.Xe):new J:new J(this.Td);o&&(u.eb=Math.max(0,o),a=setTimeout(function(){u.dispatchEvent("timeout")},o)),u.listen("complete",function(){a&&clearTimeout(a);var t=null;try{var n;n=this.b?hc(this.b.responseText):void 0,t=n||null}catch(e){try{t=JSON.parse(ne(this))||null}catch(e){t=null}}e&&e(t)}),Rb(u,"ready",function(){a&&clearTimeout(a),this.za||(this.za=!0,this.Na())}),Rb(u,"timeout",function(){a&&clearTimeout(a),this.za||(this.za=!0,this.Na()),e&&e(null)}),u.send(t,n,i,r)};var sd="__fcb"+Math.floor(1e6*Math.random()).toString(),Qf=function(t,e){((window.gapi||{}).client||{}).request?t():(l[sd]=function(){((window.gapi||{}).client||{}).request?t():e(Error("CORS_UNSUPPORTED"))},ud(function(){e(Error("CORS_UNSUPPORTED"))}))};S.prototype.Ke=function(t,e,n,i,r){var o=this;Pf.then(function(){window.gapi.client.setApiKey(o.i);var a=window.gapi.auth.getToken();window.gapi.auth.setToken(null),window.gapi.client.request({path:t,method:n,body:i,headers:r,authType:"none",callback:function(t){window.gapi.auth.setToken(a),e&&e(t)}})}).h(function(t){e&&e({error:{message:t&&t.message||"CORS_UNSUPPORTED"}})})};var Tf=function(t,e){return new C(function(n,i){"refresh_token"==e.grant_type&&e.refresh_token||"authorization_code"==e.grant_type&&e.code?Rf(t,t.Ie+"?key="+encodeURIComponent(t.i),function(t){t?t.error?i(Sf(t)):t.access_token&&t.refresh_token?n(t):i(new Q("internal-error")):i(new Q("network-request-failed"))},"POST",He(e).toString(),t.wd,t.Je.get()):i(new Q("internal-error"))})},Uf=function(t,e,n,i,r){var o=t.be+e+"?key="+encodeURIComponent(t.i);return r&&(o+="&cb="+la().toString()),new C(function(e,r){Rf(t,o,function(t){t?t.error?r(Sf(t)):e(t):r(new Q("network-request-failed"))},n,kc($e(i)),t.fd,t.ce.get())})},Vf=function(t){if(!Xb.test(t.email))throw new Q("invalid-email")},Wf=function(t){"email"in t&&Vf(t)},Yf=function(t,e){var n=Xe()?Je():"http://localhost";return R(t,Xf,{identifier:e,continueUri:n}).then(function(t){return t.allProviders||[]})},$f=function(t){return R(t,Zf,{}).then(function(t){return t.authorizedDomains||[]})},ag=function(t){if(!t.idToken)throw new Q("internal-error")};S.prototype.signInAnonymously=function(){return R(this,bg,{})},S.prototype.updateEmail=function(t,e){return R(this,cg,{idToken:t,email:e})},S.prototype.updatePassword=function(t,e){return R(this,Ef,{idToken:t,password:e})};var dg={displayName:"DISPLAY_NAME",photoUrl:"PHOTO_URL"};S.prototype.updateProfile=function(t,e){var n={idToken:t},i=[];return Pa(dg,function(t,r){var o=e[r];null===o?i.push(t):r in e&&(n[r]=o)}),i.length&&(n.deleteAttribute=i),R(this,cg,n)},S.prototype.sendPasswordResetEmail=function(t){return R(this,eg,{requestType:"PASSWORD_RESET",email:t})},S.prototype.sendEmailVerification=function(t){return R(this,fg,{requestType:"VERIFY_EMAIL",idToken:t})};var hg=function(t,e,n){return R(t,gg,{idToken:e,deleteProvider:n})},ig=function(t){if(!t.requestUri||!t.sessionId&&!t.postBody)throw new Q("internal-error")},jg=function(t){var e=null;if(t.needConfirmation?(t.code="account-exists-with-different-credential",e=Jf(t)):"FEDERATED_USER_ID_ALREADY_LINKED"==t.errorMessage?(t.code="credential-already-in-use",e=Jf(t)):"EMAIL_EXISTS"==t.errorMessage&&(t.code="email-already-in-use",e=Jf(t)),e)throw e;if(!t.idToken)throw new Q("internal-error")},uf=function(t,e){return e.returnIdpCredential=!0,R(t,kg,e)},wf=function(t,e){return e.returnIdpCredential=!0,R(t,lg,e)},mg=function(t){if(!t.oobCode)throw new Q("invalid-action-code")};S.prototype.confirmPasswordReset=function(t,e){return R(this,ng,{oobCode:t,newPassword:e})},S.prototype.checkActionCode=function(t){return R(this,og,{oobCode:t})},S.prototype.applyActionCode=function(t){return R(this,pg,{oobCode:t})};var pg={endpoint:"setAccountInfo",F:mg,bb:"email"},og={endpoint:"resetPassword",F:mg,ua:function(t){if(!t.email||!t.requestType)throw new Q("internal-error")}},qg={endpoint:"signupNewUser",F:function(t){if(Vf(t),!t.password)throw new Q("weak-password")},ua:ag,va:!0},Xf={endpoint:"createAuthUri"},rg={endpoint:"deleteAccount",$a:["idToken"]
},gg={endpoint:"setAccountInfo",$a:["idToken","deleteProvider"],F:function(t){if(!ea(t.deleteProvider))throw new Q("internal-error")}},sg={endpoint:"getAccountInfo"},fg={endpoint:"getOobConfirmationCode",$a:["idToken","requestType"],F:function(t){if("VERIFY_EMAIL"!=t.requestType)throw new Q("internal-error")},bb:"email"},eg={endpoint:"getOobConfirmationCode",$a:["requestType"],F:function(t){if("PASSWORD_RESET"!=t.requestType)throw new Q("internal-error");Vf(t)},bb:"email"},Zf={Sd:!0,endpoint:"getProjectConfig",ne:"GET"},ng={endpoint:"resetPassword",F:mg,bb:"email"},cg={endpoint:"setAccountInfo",$a:["idToken"],F:Wf,va:!0},Ef={endpoint:"setAccountInfo",$a:["idToken"],F:function(t){if(Wf(t),!t.password)throw new Q("weak-password")},ua:ag,va:!0},bg={endpoint:"signupNewUser",ua:ag,va:!0},kg={endpoint:"verifyAssertion",F:ig,ua:jg,va:!0},lg={endpoint:"verifyAssertion",F:function(t){if(ig(t),!t.idToken)throw new Q("internal-error")},ua:jg,va:!0},tg={endpoint:"verifyCustomToken",F:function(t){if(!t.token)throw new Q("invalid-custom-token")},ua:ag,va:!0},Df={endpoint:"verifyPassword",F:function(t){if(Vf(t),!t.password)throw new Q("wrong-password")},ua:ag,va:!0},R=function(t,e,n){if(!jf(n,e.$a))return E(new Q("internal-error"));var i,r=e.ne||"POST";return D(n).then(e.F).then(function(){return e.va&&(n.returnSecureToken=!0),Uf(t,e.endpoint,r,n,e.Sd||!1)}).then(function(t){return i=t}).then(e.ua).then(function(){if(!e.bb)return i;if(!(e.bb in i))throw new Q("internal-error");return i[e.bb]})},Sf=function(t){var e,n;n=(t.error&&t.error.errors&&t.error.errors[0]||{}).reason||"";var i={keyInvalid:"invalid-api-key",ipRefererBlocked:"app-not-authorized"};if(n=i[n]?new Q(i[n]):null)return n;n=t.error&&t.error.message||"",i={INVALID_CUSTOM_TOKEN:"invalid-custom-token",CREDENTIAL_MISMATCH:"custom-token-mismatch",MISSING_CUSTOM_TOKEN:"internal-error",INVALID_IDENTIFIER:"invalid-email",MISSING_CONTINUE_URI:"internal-error",INVALID_EMAIL:"invalid-email",INVALID_PASSWORD:"wrong-password",USER_DISABLED:"user-disabled",MISSING_PASSWORD:"internal-error",EMAIL_EXISTS:"email-already-in-use",PASSWORD_LOGIN_DISABLED:"operation-not-allowed",INVALID_IDP_RESPONSE:"invalid-credential",FEDERATED_USER_ID_ALREADY_LINKED:"credential-already-in-use",EMAIL_NOT_FOUND:"user-not-found",EXPIRED_OOB_CODE:"expired-action-code",INVALID_OOB_CODE:"invalid-action-code",MISSING_OOB_CODE:"internal-error",CREDENTIAL_TOO_OLD_LOGIN_AGAIN:"requires-recent-login",INVALID_ID_TOKEN:"invalid-user-token",TOKEN_EXPIRED:"user-token-expired",USER_NOT_FOUND:"user-token-expired",CORS_UNSUPPORTED:"cors-unsupported",TOO_MANY_ATTEMPTS_TRY_LATER:"too-many-requests",WEAK_PASSWORD:"weak-password",OPERATION_NOT_ALLOWED:"operation-not-allowed",USER_CANCELLED:"user-cancelled"},e=(e=n.match(/^[^\s]+\s*:\s*(.*)$/))&&1<e.length?e[1]:void 0;for(var r in i)if(0===n.indexOf(r))return new Q(i[r],e);return!e&&t&&(e=Ze(t)),new Q("internal-error",e)},ug=function(t){this.S=t};ug.prototype.value=function(){return this.S},ug.prototype.zd=function(t){return this.S.style=t,this};var vg=function(t){this.S=t||{}};vg.prototype.value=function(){return this.S},vg.prototype.zd=function(t){return this.S.style=t,this};var xg=function(t){this.We=t,this.Kb=null,this.Cc=wg(this)};xg.prototype.Dc=function(){return this.Cc};var yg=function(t){var e=new vg;return e.S.where=document.body,e.S.url=t.We,e.S.messageHandlersFilter=Ve("gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER"),e.S.attributes=e.S.attributes||{},new ug(e.S.attributes).zd({position:"absolute",top:"-100px",width:"1px",height:"1px"}),e.S.dontclear=!0,e},wg=function(t){return zg().then(function(){return new C(function(e,n){Ve("gapi.iframes.getContext")().open(yg(t).value(),function(i){t.Kb=i,t.Kb.restyle({setHideOnLeave:!1});var r=setTimeout(function(){n(Error("Network Error"))},Ag.get()),o=function(){clearTimeout(r),e()};i.ping(o).then(o,function(){n(Error("Network Error"))})})})})};xg.prototype.sendMessage=function(t){var e=this;return this.Cc.then(function(){return new C(function(n){e.Kb.send(t.type,t,n,Ve("gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER"))})})};var Bg=function(t,e){t.Cc.then(function(){t.Kb.register("authEvent",e,Ve("gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER"))})},Cg=new df(3e3,15e3),Ag=new df(5e3,15e3),zg=function(){return new C(function(t,e){var n=function(){cf(),Ve("gapi.load")("gapi.iframes",{callback:t,ontimeout:function(){cf(),e(Error("Network Error"))},timeout:Cg.get()})};if(Ve("gapi.iframes.Iframe"))t();else if(Ve("gapi.load"))n();else{var i="__iframefcb"+Math.floor(1e6*Math.random()).toString();l[i]=function(){Ve("gapi.load")?n():e(Error("Network Error"))},D(rd("https://apis.google.com/js/api.js?onload="+i)).h(function(){e(Error("Network Error"))})}})},Dg=function(t,e,n){this.A=t,this.i=e,this.C=n,this.Ha=null,this.o=De(this.A,"/__/auth/iframe"),M(this.o,"apiKey",this.i),M(this.o,"appName",this.C)};Dg.prototype.setVersion=function(t){return this.Ha=t,this},Dg.prototype.toString=function(){return this.Ha?M(this.o,"v",this.Ha):Be(this.o,"v"),this.o.toString()};var Eg=function(t,e,n,i,r){this.A=t,this.i=e,this.C=n,this.Rd=i,this.Ha=this.U=this.Lc=null,this.Vb=r,this.o=De(this.A,"/__/auth/handler"),M(this.o,"apiKey",this.i),M(this.o,"appName",this.C),M(this.o,"authType",this.Rd)};Eg.prototype.setVersion=function(t){return this.Ha=t,this},Eg.prototype.toString=function(){if(this.Vb.isOAuthProvider){M(this.o,"providerId",this.Vb.providerId);var t=this.Vb.ge();t&&t.length&&M(this.o,"scopes",t.join(",")),t=this.Vb.fe(),Sa(t)||M(this.o,"customParameters",Ze(t))}return this.Lc?M(this.o,"redirectUrl",this.Lc):Be(this.o,"redirectUrl"),this.U?M(this.o,"eventId",this.U):Be(this.o,"eventId"),this.Ha?M(this.o,"v",this.Ha):Be(this.o,"v"),this.o.toString()};var Gg=function(t,e,n,i){this.A=t,this.i=e,this.C=n,i=this.ya=i||null,this.oe=new Dg(t,e,n).setVersion(i).toString(),this.xc=new xg(this.oe),this.Ab=[],Fg(this)};Gg.prototype.Dc=function(){return this.xc.Dc()};var Hg=function(t,e,n,i,r,o,a,s){return t=new Eg(t,e,n,i,r),t.Lc=o,t.U=a,t.setVersion(s).toString()},Fg=function(t){Bg(t.xc,function(e){var n={};if(e&&e.authEvent){var i=!1;if(e=e.authEvent||{},e.type){if(n=e.error)var r=(n=e.error)&&(n.name||n.code),n=r?new Q(r.substring(5),n.message):null;e=new qf(e.type,e.eventId,e.urlResponse,e.sessionId,n)}else e=null;for(n=0;n<t.Ab.length;n++)i=t.Ab[n](e)||i;return n={},n.status=i?"ACK":"ERROR",D(n)}return n.status="ERROR",D(n)})},Ig=function(t){return t.xc.sendMessage({type:"webStorageSupport"}).then(function(t){if(t&&t.length&&"undefined"!=typeof t[0].webStorageSupport)return t[0].webStorageSupport;throw Error()})},Jg=function(t,e){Ma(t.Ab,function(t){return t==e})},Kg=function(t){if(this.u=t||firebase.INTERNAL.reactNative&&firebase.INTERNAL.reactNative.AsyncStorage,!this.u)throw new Q("internal-error","The React Native compatibility library was not found.")};h=Kg.prototype,h.get=function(t){return D(this.u.getItem(t)).then(function(t){return t&&af(t)})},h.set=function(t,e){return D(this.u.setItem(t,Ze(e)))},h.remove=function(t){return D(this.u.removeItem(t))},h.Ja=function(){},h.Ya=function(){};var Lg=function(){this.u={}};h=Lg.prototype,h.get=function(t){return D(this.u[t])},h.set=function(t,e){return this.u[t]=e,D()},h.remove=function(t){return delete this.u[t],D()},h.Ja=function(){},h.Ya=function(){};var Ng=function(){if(!Mg()){if("Node"==O())throw new Q("internal-error","The LocalStorage compatibility library was not found.");throw new Q("web-storage-unsupported")}this.u=l.localStorage||firebase.INTERNAL.node.localStorage},Mg=function(){var t="Node"==O(),t=l.localStorage||t&&firebase.INTERNAL.node&&firebase.INTERNAL.node.localStorage;if(!t)return!1;try{return t.setItem("__sak","1"),t.removeItem("__sak"),!0}catch(t){return!1}};h=Ng.prototype,h.get=function(t){var e=this;return D().then(function(){var n=e.u.getItem(t);return af(n)})},h.set=function(t,e){var n=this;return D().then(function(){var i=Ze(e);null===i?n.remove(t):n.u.setItem(t,i)})},h.remove=function(t){var e=this;return D().then(function(){e.u.removeItem(t)})},h.Ja=function(t){l.window&&Jb(l.window,"storage",t)},h.Ya=function(t){l.window&&Sb(l.window,"storage",t)};var Og=function(){this.u={}};h=Og.prototype,h.get=function(){return D(null)},h.set=function(){return D()},h.remove=function(){return D()},h.Ja=function(){},h.Ya=function(){};var Qg=function(){if(!Pg()){if("Node"==O())throw new Q("internal-error","The SessionStorage compatibility library was not found.");throw new Q("web-storage-unsupported")}this.u=l.sessionStorage||firebase.INTERNAL.node.sessionStorage},Pg=function(){var t="Node"==O(),t=l.sessionStorage||t&&firebase.INTERNAL.node&&firebase.INTERNAL.node.sessionStorage;if(!t)return!1;try{return t.setItem("__sak","1"),t.removeItem("__sak"),!0}catch(t){return!1}};h=Qg.prototype,h.get=function(t){var e=this;return D().then(function(){var n=e.u.getItem(t);return af(n)})},h.set=function(t,e){var n=this;return D().then(function(){var i=Ze(e);null===i?n.remove(t):n.u.setItem(t,i)})},h.remove=function(t){var e=this;return D().then(function(){e.u.removeItem(t)})},h.Ja=function(){},h.Ya=function(){};var Rg=function(t,e,n,i,r,o){if(!window.indexedDB)throw new Q("web-storage-unsupported");this.Vd=t,this.Bc=e,this.rc=n,this.Fd=i,this.hb=r,this.P={},this.wb=[],this.sb=0,this.pe=o||l.indexedDB},Sg,Tg=function(t){return new C(function(e,n){var i=t.pe.open(t.Vd,t.hb);i.onerror=function(t){n(Error(t.target.errorCode))},i.onupgradeneeded=function(e){e=e.target.result;try{e.createObjectStore(t.Bc,{keyPath:t.rc})}catch(t){n(t)}},i.onsuccess=function(t){e(t.target.result)}})},Ug=function(t){return t.kd||(t.kd=Tg(t)),t.kd},Vg=function(t,e){return e.objectStore(t.Bc)},Wg=function(t,e,n){return e.transaction([t.Bc],n?"readwrite":"readonly")},Xg=function(t){return new C(function(e,n){t.onsuccess=function(t){t&&t.target?e(t.target.result):e()},t.onerror=function(t){n(Error(t.target.errorCode))}})};h=Rg.prototype,h.set=function(t,e){var n,i=!1,r=this;return bd(Ug(this).then(function(e){return n=e,e=Vg(r,Wg(r,n,!0)),Xg(e.get(t))}).then(function(o){var a=Vg(r,Wg(r,n,!0));return o?(o.value=e,Xg(a.put(o))):(r.sb++,i=!0,o={},o[r.rc]=t,o[r.Fd]=e,Xg(a.add(o)))}).then(function(){r.P[t]=e}),function(){i&&r.sb--})},h.get=function(t){var e=this;return Ug(this).then(function(n){return Xg(Vg(e,Wg(e,n,!1)).get(t))}).then(function(t){return t&&t.value})},h.remove=function(t){var e=!1,n=this;return bd(Ug(this).then(function(i){return e=!0,n.sb++,Xg(Vg(n,Wg(n,i,!0)).delete(t))}).then(function(){delete n.P[t]}),function(){e&&n.sb--})},h.Oe=function(){var t=this;return Ug(this).then(function(e){var n=Vg(t,Wg(t,e,!1));return n.getAll?Xg(n.getAll()):new C(function(t,e){var i=[],r=n.openCursor();r.onsuccess=function(e){(e=e.target.result)?(i.push(e.value),e.continue()):t(i)},r.onerror=function(t){e(Error(t.target.errorCode))}})}).then(function(e){var n={},i=[];if(0==t.sb){for(i=0;i<e.length;i++)n[e[i][t.rc]]=e[i][t.Fd];i=Ke(t.P,n),t.P=n}return i})},h.Ja=function(t){0==this.wb.length&&this.Qc(),this.wb.push(t)},h.Ya=function(t){Ma(this.wb,function(e){return e==t}),0==this.wb.length&&this.ec()},h.Qc=function(){var t=this;this.ec();var e=function(){return t.Hc=Yd(800).then(q(t.Oe,t)).then(function(e){0<e.length&&x(t.wb,function(t){t(e)})}).then(e).h(function(t){"STOP_EVENT"!=t.message&&e()}),t.Hc};e()},h.ec=function(){this.Hc&&this.Hc.cancel("STOP_EVENT")};var ah=function(){this.cd={Browser:Yg,Node:Zg,ReactNative:$g}[O()]},bh,Yg={X:Ng,Sc:Qg},Zg={X:Ng,Sc:Qg},$g={X:Kg,Sc:Og},ch=function(t){var e={},n=t.email,i=t.newEmail;if(t=t.requestType,!n||!t)throw Error("Invalid provider user info!");e.fromEmail=i||null,e.email=n,P(this,"operation",t),P(this,"data",kf(e))},dh="First Second Third Fourth Fifth Sixth Seventh Eighth Ninth".split(" "),T=function(t,e){return{name:t||"",ea:"a valid string",optional:!!e,fa:n}},U=function(t){return{name:t||"",ea:"a valid object",optional:!1,fa:ha}},eh=function(t,e){return{name:t||"",ea:"a function",optional:!!e,fa:p}},fh=function(){return{name:"",ea:"null",optional:!1,fa:da}},gh=function(){return{name:"credential",ea:"a valid credential",optional:!1,fa:function(t){return!(!t||!t.Fb)}}},hh=function(){return{name:"authProvider",ea:"a valid Auth provider",optional:!1,fa:function(t){return!!(t&&t.providerId&&t.hasOwnProperty&&t.hasOwnProperty("isOAuthProvider"))}}},ih=function(t,e,n,i){return{name:n||"",ea:t.ea+" or "+e.ea,optional:!!i,fa:function(n){return t.fa(n)||e.fa(n)}}},kh=function(t,e){for(var n in e){var i=e[n].name;t[i]=jh(i,t[n],e[n].a)}},V=function(t,e,n,i){t[e]=jh(e,n,i)},jh=function(t,e,n){if(!n)return e;var i=lh(t);t=function(){var t,r=Array.prototype.slice.call(arguments);t:{t=Array.prototype.slice.call(r);var o;o=0;for(var a=!1,s=0;s<n.length;s++)if(n[s].optional)a=!0;else{if(a)throw new Q("internal-error","Argument validator encountered a required argument after an optional argument.");o++}if(a=n.length,t.length<o||a<t.length)t="Expected "+(o==a?1==o?"1 argument":o+" arguments":o+"-"+a+" arguments")+" but got "+t.length+".";else{for(o=0;o<t.length;o++)if(a=n[o].optional&&void 0===t[o],!n[o].fa(t[o])&&!a){if(t=n[o],0>o||o>=dh.length)throw new Q("internal-error","Argument validator received an unsupported number of arguments.");t=dh[o]+" argument "+(t.name?'"'+t.name+'" ':"")+"must be "+t.ea+".";break t}t=null}}if(t)throw new Q("argument-error",i+" failed: "+t);return e.apply(this,r)};for(var r in e)t[r]=e[r];for(r in e.prototype)t.prototype[r]=e.prototype[r];return t},lh=function(t){return t=t.split("."),t[t.length-1]},mh=function(t,e,n,i){this.Be=t,this.xd=e,this.He=n,this.cb=i,this.O={},bh||(bh=new ah),t=bh;try{var r;Ie()?(Sg||(Sg=new Rg("firebaseLocalStorageDb","firebaseLocalStorage","fbase_key","value",1)),r=Sg):r=new t.cd.X,this.Sa=r}catch(t){this.Sa=new Lg,this.cb=!0}try{this.gc=new t.cd.Sc}catch(t){this.gc=new Lg}this.Ad=q(this.Bd,this),this.P={}},nh,oh=function(){return nh||(nh=new mh("firebase",":",!(bf(N())||!l.window||l.window==l.window.top),Ye())),nh};h=mh.prototype,h.M=function(t,e){return this.Be+this.xd+t.name+(e?this.xd+e:"")},h.get=function(t,e){return(t.X?this.Sa:this.gc).get(this.M(t,e))},h.remove=function(t,e){return e=this.M(t,e),t.X&&!this.cb&&(this.P[e]=null),(t.X?this.Sa:this.gc).remove(e)},h.set=function(t,e,n){var i=this.M(t,n),r=this,o=t.X?this.Sa:this.gc;return o.set(i,e).then(function(){return o.get(i)}).then(function(e){t.X&&!this.cb&&(r.P[i]=e)})},h.addListener=function(t,e,n){t=this.M(t,e),this.cb||(this.P[t]=l.localStorage.getItem(t)),Sa(this.O)&&this.Qc(),this.O[t]||(this.O[t]=[]),this.O[t].push(n)},h.removeListener=function(t,e,n){t=this.M(t,e),this.O[t]&&(Ma(this.O[t],function(t){return t==n}),0==this.O[t].length&&delete this.O[t]),Sa(this.O)&&this.ec()},h.Qc=function(){this.Sa.Ja(this.Ad),this.cb||ph(this)};var ph=function(t){qh(t),t.Ac=setInterval(function(){for(var e in t.O){var n=l.localStorage.getItem(e);n!=t.P[e]&&(t.P[e]=n,n=new yb({type:"storage",key:e,target:window,oldValue:t.P[e],newValue:n}),t.Bd(n))}},1e3)},qh=function(t){t.Ac&&(clearInterval(t.Ac),t.Ac=null)};mh.prototype.ec=function(){this.Sa.Ya(this.Ad),this.cb||qh(this)},mh.prototype.Bd=function(t){if(t&&t.ee){var e=t.lb.key;if(this.He){var n=l.localStorage.getItem(e);t=t.lb.newValue,t!=n&&(t?l.localStorage.setItem(e,t):t||l.localStorage.removeItem(e))}this.P[e]=l.localStorage.getItem(e),this.Xc(e)}else x(t,q(this.Xc,this))},mh.prototype.Xc=function(t){this.O[t]&&x(this.O[t],function(t){t()})};var rh=function(t){this.B=t,this.w=oh()},sh={name:"pendingRedirect",X:!1},th=function(t){return t.w.set(sh,"pending",t.B)},uh=function(t){return t.w.remove(sh,t.B)},vh=function(t){return t.w.get(sh,t.B).then(function(t){return"pending"==t})},yh=function(t,e,n){var i=this,r=(this.ya=firebase.SDK_VERSION||null)?Ue(this.ya):null;this.f=new S(e,null,r),this.pa=null,this.A=t,this.i=e,this.C=n,this.xb=[],this.Nb=!1,this.Tc=q(this.he,this),this.Va=new wh(this),this.rd=new xh(this),this.Gc=new rh(this.i+":"+this.C),this.fb={},this.fb.unknown=this.Va,this.fb.signInViaRedirect=this.Va,this.fb.linkViaRedirect=this.Va,this.fb.signInViaPopup=this.rd,this.fb.linkViaPopup=this.rd,this.Zb=this.ab=null,this.Sb=new C(function(t,e){i.ab=t,i.Zb=e})};yh.prototype.reset=function(){var t=this;this.pa=null,this.Sb.cancel(),this.Nb=!1,this.Zb=this.ab=null,this.pb&&Jg(this.pb,this.Tc),this.Sb=new C(function(e,n){t.ab=e,t.Zb=n})};var zh=function(t){var e=Je();return $f(t).then(function(t){t:{var n=Ce(e),i=n.ca;if("http"==i||"https"==i)for(n=n.ha,i=0;i<t.length;i++){var r,o=t[i];if(r=n,Re.test(o)?r=r==o:(o=o.split(".").join("\\."),r=new RegExp("^(.+\\."+o+"|"+o+")$","i").test(r)),r){t=!0;break t}}t=!1}if(!t)throw new rf(Je())})},Ah=function(t){return t.Nb||(t.Nb=!0,Se().then(function(){t.pb=new Gg(t.A,t.i,t.C,t.ya),t.pb.Dc().h(function(){t.Zb(new Q("network-request-failed")),t.reset()}),t.pb.Ab.push(t.Tc)})),t.Sb};yh.prototype.subscribe=function(t){if(Ja(this.xb,t)||this.xb.push(t),!this.Nb){var e=this,n=function(){var t=N();Ye(t)||bf(t)||Ah(e),Bh(e.Va)};vh(this.Gc).then(function(t){t?uh(e.Gc).then(function(){Ah(e)}):n()}).h(function(){n()})}},yh.prototype.unsubscribe=function(t){Ma(this.xb,function(e){return e==t})},yh.prototype.he=function(t){if(!t)throw new Q("invalid-auth-event");this.ab&&(this.ab(),this.ab=null);for(var e=!1,n=0;n<this.xb.length;n++){var i=this.xb[n];if(i.Yc(t.wa,t.U)){(e=this.fb[t.wa])&&e.sd(t,i),e=!0;break}}return Bh(this.Va),e};var Ch=new df(2e3,1e4),Dh=new df(1e4,3e4);yh.prototype.getRedirectResult=function(){return this.Va.getRedirectResult()};var Fh=function(t,e,n,i,r,o){return e?o?(Ah(t),D()):(t.pa||(t.pa=zh(t.f)),t.pa.then(function(){return Ah(t)}).then(function(){Eh(i);var o=Hg(t.A,t.i,t.C,n,i,null,r,t.ya);(e||l.window).location.href=cc(fc(o))}).h(function(e){throw"auth/network-request-failed"==e.code&&(t.pa=null),e})):E(new Q("popup-blocked"))},Gh=function(t,e,n,i){return t.pa||(t.pa=zh(t.f)),t.pa.then(function(){Eh(n);var r=Hg(t.A,t.i,t.C,e,n,Je(),i,t.ya);th(t.Gc).then(function(){l.window.location.href=cc(fc(r))})})},Hh=function(t,e,n,i,r){var o=new Q("popup-closed-by-user"),a=new Q("web-storage-unsupported"),s=!1;return t.Sb.then(function(){Ig(t.pb).then(function(t){t||(i&&Oe(i),e.ta(n,null,a,r),s=!0)})}).h(function(){}).then(function(){if(!s)return Qe(i)}).then(function(){if(!s)return Yd(Ch.get()).then(function(){e.ta(n,null,o,r)})})},Eh=function(t){if(!t.isOAuthProvider)throw new Q("invalid-oauth-provider")},Ih={},Jh=function(t,e,n){var i=e+":"+n;return Ih[i]||(Ih[i]=new yh(t,e,n)),Ih[i]},wh=function(t){this.w=t,this.vb=this.Yb=this.Wa=this.Z=null,this.Kc=!1};wh.prototype.sd=function(t,e){if(!t)return E(new Q("invalid-auth-event"));this.Kc=!0;var n=t.wa,i=t.U,r=t.getError()&&"auth/web-storage-unsupported"==t.getError().code;return"unknown"!=n||r?t=t.K?this.Ic(t,e):e.mb(n,i)?this.Jc(t,e):E(new Q("invalid-auth-event")):(this.Z||Kh(this,!1,null,null),t=D()),t};var Bh=function(t){t.Kc||(t.Kc=!0,Kh(t,!1,null,null))};wh.prototype.Ic=function(t){return this.Z||Kh(this,!0,null,t.getError()),D()},wh.prototype.Jc=function(t,e){var n=this,i=t.wa;e=e.mb(i,t.U);var r=t.gb;t=t.cc;var o="signInViaRedirect"==i||"linkViaRedirect"==i;return this.Z?D():(this.vb&&this.vb.cancel(),e(r,t).then(function(t){n.Z||Kh(n,o,t,null)}).h(function(t){n.Z||Kh(n,o,null,t)}))};var Kh=function(t,e,n,i){e?i?(t.Z=function(){return E(i)},t.Yb&&t.Yb(i)):(t.Z=function(){return D(n)},t.Wa&&t.Wa(n)):(t.Z=function(){return D({user:null})},t.Wa&&t.Wa({user:null})),t.Wa=null,t.Yb=null};wh.prototype.getRedirectResult=function(){var t=this;return this.Wc||(this.Wc=new C(function(e,n){t.Z?t.Z().then(e,n):(t.Wa=e,t.Yb=n,Lh(t))})),this.Wc};var Lh=function(t){var e=new Q("timeout");t.vb&&t.vb.cancel(),t.vb=Yd(Dh.get()).then(function(){t.Z||Kh(t,!0,null,e)})},xh=function(t){this.w=t};xh.prototype.sd=function(t,e){if(!t)return E(new Q("invalid-auth-event"));var n=t.wa,i=t.U;return t.K?this.Ic(t,e):e.mb(n,i)?this.Jc(t,e):E(new Q("invalid-auth-event"))},xh.prototype.Ic=function(t,e){return e.ta(t.wa,null,t.getError(),t.U),D()},xh.prototype.Jc=function(t,e){var n=t.U,i=t.wa;return e.mb(i,n)(t.gb,t.cc).then(function(t){e.ta(i,t,null,n)}).h(function(t){e.ta(i,null,t,n)})};var Mh=function(t){this.f=t,this.xa=this.T=null,this.Oa=0};Mh.prototype.I=function(){return{apiKey:this.f.i,refreshToken:this.T,accessToken:this.xa,expirationTime:this.Oa}};var Oh=function(t,e){var n=e.idToken,i=e.refreshToken;e=Nh(e.expiresIn),t.xa=n,t.Oa=e,t.T=i},Nh=function(t){return la()+1e3*parseInt(t,10)},Ph=function(t,e){return Tf(t.f,e).then(function(e){return t.xa=e.access_token,t.Oa=Nh(e.expires_in),t.T=e.refresh_token,{accessToken:t.xa,expirationTime:t.Oa,refreshToken:t.T}}).h(function(e){throw"auth/user-token-expired"==e.code&&(t.T=null),e})},Qh=function(t){return!(!t.xa||t.T)};Mh.prototype.getToken=function(t){return t=!!t,Qh(this)?E(new Q("user-token-expired")):t||!this.xa||la()>this.Oa-3e4?this.T?Ph(this,{grant_type:"refresh_token",refresh_token:this.T}):D(null):D({accessToken:this.xa,expirationTime:this.Oa,refreshToken:this.T})};var Rh=function(t,e,n,i,r){gf(this,{uid:t,displayName:i||null,photoURL:r||null,email:n||null,providerId:e})},Sh=function(t,e){xb.call(this,t);for(var n in e)this[n]=e[n]};r(Sh,xb);var W=function(t,e,n){this.W=[],this.i=t.apiKey,this.C=t.appName,this.A=t.authDomain||null,t=firebase.SDK_VERSION?Ue(firebase.SDK_VERSION):null,this.f=new S(this.i,null,t),this.da=new Mh(this.f),Th(this,e.idToken),Oh(this.da,e),P(this,"refreshToken",this.da.T),Uh(this,n||{}),G.call(this),this.Tb=!1,this.A&&Xe()&&(this.j=Jh(this.A,this.i,this.C)),this.dc=[],this.nc=D()};r(W,G),W.prototype.ra=function(t,e){var n=Array.prototype.slice.call(arguments,1),i=this;return this.nc=this.nc.then(function(){return t.apply(i,n)},function(){return t.apply(i,n)})};var Th=function(t,e){t.ld=e,P(t,"_lat",e)},Vh=function(t,e){Ma(t.dc,function(t){return t==e})},Wh=function(t){for(var e=[],n=0;n<t.dc.length;n++)e.push(t.dc[n](t));return Zc(e).then(function(){return t})},Xh=function(t){t.j&&!t.Tb&&(t.Tb=!0,t.j.subscribe(t))},Uh=function(t,e){gf(t,{uid:e.uid,displayName:e.displayName||null,photoURL:e.photoURL||null,email:e.email||null,emailVerified:e.emailVerified||!1,isAnonymous:e.isAnonymous||!1,providerData:[]})};P(W.prototype,"providerId","firebase");var Yh=function(){},Zh=function(t){return D().then(function(){if(t.Xd)throw new Q("app-deleted")})},$h=function(t){return Fa(t.providerData,function(t){return t.providerId})},bi=function(t,e){e&&(ai(t,e.providerId),t.providerData.push(e))},ai=function(t,e){Ma(t.providerData,function(t){return t.providerId==e})},ci=function(t,e,n){("uid"!=e||n)&&t.hasOwnProperty(e)&&P(t,e,n)};W.prototype.copy=function(t){var e=this;e!=t&&(gf(this,{uid:t.uid,displayName:t.displayName,photoURL:t.photoURL,email:t.email,emailVerified:t.emailVerified,isAnonymous:t.isAnonymous,providerData:[]}),x(t.providerData,function(t){bi(e,t)}),this.da=t.da,P(this,"refreshToken",this.da.T))},W.prototype.reload=function(){var t=this;return Zh(this).then(function(){return di(t).then(function(){return Wh(t)}).then(Yh)})};var di=function(t){return t.getToken().then(function(e){var n=t.isAnonymous;return ei(t,e).then(function(){return n||ci(t,"isAnonymous",!1),e}).h(function(e){throw"auth/user-token-expired"==e.code&&(t.dispatchEvent(new Sh("userDeleted")),fi(t)),e})})};W.prototype.getToken=function(t){var e=this,n=Qh(this.da);return Zh(this).then(function(){return e.da.getToken(t)}).then(function(t){if(!t)throw new Q("internal-error");return t.accessToken!=e.ld&&(Th(e,t.accessToken),e.Ca()),ci(e,"refreshToken",t.refreshToken),t.accessToken}).h(function(t){if("auth/user-token-expired"==t.code&&!n)return Wh(e).then(function(){throw ci(e,"refreshToken",null),t});throw t})};var gi=function(t,e){e.idToken&&t.ld!=e.idToken&&(Oh(t.da,e),t.Ca(),Th(t,e.idToken),ci(t,"refreshToken",t.da.T))};W.prototype.Ca=function(){this.dispatchEvent(new Sh("tokenChanged"))};var ei=function(t,e){return R(t.f,sg,{idToken:e}).then(q(t.Ee,t))};W.prototype.Ee=function(t){if(t=t.users,!t||!t.length)throw new Q("internal-error");t=t[0],Uh(this,{uid:t.localId,displayName:t.displayName,photoURL:t.photoUrl,email:t.email,emailVerified:!!t.emailVerified});for(var e=hi(t),n=0;n<e.length;n++)bi(this,e[n]);ci(this,"isAnonymous",!(this.email&&t.passwordHash||this.providerData&&this.providerData.length))};var hi=function(t){return(t=t.providerUserInfo)&&t.length?Fa(t,function(t){return new Rh(t.rawId,t.providerId,t.email,t.displayName,t.photoUrl)}):[]};W.prototype.reauthenticate=function(t){var e=this;return this.c(t.Fb(this.f).then(function(t){var n;t:{var i=t.idToken.split(".");if(3==i.length){for(var i=i[1],r=(4-i.length%4)%4,o=0;o<r;o++)i+=".";try{var a=hc(sb(i));if(a.sub&&a.iss&&a.aud&&a.exp){n=new sf(a);break t}}catch(t){}}n=null}if(!n||e.uid!=n.xe)throw new Q("user-mismatch");return gi(e,t),e.reload()}))};var ii=function(t,e){return di(t).then(function(){if(Ja($h(t),e))return Wh(t).then(function(){throw new Q("provider-already-linked")})})};h=W.prototype,h.ve=function(t){var e=this;return this.c(ii(this,t.provider).then(function(){return e.getToken()}).then(function(n){return t.nd(e.f,n)}).then(q(this.ed,this)))},h.link=function(t){return this.ra(this.ve,t)},h.ed=function(t){gi(this,t);var e=this;return this.reload().then(function(){return e})},h.Te=function(t){var e=this;return this.c(this.getToken().then(function(n){return e.f.updateEmail(n,t)}).then(function(t){return gi(e,t),e.reload()}))},h.updateEmail=function(t){return this.ra(this.Te,t)},h.Ue=function(t){var e=this;return this.c(this.getToken().then(function(n){return e.f.updatePassword(n,t)}).then(function(t){return gi(e,t),e.reload()}))},h.updatePassword=function(t){return this.ra(this.Ue,t)},h.Ve=function(t){if(void 0===t.displayName&&void 0===t.photoURL)return Zh(this);var e=this;return this.c(this.getToken().then(function(n){return e.f.updateProfile(n,{displayName:t.displayName,photoUrl:t.photoURL})}).then(function(t){return gi(e,t),ci(e,"displayName",t.displayName||null),ci(e,"photoURL",t.photoUrl||null),Wh(e)}).then(Yh))},h.updateProfile=function(t){return this.ra(this.Ve,t)},h.Se=function(t){var e=this;return this.c(di(this).then(function(n){return Ja($h(e),t)?hg(e.f,n,[t]).then(function(t){var n={};return x(t.providerUserInfo||[],function(t){n[t.providerId]=!0}),x($h(e),function(t){n[t]||ai(e,t)}),Wh(e)}):Wh(e).then(function(){throw new Q("no-such-provider")})}))},h.unlink=function(t){return this.ra(this.Se,t)},h.Wd=function(){var t=this;return this.c(this.getToken().then(function(e){return R(t.f,rg,{idToken:e})}).then(function(){t.dispatchEvent(new Sh("userDeleted"))})).then(function(){fi(t)})},h.delete=function(){return this.ra(this.Wd)},h.Yc=function(t,e){return!!("linkViaPopup"==t&&(this.ja||null)==e&&this.ba||"linkViaRedirect"==t&&(this.Xb||null)==e)},h.ta=function(t,e,n,i){"linkViaPopup"==t&&i==(this.ja||null)&&(n&&this.Ea?this.Ea(n):e&&!n&&this.ba&&this.ba(e),this.D&&(this.D.cancel(),this.D=null),delete this.ba,delete this.Ea)},h.mb=function(t,e){return"linkViaPopup"==t&&e==(this.ja||null)||"linkViaRedirect"==t&&(this.Xb||null)==e?q(this.$d,this):null},h.Eb=function(){return We(this.uid+":::")};var ki=function(t,e){if(!Xe())return E(new Q("operation-not-supported-in-this-environment"));var n=nf(e.providerId),i=t.Eb(),r=null;!Ye()&&t.A&&e.isOAuthProvider&&(r=Hg(t.A,t.i,t.C,"linkViaPopup",e,null,i,firebase.SDK_VERSION||null));var o=Pe(r,n&&n.ub,n&&n.tb),n=ii(t,e.providerId).then(function(){return Wh(t)}).then(function(){return ji(t),t.getToken()}).then(function(){return Fh(t.j,o,"linkViaPopup",e,i,!!r)}).then(function(){return new C(function(e,n){t.ta("linkViaPopup",null,new Q("cancelled-popup-request"),t.ja||null),t.ba=e,t.Ea=n,t.ja=i,t.D=Hh(t.j,t,"linkViaPopup",o,i)})}).then(function(t){return o&&Oe(o),t}).h(function(t){throw o&&Oe(o),t});return t.c(n)};W.prototype.linkWithPopup=function(t){var e=ki(this,t);return this.ra(function(){return e})},W.prototype.we=function(t){if(!Xe())return E(new Q("operation-not-supported-in-this-environment"));var e=this,n=null,i=this.Eb(),r=ii(this,t.providerId).then(function(){return ji(e),e.getToken()}).then(function(){return e.Xb=i,Wh(e)}).then(function(t){return e.Fa&&(t=e.Fa,t=t.w.set(li,e.I(),t.B)),t}).then(function(){return Gh(e.j,"linkViaRedirect",t,i)}).h(function(t){if(n=t,e.Fa)return mi(e.Fa);throw n}).then(function(){if(n)throw n});return this.c(r)},W.prototype.linkWithRedirect=function(t){return this.ra(this.we,t)};var ji=function(t){if(!t.j||!t.Tb){if(t.j&&!t.Tb)throw new Q("internal-error");throw new Q("auth-domain-config-required")}};W.prototype.$d=function(t,e){var n=this;this.D&&(this.D.cancel(),this.D=null);var i=null,r=this.getToken().then(function(i){return wf(n.f,{requestUri:t,sessionId:e,idToken:i})}).then(function(t){return i=Hf(t),n.ed(t)}).then(function(t){return{user:t,credential:i}});return this.c(r)},W.prototype.sendEmailVerification=function(){var t=this;return this.c(this.getToken().then(function(e){return t.f.sendEmailVerification(e)}).then(function(e){if(t.email!=e)return t.reload()}).then(function(){}))};var fi=function(t){for(var e=0;e<t.W.length;e++)t.W[e].cancel("app-deleted");t.W=[],t.Xd=!0,P(t,"refreshToken",null),t.j&&t.j.unsubscribe(t)};W.prototype.c=function(t){var e=this;return this.W.push(t),bd(t,function(){La(e.W,t)}),t},W.prototype.toJSON=function(){return this.I()},W.prototype.I=function(){var t={uid:this.uid,displayName:this.displayName,photoURL:this.photoURL,email:this.email,emailVerified:this.emailVerified,isAnonymous:this.isAnonymous,providerData:[],apiKey:this.i,appName:this.C,authDomain:this.A,stsTokenManager:this.da.I(),redirectEventId:this.Xb||null};return x(this.providerData,function(e){t.providerData.push(hf(e))}),t};var ni=function(t){if(!t.apiKey)return null;var e={apiKey:t.apiKey,authDomain:t.authDomain,appName:t.appName},n={};if(!(t.stsTokenManager&&t.stsTokenManager.accessToken&&t.stsTokenManager.expirationTime))return null;n.idToken=t.stsTokenManager.accessToken,n.refreshToken=t.stsTokenManager.refreshToken||null,n.expiresIn=(t.stsTokenManager.expirationTime-la())/1e3;var i=new W(e,n,t);return t.providerData&&x(t.providerData,function(t){if(t){var e={};gf(e,t),bi(i,e)}}),t.redirectEventId&&(i.Xb=t.redirectEventId),i},oi=function(t,e,n){var i=new W(t,e);return n&&(i.Fa=n),i.reload().then(function(){return i})},pi=function(t){this.B=t,this.w=oh()},li={name:"redirectUser",X:!1},mi=function(t){return t.w.remove(li,t.B)},qi=function(t,e){return t.w.get(li,t.B).then(function(t){return t&&e&&(t.authDomain=e),ni(t||{})})},ri=function(t){this.B=t,this.w=oh()},si={name:"authUser",X:!0},ti=function(t,e){return t.w.set(si,e.I(),t.B)},ui=function(t){return t.w.remove(si,t.B)},vi=function(t,e){return t.w.get(si,t.B).then(function(t){return t&&e&&(t.authDomain=e),ni(t||{})})},Y=function(t){if(this.Ma=!1,P(this,"app",t),!X(this).options||!X(this).options.apiKey)throw new Q("invalid-api-key");t=firebase.SDK_VERSION?Ue(firebase.SDK_VERSION):null,this.f=new S(X(this).options&&X(this).options.apiKey,null,t),this.W=[],this.Ka=[],this.Ce=firebase.INTERNAL.createSubscribe(q(this.qe,this)),wi(this,null),this.ma=new ri(X(this).options.apiKey+":"+X(this).name),this.Xa=new pi(X(this).options.apiKey+":"+X(this).name),this.Bb=this.c(xi(this)),this.sa=this.c(yi(this)),this.zc=!1,this.wc=q(this.Ne,this),this.Dd=q(this.Qa,this),this.Ed=q(this.me,this),this.Cd=q(this.le,this),zi(this),this.INTERNAL={},this.INTERNAL.delete=q(this.delete,this)};Y.prototype.toJSON=function(){return{apiKey:X(this).options.apiKey,authDomain:X(this).options.authDomain,appName:X(this).name,currentUser:Z(this)&&Z(this).I()}};var Ai=function(t){return t.Yd||E(new Q("auth-domain-config-required"))},zi=function(t){var e=X(t).options.authDomain,n=X(t).options.apiKey;e&&Xe()&&(t.Yd=t.Bb.then(function(){if(!t.Ma)return t.j=Jh(e,n,X(t).name),t.j.subscribe(t),Z(t)&&Xh(Z(t)),t.Mc&&(Xh(t.Mc),t.Mc=null),t.j}))};h=Y.prototype,h.Yc=function(t,e){switch(t){case"unknown":case"signInViaRedirect":return!0;case"signInViaPopup":return this.ja==e&&!!this.ba;default:return!1}},h.ta=function(t,e,n,i){
"signInViaPopup"==t&&this.ja==i&&(n&&this.Ea?this.Ea(n):e&&!n&&this.ba&&this.ba(e),this.D&&(this.D.cancel(),this.D=null),delete this.ba,delete this.Ea)},h.mb=function(t,e){return"signInViaRedirect"==t||"signInViaPopup"==t&&this.ja==e&&this.ba?q(this.ae,this):null},h.ae=function(t,e){var n=this;t={requestUri:t,sessionId:e},this.D&&(this.D.cancel(),this.D=null);var i=null,r=uf(n.f,t).then(function(t){return i=Hf(t),t});return t=n.Bb.then(function(){return r}).then(function(t){return Bi(n,t)}).then(function(){return{user:Z(n),credential:i}}),this.c(t)},h.Eb=function(){return We()},h.signInWithPopup=function(t){if(!Xe())return E(new Q("operation-not-supported-in-this-environment"));var e=this,n=nf(t.providerId),i=this.Eb(),r=null;!Ye()&&X(this).options.authDomain&&t.isOAuthProvider&&(r=Hg(X(this).options.authDomain,X(this).options.apiKey,X(this).name,"signInViaPopup",t,null,i,firebase.SDK_VERSION||null));var o=Pe(r,n&&n.ub,n&&n.tb),n=Ai(this).then(function(e){return Fh(e,o,"signInViaPopup",t,i,!!r)}).then(function(){return new C(function(t,n){e.ta("signInViaPopup",null,new Q("cancelled-popup-request"),e.ja),e.ba=t,e.Ea=n,e.ja=i,e.D=Hh(e.j,e,"signInViaPopup",o,i)})}).then(function(t){return o&&Oe(o),t}).h(function(t){throw o&&Oe(o),t});return this.c(n)},h.signInWithRedirect=function(t){if(!Xe())return E(new Q("operation-not-supported-in-this-environment"));var e=this,n=Ai(this).then(function(){return Gh(e.j,"signInViaRedirect",t)});return this.c(n)},h.getRedirectResult=function(){if(!Xe())return E(new Q("operation-not-supported-in-this-environment"));var t=this,e=Ai(this).then(function(){return t.j.getRedirectResult()});return this.c(e)};var Bi=function(t,e){var n={};return n.apiKey=X(t).options.apiKey,n.authDomain=X(t).options.authDomain,n.appName=X(t).name,t.Bb.then(function(){return oi(n,e,t.Xa)}).then(function(e){return Z(t)&&e.uid==Z(t).uid?(Z(t).copy(e),t.Qa(e)):(wi(t,e),Xh(e),t.Qa(e))}).then(function(){t.Ca()})},wi=function(t,e){Z(t)&&(Vh(Z(t),t.Dd),Sb(Z(t),"tokenChanged",t.Ed),Sb(Z(t),"userDeleted",t.Cd)),e&&(e.dc.push(t.Dd),Jb(e,"tokenChanged",t.Ed),Jb(e,"userDeleted",t.Cd)),P(t,"currentUser",e)};Y.prototype.signOut=function(){var t=this,e=this.sa.then(function(){return Z(t)?(wi(t,null),ui(t.ma).then(function(){t.Ca()})):D()});return this.c(e)};var Ci=function(t){var e=qi(t.Xa,X(t).options.authDomain).then(function(e){return(t.Mc=e)&&(e.Fa=t.Xa),mi(t.Xa)});return t.c(e)},xi=function(t){var e=X(t).options.authDomain,n=Ci(t).then(function(){return vi(t.ma,e)}).then(function(e){return e?(e.Fa=t.Xa,e.reload().then(function(){return ti(t.ma,e).then(function(){return e})}).h(function(n){return"auth/network-request-failed"==n.code?e:ui(t.ma)})):null}).then(function(e){wi(t,e||null)});return t.c(n)},yi=function(t){return t.Bb.then(function(){return t.getRedirectResult()}).h(function(){}).then(function(){if(!t.Ma)return t.wc()}).h(function(){}).then(function(){if(!t.Ma){t.zc=!0;var e=t.ma;e.w.addListener(si,e.B,t.wc)}})};Y.prototype.Ne=function(){var t=this;return vi(this.ma,X(this).options.authDomain).then(function(e){if(!t.Ma){var n;if(n=Z(t)&&e){n=Z(t).uid;var i=e.uid;n=void 0!==n&&null!==n&&""!==n&&void 0!==i&&null!==i&&""!==i&&n==i}if(n)return Z(t).copy(e),Z(t).getToken();(Z(t)||e)&&(wi(t,e),e&&(Xh(e),e.Fa=t.Xa),t.j&&t.j.subscribe(t),t.Ca())}})},Y.prototype.Qa=function(t){return ti(this.ma,t)},Y.prototype.me=function(){this.Ca(),this.Qa(Z(this))},Y.prototype.le=function(){this.signOut()};var Di=function(t,e){return t.c(e.then(function(e){return Bi(t,e)}).then(function(){return Z(t)}))};h=Y.prototype,h.qe=function(t){var e=this;this.addAuthTokenListener(function(){t.next(Z(e))})},h.onAuthStateChanged=function(t,e,n){var i=this;return this.zc&&firebase.Promise.resolve().then(function(){p(t)?t(Z(i)):p(t.next)&&t.next(Z(i))}),this.Ce(t,e,n)},h.getToken=function(t){var e=this,n=this.sa.then(function(){return Z(e)?Z(e).getToken(t).then(function(t){return{accessToken:t}}):null});return this.c(n)},h.signInWithCustomToken=function(t){var e=this;return this.sa.then(function(){return Di(e,R(e.f,tg,{token:t}))}).then(function(t){return ci(t,"isAnonymous",!1),e.Qa(t)}).then(function(){return Z(e)})},h.signInWithEmailAndPassword=function(t,e){var n=this;return this.sa.then(function(){return Di(n,R(n.f,Df,{email:t,password:e}))})},h.createUserWithEmailAndPassword=function(t,e){var n=this;return this.sa.then(function(){return Di(n,R(n.f,qg,{email:t,password:e}))})},h.signInWithCredential=function(t){var e=this;return this.sa.then(function(){return Di(e,t.Fb(e.f))})},h.signInAnonymously=function(){var t=Z(this),e=this;return t&&t.isAnonymous?D(t):this.sa.then(function(){return Di(e,e.f.signInAnonymously())}).then(function(t){return ci(t,"isAnonymous",!0),e.Qa(t)}).then(function(){return Z(e)})};var X=function(t){return t.app},Z=function(t){return t.currentUser};h=Y.prototype,h.Ca=function(){if(this.zc)for(var t=0;t<this.Ka.length;t++)this.Ka[t]&&this.Ka[t](Z(this)&&Z(this)._lat||null)},h.addAuthTokenListener=function(t){var e=this;this.Ka.push(t),this.c(this.sa.then(function(){e.Ma||Ja(e.Ka,t)&&t(Z(e)&&Z(e)._lat||null)}))},h.removeAuthTokenListener=function(t){Ma(this.Ka,function(e){return e==t})},h.delete=function(){this.Ma=!0;for(var t=0;t<this.W.length;t++)this.W[t].cancel("app-deleted");return this.W=[],this.ma&&(t=this.ma,t.w.removeListener(si,t.B,this.wc)),this.j&&this.j.unsubscribe(this),firebase.Promise.resolve()},h.c=function(t){var e=this;return this.W.push(t),bd(t,function(){La(e.W,t)}),t},h.fetchProvidersForEmail=function(t){return this.c(Yf(this.f,t))},h.verifyPasswordResetCode=function(t){return this.checkActionCode(t).then(function(t){return t.data.email})},h.confirmPasswordReset=function(t,e){return this.c(this.f.confirmPasswordReset(t,e).then(function(){}))},h.checkActionCode=function(t){return this.c(this.f.checkActionCode(t).then(function(t){return new ch(t)}))},h.applyActionCode=function(t){return this.c(this.f.applyActionCode(t).then(function(){}))},h.sendPasswordResetEmail=function(t){return this.c(this.f.sendPasswordResetEmail(t).then(function(){}))},kh(Y.prototype,{applyActionCode:{name:"applyActionCode",a:[T("code")]},checkActionCode:{name:"checkActionCode",a:[T("code")]},confirmPasswordReset:{name:"confirmPasswordReset",a:[T("code"),T("newPassword")]},createUserWithEmailAndPassword:{name:"createUserWithEmailAndPassword",a:[T("email"),T("password")]},fetchProvidersForEmail:{name:"fetchProvidersForEmail",a:[T("email")]},getRedirectResult:{name:"getRedirectResult",a:[]},onAuthStateChanged:{name:"onAuthStateChanged",a:[ih(U(),eh(),"nextOrObserver"),eh("opt_error",!0),eh("opt_completed",!0)]},sendPasswordResetEmail:{name:"sendPasswordResetEmail",a:[T("email")]},signInAnonymously:{name:"signInAnonymously",a:[]},signInWithCredential:{name:"signInWithCredential",a:[gh()]},signInWithCustomToken:{name:"signInWithCustomToken",a:[T("token")]},signInWithEmailAndPassword:{name:"signInWithEmailAndPassword",a:[T("email"),T("password")]},signInWithPopup:{name:"signInWithPopup",a:[hh()]},signInWithRedirect:{name:"signInWithRedirect",a:[hh()]},signOut:{name:"signOut",a:[]},toJSON:{name:"toJSON",a:[T(null,!0)]},verifyPasswordResetCode:{name:"verifyPasswordResetCode",a:[T("code")]}}),kh(W.prototype,{delete:{name:"delete",a:[]},getToken:{name:"getToken",a:[{name:"opt_forceRefresh",ea:"a boolean",optional:!0,fa:function(t){return"boolean"==typeof t}}]},link:{name:"link",a:[gh()]},linkWithPopup:{name:"linkWithPopup",a:[hh()]},linkWithRedirect:{name:"linkWithRedirect",a:[hh()]},reauthenticate:{name:"reauthenticate",a:[gh()]},reload:{name:"reload",a:[]},sendEmailVerification:{name:"sendEmailVerification",a:[]},toJSON:{name:"toJSON",a:[T(null,!0)]},unlink:{name:"unlink",a:[T("provider")]},updateEmail:{name:"updateEmail",a:[T("email")]},updatePassword:{name:"updatePassword",a:[T("password")]},updateProfile:{name:"updateProfile",a:[U("profile")]}}),kh(C.prototype,{h:{name:"catch"},then:{name:"then"}}),V(Ff,"credential",function(t,e){return new Cf(t,e)},[T("email"),T("password")]),kh(yf.prototype,{addScope:{name:"addScope",a:[T("scope")]},setCustomParameters:{name:"setCustomParameters",a:[U("customOAuthParameters")]}}),V(yf,"credential",yf.credential,[ih(T(),U(),"token")]),kh(zf.prototype,{addScope:{name:"addScope",a:[T("scope")]},setCustomParameters:{name:"setCustomParameters",a:[U("customOAuthParameters")]}}),V(zf,"credential",zf.credential,[ih(T(),U(),"token")]),kh(Af.prototype,{addScope:{name:"addScope",a:[T("scope")]},setCustomParameters:{name:"setCustomParameters",a:[U("customOAuthParameters")]}}),V(Af,"credential",Af.credential,[ih(T(),ih(U(),fh()),"idToken"),ih(T(),fh(),"accessToken",!0)]),kh(Bf.prototype,{setCustomParameters:{name:"setCustomParameters",a:[U("customOAuthParameters")]}}),V(Bf,"credential",Bf.credential,[ih(T(),U(),"token"),T("secret",!0)]),function(){if("undefined"==typeof firebase||!firebase.INTERNAL||!firebase.INTERNAL.registerService)throw Error("Cannot find the firebase namespace; be sure to include firebase-app.js before this library.");var t={Auth:Y,Error:Q};V(t,"EmailAuthProvider",Ff,[]),V(t,"FacebookAuthProvider",yf,[]),V(t,"GithubAuthProvider",zf,[]),V(t,"GoogleAuthProvider",Af,[]),V(t,"TwitterAuthProvider",Bf,[]),firebase.INTERNAL.registerService("auth",function(t,e){return t=new Y(t),e({INTERNAL:{getToken:q(t.getToken,t),addAuthTokenListener:q(t.addAuthTokenListener,t),removeAuthTokenListener:q(t.removeAuthTokenListener,t)}}),t},t,function(t,e){if("create"===t)try{e.auth()}catch(t){}}),firebase.INTERNAL.extendNamespace({User:W})}()}(),module.exports=firebase.auth},471:function(module,exports,__webpack_require__){var firebase=__webpack_require__(469);/*! @license Firebase v3.6.1
	    Build: 3.6.1-rc.3
	    Terms: https://firebase.google.com/terms/
	
	    ---
	
	    typedarray.js
	    Copyright (c) 2010, Linden Research, Inc.
	
	    Permission is hereby granted, free of charge, to any person obtaining a copy
	    of this software and associated documentation files (the "Software"), to deal
	    in the Software without restriction, including without limitation the rights
	    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	    copies of the Software, and to permit persons to whom the Software is
	    furnished to do so, subject to the following conditions:
	
	    The above copyright notice and this permission notice shall be included in
	    all copies or substantial portions of the Software.
	
	    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	    THE SOFTWARE. */
!function(){function n(t){return void 0!==t}function ba(){}function ca(t){t.Vb=function(){return t.Ye?t.Ye:t.Ye=new t}}function da(t){var e=typeof t;if("object"==e){if(!t)return"null";if(t instanceof Array)return"array";if(t instanceof Object)return e;var n=Object.prototype.toString.call(t);if("[object Window]"==n)return"object";if("[object Array]"==n||"number"==typeof t.length&&"undefined"!=typeof t.splice&&"undefined"!=typeof t.propertyIsEnumerable&&!t.propertyIsEnumerable("splice"))return"array";if("[object Function]"==n||"undefined"!=typeof t.call&&"undefined"!=typeof t.propertyIsEnumerable&&!t.propertyIsEnumerable("call"))return"function"}else if("function"==e&&"undefined"==typeof t.call)return"object";return e}function ea(t){return"array"==da(t)}function fa(t){var e=da(t);return"array"==e||"object"==e&&"number"==typeof t.length}function p(t){return"string"==typeof t}function ga(t){return"number"==typeof t}function ha(t){return"function"==da(t)}function ia(t){var e=typeof t;return"object"==e&&null!=t||"function"==e}function ja(t,e,n){return t.call.apply(t.bind,arguments)}function ka(t,e,n){if(!t)throw Error();if(2<arguments.length){var i=Array.prototype.slice.call(arguments,2);return function(){var n=Array.prototype.slice.call(arguments);return Array.prototype.unshift.apply(n,i),t.apply(e,n)}}return function(){return t.apply(e,arguments)}}function q(t,e,n){return q=Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf("native code")?ja:ka,q.apply(null,arguments)}function la(t,e){function n(){}n.prototype=e.prototype,t.wg=e.prototype,t.prototype=new n,t.prototype.constructor=t,t.sg=function(t,n,i){for(var r=Array(arguments.length-2),o=2;o<arguments.length;o++)r[o-2]=arguments[o];return e.prototype[n].apply(t,r)}}function ma(){this.Wa=-1}function na(){this.Wa=-1,this.Wa=64,this.M=[],this.Ud=[],this.Af=[],this.xd=[],this.xd[0]=128;for(var t=1;t<this.Wa;++t)this.xd[t]=0;this.Nd=this.$b=0,this.reset()}function oa(t,e,n){n||(n=0);var i=t.Af;if(p(e))for(var r=0;16>r;r++)i[r]=e.charCodeAt(n)<<24|e.charCodeAt(n+1)<<16|e.charCodeAt(n+2)<<8|e.charCodeAt(n+3),n+=4;else for(r=0;16>r;r++)i[r]=e[n]<<24|e[n+1]<<16|e[n+2]<<8|e[n+3],n+=4;for(r=16;80>r;r++){var o=i[r-3]^i[r-8]^i[r-14]^i[r-16];i[r]=4294967295&(o<<1|o>>>31)}e=t.M[0],n=t.M[1];for(var a,s=t.M[2],u=t.M[3],c=t.M[4],r=0;80>r;r++)40>r?20>r?(o=u^n&(s^u),a=1518500249):(o=n^s^u,a=1859775393):60>r?(o=n&s|u&(n|s),a=2400959708):(o=n^s^u,a=3395469782),o=(e<<5|e>>>27)+o+c+a+i[r]&4294967295,c=u,u=s,s=4294967295&(n<<30|n>>>2),n=e,e=o;t.M[0]=t.M[0]+e&4294967295,t.M[1]=t.M[1]+n&4294967295,t.M[2]=t.M[2]+s&4294967295,t.M[3]=t.M[3]+u&4294967295,t.M[4]=t.M[4]+c&4294967295}function r(t,e){for(var n in t)e.call(void 0,t[n],n,t)}function pa(t,e){var n,i={};for(n in t)i[n]=e.call(void 0,t[n],n,t);return i}function qa(t,e){for(var n in t)if(!e.call(void 0,t[n],n,t))return!1;return!0}function ra(t){var e,n=0;for(e in t)n++;return n}function sa(t){for(var e in t)return e}function ta(t){var e,n=[],i=0;for(e in t)n[i++]=t[e];return n}function ua(t){var e,n=[],i=0;for(e in t)n[i++]=e;return n}function va(t,e){for(var n in t)if(t[n]==e)return!0;return!1}function wa(t,e,n){for(var i in t)if(e.call(n,t[i],i,t))return i}function xa(t,e){var n=wa(t,e,void 0);return n&&t[n]}function ya(t){for(var e in t)return!1;return!0}function za(t){var e,n={};for(e in t)n[e]=t[e];return n}function Aa(a){if(a=String(a),/^\s*$/.test(a)?0:/^[\],:{}\s\u2028\u2029]*$/.test(a.replace(/\\["\\\/bfnrtu]/g,"@").replace(/"[^"\\\n\r\u2028\u2029\x00-\x08\x0a-\x1f]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,"]").replace(/(?:^|:|,)(?:[\s\u2028\u2029]*\[)+/g,"")))try{return eval("("+a+")")}catch(t){}throw Error("Invalid JSON string: "+a)}function Ba(){this.Dd=void 0}function Ca(t,e,n){switch(typeof e){case"string":Da(e,n);break;case"number":n.push(isFinite(e)&&!isNaN(e)?e:"null");break;case"boolean":n.push(e);break;case"undefined":n.push("null");break;case"object":if(null==e){n.push("null");break}if(ea(e)){var i=e.length;n.push("[");for(var r="",o=0;o<i;o++)n.push(r),r=e[o],Ca(t,t.Dd?t.Dd.call(e,String(o),r):r,n),r=",";n.push("]");break}n.push("{"),i="";for(o in e)Object.prototype.hasOwnProperty.call(e,o)&&(r=e[o],"function"!=typeof r&&(n.push(i),Da(o,n),n.push(":"),Ca(t,t.Dd?t.Dd.call(e,o,r):r,n),i=","));n.push("}");break;case"function":break;default:throw Error("Unknown type: "+typeof e)}}function Da(t,e){e.push('"',t.replace(Fa,function(t){if(t in Ea)return Ea[t];var e=t.charCodeAt(0),n="\\u";return 16>e?n+="000":256>e?n+="00":4096>e&&(n+="0"),Ea[t]=n+e.toString(16)}),'"')}function Oa(t,e){var n=Pa(t,e,void 0);return 0>n?null:p(t)?t.charAt(n):t[n]}function Pa(t,e,n){for(var i=t.length,r=p(t)?t.split(""):t,o=0;o<i;o++)if(o in r&&e.call(n,r[o],o,t))return o;return-1}function Qa(t,e){var n=Ia(t,e);0<=n&&v.splice.call(t,n,1)}function Ra(t,e,n){return 2>=arguments.length?v.slice.call(t,e):v.slice.call(t,e,n)}function Sa(t,e){t.sort(e||Ta)}function Ta(t,e){return t>e?1:t<e?-1:0}function ab(t,e){if(!fa(t))throw Error("encodeByteArray takes an array as a parameter");bb();for(var n=e?Za:Ya,i=[],r=0;r<t.length;r+=3){var o=t[r],a=r+1<t.length,s=a?t[r+1]:0,u=r+2<t.length,c=u?t[r+2]:0,h=o>>2,o=(3&o)<<4|s>>4,s=(15&s)<<2|c>>6,c=63&c;u||(c=64,a||(s=64)),i.push(n[h],n[o],n[s],n[c])}return i.join("")}function bb(){if(!Ya){Ya={},Za={},$a={};for(var t=0;65>t;t++)Ya[t]="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".charAt(t),Za[t]="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_.".charAt(t),$a[Za[t]]=t,62<=t&&($a["ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".charAt(t)]=t)}}function cb(t,e){return Object.prototype.hasOwnProperty.call(t,e)}function w(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]}function db(t,e){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&e(n,t[n])}function x(t,e,n,i){var r;if(i<e?r="at least "+e:i>n&&(r=0===n?"none":"no more than "+n),r)throw Error(t+" failed: Was called with "+i+(1===i?" argument.":" arguments.")+" Expects "+r+".")}function y(t,e,n){var i="";switch(e){case 1:i=n?"first":"First";break;case 2:i=n?"second":"Second";break;case 3:i=n?"third":"Third";break;case 4:i=n?"fourth":"Fourth";break;default:throw Error("errorPrefix called with argumentNumber > 4.  Need to update it?")}return t=t+" failed: "+(i+" argument ")}function A(t,e,i,r){if((!r||n(i))&&!ha(i))throw Error(y(t,e,r)+"must be a valid function.")}function eb(t,e,i){if(n(i)&&(!ia(i)||null===i))throw Error(y(t,e,!0)+"must be a valid context object.")}function fb(t){var e=[];return db(t,function(t,n){ea(n)?Ja(n,function(n){e.push(encodeURIComponent(t)+"="+encodeURIComponent(n))}):e.push(encodeURIComponent(t)+"="+encodeURIComponent(n))}),e.length?"&"+e.join("&"):""}function hb(){var t=this;this.reject=this.resolve=null,this.ra=new gb(function(e,n){t.resolve=e,t.reject=n})}function ib(t,e){return function(n,i){n?t.reject(n):t.resolve(i),ha(e)&&(jb(t.ra),1===e.length?e(n):e(n,i))}}function jb(t){t.then(void 0,ba)}function kb(t,e){if(!t)throw lb(e)}function lb(t){return Error("Firebase Database ("+firebase.SDK_VERSION+") INTERNAL ASSERT FAILED: "+t)}function mb(t){for(var e=[],n=0,i=0;i<t.length;i++){var r=t.charCodeAt(i);55296<=r&&56319>=r&&(r-=55296,i++,kb(i<t.length,"Surrogate pair missing trail surrogate."),r=65536+(r<<10)+(t.charCodeAt(i)-56320)),128>r?e[n++]=r:(2048>r?e[n++]=r>>6|192:(65536>r?e[n++]=r>>12|224:(e[n++]=r>>18|240,e[n++]=r>>12&63|128),e[n++]=r>>6&63|128),e[n++]=63&r|128)}return e}function nb(t){for(var e=0,n=0;n<t.length;n++){var i=t.charCodeAt(n);128>i?e++:2048>i?e+=2:55296<=i&&56319>=i?(e+=4,n++):e+=3}return e}function ob(t){return"undefined"!=typeof JSON&&n(JSON.parse)?JSON.parse(t):Aa(t)}function B(t){if("undefined"!=typeof JSON&&n(JSON.stringify))t=JSON.stringify(t);else{var e=[];Ca(new Ba,t,e),t=e.join("")}return t}function pb(t,e){this.committed=t,this.snapshot=e}function qb(){return"undefined"!=typeof window&&!!(window.cordova||window.phonegap||window.PhoneGap)&&/ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test("undefined"!=typeof navigator&&"string"==typeof navigator.userAgent?navigator.userAgent:"")}function rb(t){this.qe=t,this.zd=[],this.Qb=0,this.Wd=-1,this.Fb=null}function sb(t,e,n){t.Wd=e,t.Fb=n,t.Wd<t.Qb&&(t.Fb(),t.Fb=null)}function tb(t,e,n){for(t.zd[e]=n;t.zd[t.Qb];){var i=t.zd[t.Qb];delete t.zd[t.Qb];for(var r=0;r<i.length;++r)if(i[r]){var o=t;ub(function(){o.qe(i[r])})}if(t.Qb===t.Wd){t.Fb&&(clearTimeout(t.Fb),t.Fb(),t.Fb=null);break}t.Qb++}}function vb(){this.oc={}}function wb(t){this.tc=t,this.Ad="firebase:"}function xb(t){try{if("undefined"!=typeof window&&"undefined"!=typeof window[t]){var e=window[t];return e.setItem("firebase:sentinel","cache"),e.removeItem("firebase:sentinel"),new wb(e)}}catch(t){}return new vb}function Ab(t,e,n){this.type=Bb,this.source=t,this.path=e,this.Ga=n}function Cb(t,e){this.type=Db,this.source=t,this.path=e}function Eb(t){this.Ee=t}function Fb(t,e){t.Ee.INTERNAL.addAuthTokenListener(e)}function Gb(){this.Hd=G}function Hb(t,e,n,i,r){this.host=t.toLowerCase(),this.domain=this.host.substr(this.host.indexOf(".")+1),this.Rc=e,this.me=n,this.qg=i,this.gf=r||"",this.$a=yb.get("host:"+t)||this.host}function Ib(t,e){e!==t.$a&&(t.$a=e,"s-"===t.$a.substr(0,2)&&yb.set("host:"+t.host,t.$a))}function Jb(t,e,n){if(H("string"==typeof e,"typeof type must == string"),H("object"==typeof n,"typeof params must == object"),"websocket"===e)e=(t.Rc?"wss://":"ws://")+t.$a+"/.ws?";else{if("long_polling"!==e)throw Error("Unknown connection type: "+e);e=(t.Rc?"https://":"http://")+t.$a+"/.lp?"}t.host!==t.$a&&(n.ns=t.me);var i=[];return r(n,function(t,e){i.push(e+"="+t)}),e+i.join("&")}function Kb(){this.sc={}}function Lb(t,e,i){n(i)||(i=1),cb(t.sc,e)||(t.sc[e]=0),t.sc[e]+=i}function Mb(t){this.Ef=t,this.pd=null}function Nb(){this.vb=[]}function Ob(t,e){for(var n=null,i=0;i<e.length;i++){var r=e[i],o=r.Yb();null===n||o.Z(n.Yb())||(t.vb.push(n),n=null),null===n&&(n=new Pb(o)),n.add(r)}n&&t.vb.push(n)}function Qb(t,e,n){Ob(t,n),Rb(t,function(t){return t.Z(e)})}function Sb(t,e,n){Ob(t,n),Rb(t,function(t){return t.contains(e)||e.contains(t)})}function Rb(t,e){for(var n=!0,i=0;i<t.vb.length;i++){var r=t.vb[i];if(r)if(r=r.Yb(),e(r)){for(var r=t.vb[i],o=0;o<r.gd.length;o++){var a=r.gd[o];if(null!==a){r.gd[o]=null;var s=a.Tb();Tb&&E("event: "+a.toString()),ub(s)}}t.vb[i]=null}else n=!1}n&&(t.vb=[])}function Pb(t){this.qa=t,this.gd=[]}function Ub(t,e,n,i){this.Zd=e,this.Kd=n,this.Bd=i,this.fd=t}function Vb(t,e,n){this.Zd=t,this.error=e,this.path=n}function Wb(){}function Yb(t,e,n){this.xf=t,this.Ka=e,this.wd=n}function I(t,e,n,i){this.type=t,this.Ja=e,this.Xa=n,this.ne=i,this.Bd=void 0}function bc(t){return new I(cc,t)}function $b(t,e,n){this.A=t,this.da=e,this.Sb=n}function dc(t){return t.da}function ec(t){return t.Sb}function fc(t,e){return e.e()?t.da&&!t.Sb:Zb(t,J(e))}function Zb(t,e){return t.da&&!t.Sb||t.A.Da(e)}function gc(t,e){return hc(t.name,e.name)}function ic(t,e){return hc(t,e)}function K(t,e){this.name=t,this.R=e}function jc(t,e){return new K(t,e)}function kc(t,e){return t&&"object"==typeof t?(H(".sv"in t,"Unexpected leaf node or priority contents"),e[t[".sv"]]):t}function lc(t,e){var n=new mc;return nc(t,new L(""),function(t,i){oc(n,t,pc(i,e))}),n}function pc(t,e){var n,i=t.C().H(),i=kc(i,e);if(t.J()){var r=kc(t.Ca(),e);return r!==t.Ca()||i!==t.C().H()?new qc(r,M(i)):t}return n=t,i!==t.C().H()&&(n=n.fa(new qc(i))),t.O(N,function(t,i){var r=pc(i,e);r!==i&&(n=n.T(t,r))}),n}function tc(t){try{var e;bb();for(var n=$a,i=[],r=0;r<t.length;){var o=n[t.charAt(r++)],a=r<t.length?n[t.charAt(r)]:0;++r;var s=r<t.length?n[t.charAt(r)]:64;++r;var u=r<t.length?n[t.charAt(r)]:64;if(++r,null==o||null==a||null==s||null==u)throw Error();i.push(o<<2|a>>4),64!=s&&(i.push(a<<4&240|s>>2),64!=u&&i.push(s<<6&192|u))}if(8192>i.length)e=String.fromCharCode.apply(null,i);else{for(t="",n=0;n<i.length;n+=8192)t+=String.fromCharCode.apply(null,Ra(i,n,n+8192));e=t}return e}catch(t){E("base64Decode failed: ",t)}return null}function uc(t){var e=mb(t);t=new na,t.update(e);var e=[],n=8*t.Nd;56>t.$b?t.update(t.xd,56-t.$b):t.update(t.xd,t.Wa-(t.$b-56));for(var i=t.Wa-1;56<=i;i--)t.Ud[i]=255&n,n/=256;for(oa(t,t.Ud),i=n=0;5>i;i++)for(var r=24;0<=r;r-=8)e[n]=t.M[i]>>r&255,++n;return ab(e)}function vc(t){for(var e="",n=0;n<arguments.length;n++)e=fa(arguments[n])?e+vc.apply(null,arguments[n]):"object"==typeof arguments[n]?e+B(arguments[n]):e+arguments[n],e+=" ";return e}function xc(t,e){kb(!e||!0===t||!1===t,"Can't turn on custom loggers persistently."),!0===t?("undefined"!=typeof console&&("function"==typeof console.log?Tb=q(console.log,console):"object"==typeof console.log&&(Tb=function(t){console.log(t)})),e&&zb.set("logging_enabled",!0)):ha(t)?Tb=t:(Tb=null,zb.remove("logging_enabled"))}function E(t){if(!0===wc&&(wc=!1,null===Tb&&!0===zb.get("logging_enabled")&&xc(!0)),Tb){var e=vc.apply(null,arguments);Tb(e)}}function yc(t){return function(){E(t,arguments)}}function zc(t){if("undefined"!=typeof console){var e="FIREBASE INTERNAL ERROR: "+vc.apply(null,arguments);"undefined"!=typeof console.error?console.error(e):console.log(e)}}function Ac(t){var e=vc.apply(null,arguments);throw Error("FIREBASE FATAL ERROR: "+e)}function O(t){if("undefined"!=typeof console){var e="FIREBASE WARNING: "+vc.apply(null,arguments);"undefined"!=typeof console.warn?console.warn(e):console.log(e)}}function Bc(t){var e,n,i,r,o,a=t;if(o=n=t=e="",i=!0,r="https",p(a)){var s=a.indexOf("//");for(0<=s&&(r=a.substring(0,s-1),a=a.substring(s+2)),s=a.indexOf("/"),-1===s&&(s=a.length),e=a.substring(0,s),o="",a=a.substring(s).split("/"),s=0;s<a.length;s++)if(0<a[s].length){var u=a[s];try{u=decodeURIComponent(u.replace(/\+/g," "))}catch(t){}o+="/"+u}a=e.split("."),3===a.length?(t=a[1],n=a[0].toLowerCase()):2===a.length&&(t=a[0]),s=e.indexOf(":"),0<=s&&(i="https"===r||"wss"===r)}return"firebase"===t&&Ac(e+" is no longer supported. Please use <YOUR FIREBASE>.firebaseio.com instead"),n&&"undefined"!=n||Ac("Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com"),i||"undefined"!=typeof window&&window.location&&window.location.protocol&&-1!==window.location.protocol.indexOf("https:")&&O("Insecure Firebase access from a secure page. Please use https in calls to new Firebase()."),{jc:new Hb(e,i,n,"ws"===r||"wss"===r),path:new L(o)}}function Cc(t){return ga(t)&&(t!=t||t==Number.POSITIVE_INFINITY||t==Number.NEGATIVE_INFINITY)}function Dc(t){if("complete"===document.readyState)t();else{var e=!1,n=function(){document.body?e||(e=!0,t()):setTimeout(n,Math.floor(10))};document.addEventListener?(document.addEventListener("DOMContentLoaded",n,!1),window.addEventListener("load",n,!1)):document.attachEvent&&(document.attachEvent("onreadystatechange",function(){"complete"===document.readyState&&n()}),window.attachEvent("onload",n))}}function hc(t,e){if(t===e)return 0;if("[MIN_NAME]"===t||"[MAX_NAME]"===e)return-1;if("[MIN_NAME]"===e||"[MAX_NAME]"===t)return 1;var n=Ec(t),i=Ec(e);return null!==n?null!==i?0==n-i?t.length-e.length:n-i:-1:null!==i?1:t<e?-1:1}function Fc(t,e){if(e&&t in e)return e[t];throw Error("Missing required key ("+t+") in object: "+B(e))}function Gc(t){if("object"!=typeof t||null===t)return B(t);var e,n=[];for(e in t)n.push(e);n.sort(),e="{";for(var i=0;i<n.length;i++)0!==i&&(e+=","),e+=B(n[i]),e+=":",e+=Gc(t[n[i]]);return e+"}"}function Hc(t,e){if(t.length<=e)return[t];for(var n=[],i=0;i<t.length;i+=e)i+e>t?n.push(t.substring(i,t.length)):n.push(t.substring(i,i+e));return n}function Ic(t,e){if(ea(t))for(var n=0;n<t.length;++n)e(n,t[n]);else r(t,e)}function Jc(t){H(!Cc(t),"Invalid JSON number");var e,n,i,r;for(0===t?(i=n=0,e=-(1/0)===1/t?1:0):(e=0>t,t=Math.abs(t),t>=Math.pow(2,-1022)?(i=Math.min(Math.floor(Math.log(t)/Math.LN2),1023),n=i+1023,i=Math.round(t*Math.pow(2,52-i)-Math.pow(2,52))):(n=0,i=Math.round(t/Math.pow(2,-1074)))),r=[],t=52;t;--t)r.push(i%2?1:0),i=Math.floor(i/2);for(t=11;t;--t)r.push(n%2?1:0),n=Math.floor(n/2);for(r.push(e?1:0),r.reverse(),e=r.join(""),n="",t=0;64>t;t+=8)i=parseInt(e.substr(t,8),2).toString(16),1===i.length&&(i="0"+i),n+=i;return n.toLowerCase()}function Ec(t){return Kc.test(t)&&(t=Number(t),-2147483648<=t&&2147483647>=t)?t:null}function ub(t){try{t()}catch(t){setTimeout(function(){throw O("Exception was thrown by user callback.",t.stack||""),t},Math.floor(0))}}function Lc(t,e,n){Object.defineProperty(t,e,{get:n})}function Mc(t,e){var n=setTimeout(t,e);return"object"==typeof n&&n.unref&&n.unref(),n}function Nc(t){var e={},n={},i={},r="";try{var o=t.split("."),e=ob(tc(o[0])||""),n=ob(tc(o[1])||""),r=o[2],i=n.d||{};delete n.d}catch(t){}return{tg:e,Ie:n,data:i,mg:r}}function Oc(t){t=Nc(t);var e=t.Ie;return!!t.mg&&!!e&&"object"==typeof e&&e.hasOwnProperty("iat")}function Pc(t){return t=Nc(t).Ie,"object"==typeof t&&!0===w(t,"admin")}function Qc(t,e,n){this.f=yc("p:rest:"),this.L=t,this.Gb=e,this.Td=n,this.$={}}function Rc(t,e){return n(e)?"tag$"+e:(H(Sc(t.m),"should have a tag if it's not a default query."),t.path.toString())}function Uc(t,e,n,i){n=n||{},n.format="export",t.Td.getToken(!1).then(function(r){(r=r&&r.accessToken)&&(n.auth=r);var o=(t.L.Rc?"https://":"http://")+t.L.host+e+"?"+fb(n);t.f("Sending REST request for "+o);var a=new XMLHttpRequest;a.onreadystatechange=function(){if(i&&4===a.readyState){t.f("REST Response for "+o+" received. status:",a.status,"response:",a.responseText);var e=null;if(200<=a.status&&300>a.status){try{e=ob(a.responseText)}catch(t){O("Failed to parse JSON response for "+o+": "+a.responseText)}i(null,e)}else 401!==a.status&&404!==a.status&&O("Got unsuccessful REST response for "+o+" Status: "+a.status),i(a.status);i=null}},a.open("GET",o,!0),a.send()})}function Vc(t,e,n){this.type=Wc,this.source=t,this.path=e,this.children=n}function Xc(t,e){this.rf={},this.Uc=new Mb(t),this.va=e;var n=1e4+2e4*Math.random();Mc(q(this.lf,this),Math.floor(n))}function $c(t){return t=t.toString(),Yc[t]||(Yc[t]=new Kb),Yc[t]}function ad(t,e){var n=t.toString();return Zc[n]||(Zc[n]=e()),Zc[n]}function cd(t,e,n,i){this.Xd=t,this.f=yc(this.Xd),this.frames=this.yc=null,this.pb=this.qb=this.Ce=0,this.Va=$c(e),t={v:"5"},"undefined"!=typeof location&&location.href&&-1!==location.href.indexOf("firebaseio.com")&&(t.r="f"),n&&(t.s=n),i&&(t.ls=i),this.Je=Jb(e,"websocket",t)}function fd(t,e){if(t.frames.push(e),t.frames.length==t.Ce){var n=t.frames.join("");t.frames=null,n=ob(n),t.Xf(n)}}function ed(t){clearInterval(t.yc),t.yc=setInterval(function(){t.Ia&&gd(t,"0"),ed(t)},Math.floor(45e3))}function gd(t,e){try{t.Ia.send(e)}catch(e){t.f("Exception thrown from WebSocket.send():",e.message||e.data,"Closing connection."),setTimeout(q(t.bb,t),0)}}function hd(){this.fb={}}function jd(t,e){var n=e.type,i=e.Xa;H("child_added"==n||"child_changed"==n||"child_removed"==n,"Only child changes supported for tracking"),H(".priority"!==i,"Only non-priority child changes can be tracked.");var r=w(t.fb,i);if(r){var o=r.type;if("child_added"==n&&"child_removed"==o)t.fb[i]=new I("child_changed",e.Ja,i,r.Ja);else if("child_removed"==n&&"child_added"==o)delete t.fb[i];else if("child_removed"==n&&"child_changed"==o)t.fb[i]=new I("child_removed",r.ne,i);else if("child_changed"==n&&"child_added"==o)t.fb[i]=new I("child_added",e.Ja,i);else{if("child_changed"!=n||"child_changed"!=o)throw sc("Illegal combination of changes: "+e+" occurred after "+r);t.fb[i]=new I("child_changed",e.Ja,i,r.ne)}}else t.fb[i]=e}function kd(t){this.V=t,this.g=t.m.g}function ld(t,e,n,i){var r=[],o=[];return Ja(e,function(e){"child_changed"===e.type&&t.g.ld(e.ne,e.Ja)&&o.push(new I("child_moved",e.Ja,e.Xa))}),md(t,r,"child_removed",e,i,n),md(t,r,"child_added",e,i,n),md(t,r,"child_moved",o,i,n),md(t,r,"child_changed",e,i,n),md(t,r,cc,e,i,n),r}function md(t,e,n,i,r,o){i=Ka(i,function(t){return t.type===n}),Sa(i,q(t.Ff,t)),Ja(i,function(n){var i=nd(t,n,o);Ja(r,function(r){r.nf(n.type)&&e.push(r.createEvent(i,t.V))})})}function nd(t,e,n){return"value"!==e.type&&"child_removed"!==e.type&&(e.Bd=n.Ve(e.Xa,e.Ja,t.g)),e}function od(t,e){this.Qd=t,this.Df=e}function pd(t){this.U=t}function xd(t,e,n,i,r,o){var a=e.N;if(null!=i.lc(n))return e;var s;if(n.e())H(dc(e.w()),"If change path is empty, we must have complete server data"),ec(e.w())?(r=ac(e),i=i.qc(r instanceof P?r:G)):i=i.Aa(ac(e)),o=t.U.ya(e.N.j(),i,o);else{var u=J(n);if(".priority"==u)H(1==Ad(n),"Can't have a priority with additional path components"),o=a.j(),s=e.w().j(),i=i.Zc(n,o,s),o=null!=i?t.U.fa(o,i):a.j();else{var c=D(n);Zb(a,u)?(s=e.w().j(),i=i.Zc(n,a.j(),s),i=null!=i?a.j().Q(u).F(c,i):a.j().Q(u)):i=i.pc(u,e.w()),o=null!=i?t.U.F(a.j(),u,i,c,r,o):a.j()}}return vd(e,o,a.da||n.e(),t.U.Na())}function rd(t,e,n,i,r,o,a,s){var u=e.w();if(a=a?t.U:t.U.Ub(),n.e())i=a.ya(u.j(),i,null);else if(a.Na()&&!u.Sb)i=u.j().F(n,i),i=a.ya(u.j(),i,null);else{var c=J(n);if(!fc(u,n)&&1<Ad(n))return e;var h=D(n);i=u.j().Q(c).F(h,i),i=".priority"==c?a.fa(u.j(),i):a.F(u.j(),c,i,h,Xb,null)}return u=u.da||n.e(),e=new yd(e.N,new $b(i,u,a.Na())),xd(t,e,n,r,new Yb(r,e,o),s)}function qd(t,e,n,i,r,o,a){var s=e.N;if(r=new Yb(r,e,o),n.e())a=t.U.ya(e.N.j(),i,a),t=vd(e,a,!0,t.U.Na());else if(o=J(n),".priority"===o)a=t.U.fa(e.N.j(),i),t=vd(e,a,s.da,s.Sb);else{n=D(n);var u=s.j().Q(o);if(!n.e()){var c=r.Te(o);i=null!=c?".priority"===Bd(n)&&c.P(n.parent()).e()?c:c.F(n,i):G}u.Z(i)?t=e:(a=t.U.F(s.j(),o,i,n,r,a),t=vd(e,a,s.da,t.U.Na()))}return t}function sd(t,e,n,i,r,o,a){var s=e;return Cd(i,function(i,u){var c=n.n(i);Zb(e.N,J(c))&&(s=qd(t,s,c,u,r,o,a))}),Cd(i,function(i,u){var c=n.n(i);Zb(e.N,J(c))||(s=qd(t,s,c,u,r,o,a))}),s}function Dd(t,e){return Cd(e,function(e,n){t=t.F(e,n)}),t}function td(t,e,n,i,r,o,a,s){if(e.w().j().e()&&!dc(e.w()))return e;var u=e;n=n.e()?i:Ed(Q,n,i);var c=e.w().j();return n.children.ha(function(n,i){if(c.Da(n)){var h=e.w().j().Q(n),h=Dd(h,i);u=rd(t,u,new L(n),h,r,o,a,s)}}),n.children.ha(function(n,i){var h=!Zb(e.w(),n)&&null==i.value;c.Da(n)||h||(h=e.w().j().Q(n),h=Dd(h,i),u=rd(t,u,new L(n),h,r,o,a,s))}),u}function wd(t,e,n,i,r,o,a){if(null!=r.lc(n))return e;var s=ec(e.w()),u=e.w();if(null!=i.value){if(n.e()&&u.da||fc(u,n))return rd(t,e,n,u.j().P(n),r,o,s,a);if(n.e()){var c=Q;return u.j().O(Fd,function(t,e){c=c.set(new L(t),e)}),td(t,e,n,c,r,o,s,a)}return e}return c=Q,Cd(i,function(t){var e=n.n(t);fc(u,e)&&(c=c.set(t,u.j().P(e)))}),td(t,e,n,c,r,o,s,a)}function Gd(t){this.g=t}function Hd(t){this.ee=new Gd(t.g),this.g=t.g;var e;t.ka?(e=Id(t),e=t.g.Dc(Jd(t),e)):e=t.g.Gc(),this.Tc=e,t.na?(e=Kd(t),t=t.g.Dc(Ld(t),e)):t=t.g.Ec(),this.uc=t}function Md(t){this.sa=new Hd(t),this.g=t.g,H(t.xa,"Only valid if limit has been set"),this.oa=t.oa,this.Ib=!Nd(t)}function Od(t,e,n,i,r,o){var a;if(t.Ib){var s=Pd(t.g);a=function(t,e){return s(e,t)}}else a=Pd(t.g);H(e.Eb()==t.oa,"");var u=new K(n,i),c=t.Ib?Qd(e,t.g):Rd(e,t.g),h=t.sa.matches(u);if(e.Da(n)){for(var f=e.Q(n),c=r.ce(t.g,c,t.Ib);null!=c&&(c.name==n||e.Da(c.name));)c=r.ce(t.g,c,t.Ib);return r=null==c?1:a(c,u),h&&!i.e()&&0<=r?(null!=o&&jd(o,new I("child_changed",i,n,f)),e.T(n,i)):(null!=o&&jd(o,new I("child_removed",f,n)),e=e.T(n,G),null!=c&&t.sa.matches(c)?(null!=o&&jd(o,new I("child_added",c.R,c.name)),e.T(c.name,c.R)):e)}return i.e()?e:h&&0<=a(c,u)?(null!=o&&(jd(o,new I("child_removed",c.R,c.name)),jd(o,new I("child_added",i,n))),e.T(n,i).T(c.name,G)):e}function qc(t,e){this.B=t,H(n(this.B)&&null!==this.B,"LeafNode shouldn't be created with null/undefined value."),this.aa=e||G,Sd(this.aa),this.Db=null}function Vd(){}function Pd(t){return q(t.compare,t)}function Yd(t){H(!t.e()&&".priority"!==J(t),"Can't create PathIndex with empty path or .priority key"),this.bc=t}function $d(){}function ae(){}function be(){}function ee(){this.Rb=this.na=this.Kb=this.ka=this.xa=!1,this.oa=0,this.mb="",this.dc=null,this.zb="",this.ac=null,this.xb="",this.g=N}function Nd(t){return""===t.mb?t.ka:"l"===t.mb}function Jd(t){return H(t.ka,"Only valid if start has been set"),t.dc}function Id(t){return H(t.ka,"Only valid if start has been set"),t.Kb?t.zb:"[MIN_NAME]"}function Ld(t){return H(t.na,"Only valid if end has been set"),t.ac}function Kd(t){return H(t.na,"Only valid if end has been set"),t.Rb?t.xb:"[MAX_NAME]"}function ge(t){var e=new ee;return e.xa=t.xa,e.oa=t.oa,e.ka=t.ka,e.dc=t.dc,e.Kb=t.Kb,e.zb=t.zb,e.na=t.na,e.ac=t.ac,e.Rb=t.Rb,e.xb=t.xb,e.g=t.g,e.mb=t.mb,e}function he(t,e){var n=ge(t);return n.g=e,n}function ie(t){var e={};if(t.ka&&(e.sp=t.dc,t.Kb&&(e.sn=t.zb)),t.na&&(e.ep=t.ac,t.Rb&&(e.en=t.xb)),t.xa){e.l=t.oa;var n=t.mb;""===n&&(n=Nd(t)?"l":"r"),e.vf=n}return t.g!==N&&(e.i=t.g.toString()),e}function S(t){return!(t.ka||t.na||t.xa)}function Sc(t){return S(t)&&t.g==N}function Tc(t){var e={};if(Sc(t))return e;var n;return t.g===N?n="$priority":t.g===de?n="$value":t.g===Fd?n="$key":(H(t.g instanceof Yd,"Unrecognized index type!"),n=t.g.toString()),e.orderBy=B(n),t.ka&&(e.startAt=B(t.dc),t.Kb&&(e.startAt+=","+B(t.zb))),t.na&&(e.endAt=B(t.ac),t.Rb&&(e.endAt+=","+B(t.xb))),t.xa&&(Nd(t)?e.limitToFirst=t.oa:e.limitToLast=t.oa),e}function je(t,e){this.md=t,this.cc=e}function ke(t,e,n){var i=pa(t.md,function(i,r){var o=w(t.cc,r);if(H(o,"Missing index implementation for "+r),i===Wd){if(o.wc(e.R)){for(var a=[],s=n.Wb(jc),u=R(s);u;)u.name!=e.name&&a.push(u),u=R(s);return a.push(e),le(a,Pd(o))}return Wd}return o=n.get(e.name),a=i,o&&(a=a.remove(new K(e.name,o))),a.Oa(e,e.R)});return new je(i,t.cc)}function me(t,e,n){var i=pa(t.md,function(t){if(t===Wd)return t;var i=n.get(e.name);return i?t.remove(new K(e.name,i)):t});return new je(i,t.cc)}function oe(){this.set={}}function pe(t,e){r(t.set,function(t,n){e(n,t)})}function qe(t,e,n,i){this.Xd=t,this.f=yc(t),this.jc=e,this.pb=this.qb=0,this.Va=$c(e),this.tf=n,this.vc=!1,this.Cb=i,this.Xc=function(t){return Jb(e,"long_polling",t)}}function ue(t,e){var n=B(e).length;t.pb+=n,Lb(t.Va,"bytes_received",n)}function te(t,e,n,i){if(this.Xc=i,this.ib=n,this.se=new oe,this.Pc=[],this.Yd=Math.floor(1e8*Math.random()),this.Id=!0,this.Od=rc(),window["pLPCommand"+this.Od]=t,window["pRTLPCB"+this.Od]=e,t=document.createElement("iframe"),t.style.display="none",!document.body)throw"Document body has not initialized. Wait to initialize Firebase until after the document is ready.";document.body.appendChild(t);try{t.contentWindow.document||E("No IE domain setting required")}catch(e){t.src="javascript:void((function(){document.open();document.domain='"+document.domain+"';document.close();})())"}t.contentDocument?t.gb=t.contentDocument:t.contentWindow?t.gb=t.contentWindow.document:t.document&&(t.gb=t.document),this.Ea=t,t="",this.Ea.src&&"javascript:"===this.Ea.src.substr(0,11)&&(t='<script>document.domain="'+document.domain+'";</script>'),t="<html><body>"+t+"</body></html>";try{this.Ea.gb.open(),this.Ea.gb.write(t),this.Ea.gb.close()}catch(t){E("frame writing exception"),t.stack&&E(t.stack),E(t)}}function we(t){if(t.Sd&&t.Id&&t.se.count()<(0<t.Pc.length?2:1)){t.Yd++;var e={};e.id=t.Vf,e.pw=t.Wf,e.ser=t.Yd;for(var e=t.Xc(e),n="",i=0;0<t.Pc.length&&1870>=t.Pc[0].Oe.length+30+n.length;){var r=t.Pc.shift(),n=n+"&seg"+i+"="+r.jg+"&ts"+i+"="+r.pg+"&d"+i+"="+r.Oe;i++}return xe(t,e+n,t.Yd),!0}return!1}function xe(t,e,n){function i(){t.se.remove(n),we(t)}t.se.add(n,1);var r=setTimeout(i,Math.floor(25e3));ve(t,e,function(){clearTimeout(r),i()})}function ve(t,e,n){setTimeout(function(){try{if(t.Id){var i=t.Ea.gb.createElement("script");i.type="text/javascript",i.async=!0,i.src=e,i.onload=i.onreadystatechange=function(){var t=i.readyState;t&&"loaded"!==t&&"complete"!==t||(i.onload=i.onreadystatechange=null,i.parentNode&&i.parentNode.removeChild(i),n())},i.onerror=function(){E("Long-poll script failed to load: "+e),t.Id=!1,t.close()},t.Ea.gb.body.appendChild(i)}}catch(t){}},Math.floor(1))}function ye(t){ze(this,t)}function ze(t,e){var n=cd&&cd.isAvailable(),i=n&&!(yb.Ze||!0===yb.get("previous_websocket_failure"));if(e.qg&&(n||O("wss:// URL used, but browser isn't known to support websockets.  Trying anyway."),i=!0),i)t.Vc=[cd];else{var r=t.Vc=[];Ic(Ae,function(t,e){e&&e.isAvailable()&&r.push(e)})}}function Be(t){if(0<t.Vc.length)return t.Vc[0];throw Error("No transports available")}function Ce(t,e,n,i,r,o,a){this.id=t,this.f=yc("c:"+this.id+":"),this.qe=n,this.Kc=i,this.ia=r,this.pe=o,this.L=e,this.yd=[],this.Ke=0,this.sf=new ye(e),this.Ua=0,this.Cb=a,this.f("Connection created"),De(this)}function De(t){var e=Be(t.sf);t.I=new e("c:"+t.id+":"+t.Ke++,t.L,void 0,t.Cb),t.ue=e.responsesRequiredToBeHealthy||0;var n=Ee(t,t.I),i=Fe(t,t.I);t.Wc=t.I,t.Qc=t.I,t.D=null,t.Bb=!1,setTimeout(function(){t.I&&t.I.open(n,i)},Math.floor(0)),e=e.healthyTimeout||0,0<e&&(t.kd=Mc(function(){t.kd=null,t.Bb||(t.I&&102400<t.I.pb?(t.f("Connection exceeded healthy timeout but has received "+t.I.pb+" bytes.  Marking connection healthy."),t.Bb=!0,t.I.qd()):t.I&&10240<t.I.qb?t.f("Connection exceeded healthy timeout but has sent "+t.I.qb+" bytes.  Leaving connection alive."):(t.f("Closing unhealthy connection after timeout."),t.close()))},Math.floor(e)))}function Fe(t,e){return function(n){e===t.I?(t.I=null,n||0!==t.Ua?1===t.Ua&&t.f("Realtime connection lost."):(t.f("Realtime connection failed."),"s-"===t.L.$a.substr(0,2)&&(yb.remove("host:"+t.L.host),t.L.$a=t.L.host)),t.close()):e===t.D?(t.f("Secondary connection lost."),n=t.D,t.D=null,t.Wc!==n&&t.Qc!==n||t.close()):t.f("closing an old connection")}}function Ee(t,e){return function(n){if(2!=t.Ua)if(e===t.Qc){var i=Fc("t",n);if(n=Fc("d",n),"c"==i){if(i=Fc("t",n),"d"in n)if(n=n.d,"h"===i){var i=n.ts,r=n.v,o=n.h;t.qf=n.s,Ib(t.L,o),0==t.Ua&&(t.I.start(),Ge(t,t.I,i),"5"!==r&&O("Protocol version mismatch detected"),n=t.sf,(n=1<n.Vc.length?n.Vc[1]:null)&&He(t,n))}else if("n"===i){for(t.f("recvd end transmission on primary"),t.Qc=t.D,n=0;n<t.yd.length;++n)t.ud(t.yd[n]);t.yd=[],Ie(t)}else"s"===i?(t.f("Connection shutdown command received. Shutting down..."),t.pe&&(t.pe(n),t.pe=null),t.ia=null,t.close()):"r"===i?(t.f("Reset packet received.  New host: "+n),Ib(t.L,n),1===t.Ua?t.close():(Je(t),De(t))):"e"===i?zc("Server Error: "+n):"o"===i?(t.f("got pong on primary."),Ke(t),Le(t)):zc("Unknown control packet command: "+i)}else"d"==i&&t.ud(n)}else if(e===t.D)if(i=Fc("t",n),n=Fc("d",n),"c"==i)"t"in n&&(n=n.t,"a"===n?Me(t):"r"===n?(t.f("Got a reset on secondary, closing it"),t.D.close(),t.Wc!==t.D&&t.Qc!==t.D||t.close()):"o"===n&&(t.f("got pong on secondary."),t.pf--,Me(t)));else{if("d"!=i)throw Error("Unknown protocol layer: "+i);t.yd.push(n)}else t.f("message on old connection")}}function Ie(t){t.Wc===t.D&&t.Qc===t.D&&(t.f("cleaning up and promoting a connection: "+t.D.Xd),t.I=t.D,t.D=null)}function Me(t){0>=t.pf?(t.f("Secondary connection is healthy."),t.Bb=!0,t.D.qd(),t.D.start(),t.f("sending client ack on secondary"),t.D.send({t:"c",d:{t:"a",d:{}}}),t.f("Ending transmission on primary"),t.I.send({t:"c",d:{t:"n",d:{}}}),t.Wc=t.D,Ie(t)):(t.f("sending ping on secondary."),t.D.send({t:"c",d:{t:"p",d:{}}}))}function Ke(t){t.Bb||(t.ue--,0>=t.ue&&(t.f("Primary connection is healthy."),t.Bb=!0,t.I.qd()))}function He(t,e){t.D=new e("c:"+t.id+":"+t.Ke++,t.L,t.qf),t.pf=e.responsesRequiredToBeHealthy||0,t.D.open(Ee(t,t.D),Fe(t,t.D)),Mc(function(){t.D&&(t.f("Timed out trying to upgrade."),t.D.close())},Math.floor(6e4))}function Ge(t,e,n){t.f("Realtime connection established."),t.I=e,t.Ua=1,t.Kc&&(t.Kc(n,t.qf),t.Kc=null),0===t.ue?(t.f("Primary connection is healthy."),t.Bb=!0):Mc(function(){Le(t)},Math.floor(5e3))}function Le(t){t.Bb||1!==t.Ua||(t.f("sending ping on primary."),Ne(t,{t:"c",d:{t:"p",d:{}}}))}function Ne(t,e){if(1!==t.Ua)throw"Connection is not connected";t.Wc.send(e)}function Je(t){t.f("Shutting down all connections"),t.I&&(t.I.close(),t.I=null),t.D&&(t.D.close(),t.D=null),t.kd&&(clearTimeout(t.kd),t.kd=null)}function L(t,e){if(1==arguments.length){this.o=t.split("/");for(var n=0,i=0;i<this.o.length;i++)0<this.o[i].length&&(this.o[n]=this.o[i],n++);this.o.length=n,this.Y=0}else this.o=t,this.Y=e}function T(t,e){var n=J(t);if(null===n)return e;if(n===J(e))return T(D(t),D(e));
throw Error("INTERNAL ERROR: innerPath ("+e+") is not within outerPath ("+t+")")}function Oe(t,e){for(var n=t.slice(),i=e.slice(),r=0;r<n.length&&r<i.length;r++){var o=hc(n[r],i[r]);if(0!==o)return o}return n.length===i.length?0:n.length<i.length?-1:1}function J(t){return t.Y>=t.o.length?null:t.o[t.Y]}function Ad(t){return t.o.length-t.Y}function D(t){var e=t.Y;return e<t.o.length&&e++,new L(t.o,e)}function Bd(t){return t.Y<t.o.length?t.o[t.o.length-1]:null}function Pe(t,e){this.Qa=t.slice(),this.Ha=Math.max(1,this.Qa.length),this.Pe=e;for(var n=0;n<this.Qa.length;n++)this.Ha+=nb(this.Qa[n]);Qe(this)}function Qe(t){if(768<t.Ha)throw Error(t.Pe+"has a key path longer than 768 bytes ("+t.Ha+").");if(32<t.Qa.length)throw Error(t.Pe+"path specified exceeds the maximum depth that can be written (32) or object contains a cycle "+Re(t))}function Re(t){return 0==t.Qa.length?"":"in property '"+t.Qa.join(".")+"'"}function Se(t){t instanceof Te||Ac("Don't call new Database() directly - please use firebase.database()."),this.ta=t,this.ba=new U(t,C),this.INTERNAL=new Ue(this)}function We(t,e){null===t.ta&&Ac("Cannot call "+e+" on a deleted database.")}function Ue(t){this.Ya=t}function mc(){this.k=this.B=null}function oc(t,e,n){if(e.e())t.B=n,t.k=null;else if(null!==t.B)t.B=t.B.F(e,n);else{null==t.k&&(t.k=new oe);var i=J(e);t.k.contains(i)||t.k.add(i,new mc),t=t.k.get(i),e=D(e),oc(t,e,n)}}function Ze(t,e){if(e.e())return t.B=null,t.k=null,!0;if(null!==t.B){if(t.B.J())return!1;var n=t.B;return t.B=null,n.O(N,function(e,n){oc(t,new L(e),n)}),Ze(t,e)}return null===t.k||(n=J(e),e=D(e),t.k.contains(n)&&Ze(t.k.get(n),e)&&t.k.remove(n),!!t.k.e()&&(t.k=null,!0))}function nc(t,e,n){null!==t.B?n(e,t.B):t.O(function(t,i){var r=new L(e.toString()+"/"+t);nc(i,r,n)})}function bf(t){return p(t)&&0!==t.length&&!$e.test(t)}function cf(t){return null===t||p(t)||ga(t)&&!Cc(t)||ia(t)&&cb(t,".sv")}function df(t,e,i,r){r&&!n(e)||ef(y(t,1,r),e,i)}function ef(t,e,i){if(i instanceof L&&(i=new Pe(i,t)),!n(e))throw Error(t+"contains undefined "+Re(i));if(ha(e))throw Error(t+"contains a function "+Re(i)+" with contents: "+e.toString());if(Cc(e))throw Error(t+"contains "+e.toString()+" "+Re(i));if(p(e)&&e.length>10485760/3&&10485760<nb(e))throw Error(t+"contains a string greater than 10485760 utf8 bytes "+Re(i)+" ('"+e.substring(0,50)+"...')");if(ia(e)){var r=!1,o=!1;if(db(e,function(e,n){if(".value"===e)r=!0;else if(".priority"!==e&&".sv"!==e&&(o=!0,!bf(e)))throw Error(t+" contains an invalid key ("+e+") "+Re(i)+'.  Keys must be non-empty strings and can\'t contain ".", "#", "$", "/", "[", or "]"');i.push(e),ef(t,n,i),i.pop()}),r&&o)throw Error(t+' contains ".value" child '+Re(i)+" in addition to actual children.")}}function ff(t,e){var n,i;for(n=0;n<e.length;n++){i=e[n];for(var r=i.slice(),o=0;o<r.length;o++)if((".priority"!==r[o]||o!==r.length-1)&&!bf(r[o]))throw Error(t+"contains an invalid key ("+r[o]+") in path "+i.toString()+'. Keys must be non-empty strings and can\'t contain ".", "#", "$", "/", "[", or "]"')}for(e.sort(Oe),r=null,n=0;n<e.length;n++){if(i=e[n],null!==r&&r.contains(i))throw Error(t+"contains a path "+r.toString()+" that is ancestor of another path "+i.toString());r=i}}function gf(t,e,n){var i=y(t,1,!1);if(!ia(e)||ea(e))throw Error(i+" must be an object containing the children to replace.");var r=[];db(e,function(t,e){var o=new L(t);if(ef(i,e,n.n(o)),".priority"===Bd(o)&&!cf(e))throw Error(i+"contains an invalid value for '"+o.toString()+"', which must be a valid Firebase priority (a string, finite number, server value, or null).");r.push(o)}),ff(i,r)}function hf(t,e,n){if(Cc(n))throw Error(y(t,e,!1)+"is "+n.toString()+", but must be a valid Firebase priority (a string, finite number, server value, or null).");if(!cf(n))throw Error(y(t,e,!1)+"must be a valid Firebase priority (a string, finite number, server value, or null).")}function jf(t,e,i){if(!i||n(e))switch(e){case"value":case"child_added":case"child_removed":case"child_changed":case"child_moved":break;default:throw Error(y(t,1,i)+'must be a valid event type: "value", "child_added", "child_removed", "child_changed", or "child_moved".')}}function kf(t,e){if(n(e)&&!bf(e))throw Error(y(t,2,!0)+'was an invalid key: "'+e+'".  Firebase keys must be non-empty strings and can\'t contain ".", "#", "$", "/", "[", or "]").')}function lf(t,e){if(!p(e)||0===e.length||af.test(e))throw Error(y(t,1,!1)+'was an invalid path: "'+e+'". Paths must be non-empty strings and can\'t contain ".", "#", "$", "[", or "]"')}function mf(t,e){if(".info"===J(e))throw Error(t+" failed: Can't modify data under /.info/")}function Xe(t,e){var n,i=e.path.toString();if(!(n=!p(e.jc.host)||0===e.jc.host.length||!bf(e.jc.me))&&(n=0!==i.length)&&(i&&(i=i.replace(/^\/*\.info(\/|$)/,"/")),n=!(p(i)&&0!==i.length&&!af.test(i))),n)throw Error(y(t,1,!1)+'must be a valid firebase URL and the path can\'t contain ".", "#", "$", "[", or "]".')}function V(t,e){this.ta=t,this.qa=e}function qf(t){H(ea(t)&&0<t.length,"Requires a non-empty array"),this.Bf=t,this.Cc={}}function rf(t,e){H(Oa(t.Bf,function(t){return t===e}),"Unknown event: "+e)}function sf(){if(qf.call(this,["online"]),this.hc=!0,"undefined"!=typeof window&&"undefined"!=typeof window.addEventListener&&!qb()){var t=this;window.addEventListener("online",function(){t.hc||(t.hc=!0,t.De("online",!0))},!1),window.addEventListener("offline",function(){t.hc&&(t.hc=!1,t.De("online",!1))},!1)}}function tf(){qf.call(this,["visible"]);var t,e;if("undefined"!=typeof document&&"undefined"!=typeof document.addEventListener&&("undefined"!=typeof document.hidden?(e="visibilitychange",t="hidden"):"undefined"!=typeof document.mozHidden?(e="mozvisibilitychange",t="mozHidden"):"undefined"!=typeof document.msHidden?(e="msvisibilitychange",t="msHidden"):"undefined"!=typeof document.webkitHidden&&(e="webkitvisibilitychange",t="webkitHidden")),this.Mb=!0,e){var n=this;document.addEventListener(e,function(){var e=!document[t];e!==n.Mb&&(n.Mb=e,n.De("visible",e))},!1)}}function vf(t,e){this.La=t,this.ba=e?e:wf}function xf(t,e){for(var n,i=t.ba,r=null;!i.e();){if(n=t.La(e,i.key),0===n){if(i.left.e())return r?r.key:null;for(i=i.left;!i.right.e();)i=i.right;return i.key}0>n?i=i.left:0<n&&(r=i,i=i.right)}throw Error("Attempted to find predecessor key for a nonexistent key.  What gives?")}function yf(t,e,n,i,r){for(this.Fd=r||null,this.ie=i,this.Pa=[],r=1;!t.e();)if(r=e?n(t.key,e):1,i&&(r*=-1),0>r)t=this.ie?t.left:t.right;else{if(0===r){this.Pa.push(t);break}this.Pa.push(t),t=this.ie?t.right:t.left}}function R(t){if(0===t.Pa.length)return null;var e,n=t.Pa.pop();if(e=t.Fd?t.Fd(n.key,n.value):{key:n.key,value:n.value},t.ie)for(n=n.left;!n.e();)t.Pa.push(n),n=n.right;else for(n=n.right;!n.e();)t.Pa.push(n),n=n.left;return e}function zf(t){if(0===t.Pa.length)return null;var e;return e=t.Pa,e=e[e.length-1],t.Fd?t.Fd(e.key,e.value):{key:e.key,value:e.value}}function Af(t,e,n,i,r){this.key=t,this.value=e,this.color=null==n||n,this.left=null!=i?i:wf,this.right=null!=r?r:wf}function Bf(t){return t.left.e()?t:Bf(t.left)}function Df(t){return t.left.e()?wf:(t.left.ea()||t.left.left.ea()||(t=Ef(t)),t=t.X(null,null,null,Df(t.left),null),Cf(t))}function Cf(t){return t.right.ea()&&!t.left.ea()&&(t=Hf(t)),t.left.ea()&&t.left.left.ea()&&(t=Ff(t)),t.left.ea()&&t.right.ea()&&(t=Gf(t)),t}function Ef(t){return t=Gf(t),t.right.left.ea()&&(t=t.X(null,null,null,null,Ff(t.right)),t=Hf(t),t=Gf(t)),t}function Hf(t){return t.right.X(null,null,t.color,t.X(null,null,!0,null,t.right.left),null)}function Ff(t){return t.left.X(null,null,t.color,null,t.X(null,null,!0,t.left.right,null))}function Gf(t){return t.X(null,null,!t.color,t.left.X(null,null,!t.left.color,null,null),t.right.X(null,null,!t.right.color,null,null))}function If(){}function P(t,e,n){this.k=t,(this.aa=e)&&Sd(this.aa),t.e()&&H(!this.aa||this.aa.e(),"An empty node cannot have a priority"),this.yb=n,this.Db=null}function Qd(t,e){var n;return n=(n=Kf(t,e))?(n=n.Fc())&&n.name:t.k.Fc(),n?new K(n,t.k.get(n)):null}function Rd(t,e){var n;return n=(n=Kf(t,e))?(n=n.ec())&&n.name:t.k.ec(),n?new K(n,t.k.get(n)):null}function Kf(t,e){return e===Fd?null:t.yb.get(e.toString())}function M(t,e){if(null===t)return G;var n=null;if("object"==typeof t&&".priority"in t?n=t[".priority"]:"undefined"!=typeof e&&(n=e),H(null===n||"string"==typeof n||"number"==typeof n||"object"==typeof n&&".sv"in n,"Invalid priority type found: "+typeof n),"object"==typeof t&&".value"in t&&null!==t[".value"]&&(t=t[".value"]),"object"!=typeof t||".sv"in t)return new qc(t,M(n));if(t instanceof Array){var i=G,o=t;return r(o,function(t,e){if(cb(o,e)&&"."!==e.substring(0,1)){var n=M(t);!n.J()&&n.e()||(i=i.T(e,n))}}),i.fa(M(n))}var a=[],s=!1,u=t;if(db(u,function(t){if("string"!=typeof t||"."!==t.substring(0,1)){var e=M(u[t]);e.e()||(s=s||!e.C().e(),a.push(new K(t,e)))}}),0==a.length)return G;var c=le(a,gc,function(t){return t.name},ic);if(s){var h=le(a,Pd(N));return new P(c,M(n),new je({".priority":h},{".priority":N}))}return new P(c,M(n),ne)}function Mf(t){this.count=parseInt(Math.log(t+1)/Lf,10),this.Ne=this.count-1,this.Cf=t+1&parseInt(Array(this.count+1).join("1"),2)}function Nf(t){var e=!(t.Cf&1<<t.Ne);return t.Ne--,e}function le(t,e,n,i){function r(e,i){var o=i-e;if(0==o)return null;if(1==o){var a=t[e],s=n?n(a):a;return new Af(s,a.R,!1,null,null)}var a=parseInt(o/2,10)+e,o=r(e,a),u=r(a+1,i),a=t[a],s=n?n(a):a;return new Af(s,a.R,!1,o,u)}t.sort(e);var o=function(e){function i(e,i){var u=s-e,c=s;s-=e;var c=r(u+1,c),u=t[u],h=n?n(u):u,c=new Af(h,u.R,i,null,c);o?o.left=c:a=c,o=c}for(var o=null,a=null,s=t.length,u=0;u<e.count;++u){var c=Nf(e),h=Math.pow(2,e.count-(u+1));c?i(h,!1):(i(h,!1),i(h,!0))}return a}(new Mf(t.length));return null!==o?new vf(i||e,o):new vf(i||e)}function Ud(t){return"number"==typeof t?"number:"+Jc(t):"string:"+t}function Sd(t){if(t.J()){var e=t.H();H("string"==typeof e||"number"==typeof e||"object"==typeof e&&cb(e,".sv"),"Priority must be a string or number.")}else H(t===Zd||t.e(),"priority of unexpected type.");H(t===Zd||t.C().e(),"Priority nodes can't have a priority of their own.")}function Of(){P.call(this,new vf(ic),G,ne)}function W(t,e,n){this.A=t,this.V=e,this.g=n}function yd(t,e){this.N=t,this.Jd=e}function vd(t,e,n,i){return new yd(new $b(e,n,i),t.Jd)}function zd(t){return t.N.da?t.N.j():null}function ac(t){return t.Jd.da?t.Jd.j():null}function Pf(t,e){this.V=t;var n=t.m,i=new Gd(n.g),n=S(n)?new Gd(n.g):n.xa?new Md(n):new Hd(n);this.hf=new pd(n);var r=e.w(),o=e.N,a=i.ya(G,r.j(),null),s=n.ya(G,o.j(),null);this.Ka=new yd(new $b(s,o.da,n.Na()),new $b(a,r.da,i.Na())),this.Za=[],this.Jf=new kd(t)}function Qf(t){return t.V}function Sf(t,e){var n=t.Ka.N,i=[];return n.j().J()||n.j().O(N,function(t,e){i.push(new I("child_added",e,t))}),n.da&&i.push(bc(n.j())),Rf(t,i,n.j(),e)}function Rf(t,e,n,i){return ld(t.Jf,e,n,i?[i]:t.Za)}function Tf(t,e,n){this.Pb=t,this.rb=e,this.tb=n||null}function Uf(t,e,n){this.ga=t,this.rb=e,this.tb=n}function X(t,e,n,i){this.u=t,this.path=e,this.m=n,this.Mc=i}function Vf(t){var e=null,n=null;if(t.ka&&(e=Jd(t)),t.na&&(n=Ld(t)),t.g===Fd){if(t.ka){if("[MIN_NAME]"!=Id(t))throw Error("Query: When ordering by key, you may only pass one argument to startAt(), endAt(), or equalTo().");if("string"!=typeof e)throw Error("Query: When ordering by key, the argument passed to startAt(), endAt(),or equalTo() must be a string.")}if(t.na){if("[MAX_NAME]"!=Kd(t))throw Error("Query: When ordering by key, you may only pass one argument to startAt(), endAt(), or equalTo().");if("string"!=typeof n)throw Error("Query: When ordering by key, the argument passed to startAt(), endAt(),or equalTo() must be a string.")}}else if(t.g===N){if(null!=e&&!cf(e)||null!=n&&!cf(n))throw Error("Query: When ordering by priority, the first argument passed to startAt(), endAt(), or equalTo() must be a valid priority value (null, a number, or a string).")}else if(H(t.g instanceof Yd||t.g===de,"unknown index type."),null!=e&&"object"==typeof e||null!=n&&"object"==typeof n)throw Error("Query: First argument passed to startAt(), endAt(), or equalTo() cannot be an object.")}function Wf(t){if(t.ka&&t.na&&t.xa&&(!t.xa||""===t.mb))throw Error("Query: Can't combine startAt(), endAt(), and limit(). Use limitToFirst() or limitToLast() instead.")}function Xf(t,e){if(!0===t.Mc)throw Error(e+": You can't combine multiple orderBy calls.")}function Yf(t,e,n){var i={cancel:null,Ma:null};if(e&&n)i.cancel=e,A(t,3,i.cancel,!0),i.Ma=n,eb(t,4,i.Ma);else if(e)if("object"==typeof e&&null!==e)i.Ma=e;else{if("function"!=typeof e)throw Error(y(t,3,!0)+" must either be a cancel callback or a context object.");i.cancel=e}return i}function $f(t,e){this.value=t,this.children=e||ag}function bg(t){var e=Q;return r(t,function(t,n){e=e.set(new L(n),t)}),e}function cg(t,e,n){if(null!=t.value&&n(t.value))return{path:C,value:t.value};if(e.e())return null;var i=J(e);return t=t.children.get(i),null!==t?(e=cg(t,D(e),n),null!=e?{path:new L(i).n(e.path),value:e.value}:null):null}function dg(t,e){return cg(t,e,function(){return!0})}function Ed(t,e,n){if(e.e())return n;var i=J(e);return e=Ed(t.children.get(i)||Q,D(e),n),i=e.e()?t.children.remove(i):t.children.Oa(i,e),new $f(t.value,i)}function eg(t,e){return fg(t,C,e)}function fg(t,e,n){var i={};return t.children.ha(function(t,r){i[t]=fg(r,e.n(t),n)}),n(e,t.value,i)}function gg(t,e,n){return hg(t,e,C,n)}function hg(t,e,n,i){var r=!!t.value&&i(n,t.value);return r?r:e.e()?null:(r=J(e),(t=t.children.get(r))?hg(t,D(e),n.n(r),i):null)}function ig(t,e,n){jg(t,e,C,n)}function jg(t,e,n,i){if(e.e())return t;t.value&&i(n,t.value);var r=J(e);return(t=t.children.get(r))?jg(t,D(e),n.n(r),i):Q}function Cd(t,e){kg(t,C,e)}function kg(t,e,n){t.children.ha(function(t,i){kg(i,e.n(t),n)}),t.value&&n(e,t.value)}function lg(t,e){t.children.ha(function(t,n){n.value&&e(t,n.value)})}function mg(t,e,n){this.type=ud,this.source=ng,this.path=t,this.Ob=e,this.Gd=n}function og(t,e,n,i){this.be=t,this.Se=e,this.Hb=n,this.Be=i,H(!i||e,"Tagged queries must be from server.")}function qg(t){this.W=t}function sg(t,e,n){if(e.e())return new qg(new $f(n));var i=dg(t.W,e);if(null!=i){var r=i.path,i=i.value;return e=T(r,e),i=i.F(e,n),new qg(t.W.set(r,i))}return t=Ed(t.W,e,new $f(n)),new qg(t)}function tg(t,e,n){var i=t;return db(n,function(t,n){i=sg(i,e.n(t),n)}),i}function ug(t,e){var n=dg(t.W,e);return null!=n?t.W.get(n.path).P(T(n.path,e)):null}function vg(t){var e=[],n=t.W.value;return null!=n?n.J()||n.O(N,function(t,n){e.push(new K(t,n))}):t.W.children.ha(function(t,n){null!=n.value&&e.push(new K(t,n.value))}),e}function wg(t,e){if(e.e())return t;var n=ug(t,e);return new qg(null!=n?new $f(n):t.W.subtree(e))}function xg(t,e,n){if(null!=e.value)return n.F(t,e.value);var i=null;return e.children.ha(function(e,r){".priority"===e?(H(null!==r.value,"Priority writes must always be leaf nodes"),i=r.value):n=xg(t.n(e),r,n)}),n.P(t).e()||null===i||(n=n.F(t.n(".priority"),i)),n}function yg(){this.za={}}function Ag(t){return Ka(ta(t.za),function(t){return!S(t.V.m)})}function Bg(t,e){if(S(e.m))return zg(t);var n=e.ja();return w(t.za,n)}function zg(t){return xa(t.za,function(t){return S(t.V.m)})||null}function Cg(){this.S=rg,this.la=[],this.Ac=-1}function Dg(t,e){for(var n=0;n<t.la.length;n++){var i=t.la[n];if(i.Yc===e)return i}return null}function Eg(t,e){return t.Ga?t.path.contains(e):!!wa(t.children,function(n,i){return t.path.n(i).contains(e)})}function Gg(t){return t.visible}function Fg(t,e,n){for(var i=rg,r=0;r<t.length;++r){var o=t[r];if(e(o)){var a=o.path;if(o.Ga)n.contains(a)?(a=T(n,a),i=sg(i,a,o.Ga)):a.contains(n)&&(a=T(a,n),i=sg(i,C,o.Ga.P(a)));else{if(!o.children)throw sc("WriteRecord should have .snap or .children");n.contains(a)?(a=T(n,a),i=tg(i,a,o.children)):a.contains(n)&&(a=T(a,n),a.e()?i=tg(i,C,o.children):(o=w(o.children,J(a)))&&(o=o.P(D(a)),i=sg(i,C,o)))}}}return i}function Hg(t,e){this.Lb=t,this.W=e}function Ig(){this.children={},this.$c=0,this.value=null}function Jg(t,e,n){this.sd=t?t:"",this.Oc=e?e:null,this.A=n?n:new Ig}function Kg(t,e){for(var n,i=e instanceof L?e:new L(e),r=t;null!==(n=J(i));)r=new Jg(n,r,w(r.A.children,n)||new Ig),i=D(i);return r}function Lg(t,e){H("undefined"!=typeof e,"Cannot set value to undefined"),t.A.value=e,Mg(t)}function Ng(t,e,n,i){n&&!i&&e(t),t.O(function(t){Ng(t,e,!0,i)}),n&&i&&e(t)}function Og(t,e){for(var n=t.parent();null!==n&&!e(n);)n=n.parent()}function Mg(t){if(null!==t.Oc){var e=t.Oc,n=t.sd,i=t.e(),r=cb(e.A.children,n);i&&r?(delete e.A.children[n],e.A.$c--,Mg(e)):i||r||(e.A.children[n]=t.A,e.A.$c++,Mg(e))}}function Pg(t,e,n,i,r,o){if(this.id=Qg++,this.f=yc("p:"+this.id+":"),this.od={},this.$={},this.pa=[],this.Nc=0,this.Jc=[],this.ma=!1,this.Sa=1e3,this.rd=3e5,this.Gb=e,this.Ic=n,this.re=i,this.L=t,this.ob=this.Fa=this.Cb=this.we=null,this.Td=r,this.ae=!1,this.he=0,o)throw Error("Auth override specified in options, but not supported on non Node.js platforms");this.Ge=o||null,this.ub=null,this.Mb=!1,this.Ed={},this.ig=0,this.Re=!0,this.zc=this.je=null,Rg(this,0),tf.Vb().gc("visible",this.Zf,this),-1===t.host.indexOf("fblocal")&&sf.Vb().gc("online",this.Yf,this)}function Tg(t,e){var n=e.eg,i=n.path.toString(),r=n.ja();t.f("Listen on "+i+" for "+r);var o={p:i};e.tag&&(o.q=ie(n.m),o.t=e.tag),o.h=e.jd(),t.ua("q",o,function(o){var a=o.d,s=o.s;if(a&&"object"==typeof a&&cb(a,"w")){var u=w(a,"w");ea(u)&&0<=Ia(u,"no_index")&&O("Using an unspecified index. Consider adding "+('".indexOn": "'+n.m.g.toString()+'"')+" at "+n.path.toString()+" to your security rules for better performance")}(t.$[i]&&t.$[i][r])===e&&(t.f("listen response",o),"ok"!==s&&Ug(t,i,r),e.G&&e.G(s,a))})}function Vg(t){if(t.ma&&t.ob){var e=t.ob,n=Oc(e)?"auth":"gauth",i={cred:e};t.Ge&&(i.authvar=t.Ge),t.ua(n,i,function(n){var i=n.s;n=n.d||"error",t.ob===e&&("ok"===i?t.he=0:Wg(t,i,n))})}}function Xg(t,e,n,i,r){n={p:n,d:i},t.f("onDisconnect "+e,n),t.ua(e,n,function(t){r&&setTimeout(function(){r(t.s,t.d)},Math.floor(0))})}function Yg(t,e,i,r,o,a){r={p:i,d:r},n(a)&&(r.h=a),t.pa.push({action:e,mf:r,G:o}),t.Nc++,e=t.pa.length-1,t.ma?Zg(t,e):t.f("Buffering put: "+i)}function Zg(t,e){var n=t.pa[e].action,i=t.pa[e].mf,r=t.pa[e].G;t.pa[e].fg=t.ma,t.ua(n,i,function(i){t.f(n+" response",i),delete t.pa[e],t.Nc--,0===t.Nc&&(t.pa=[]),r&&r(i.s,i.d)})}function Rg(t,e){H(!t.Fa,"Scheduling a connect when we're already connected/ing?"),t.ub&&clearTimeout(t.ub),t.ub=setTimeout(function(){t.ub=null,bh(t)},Math.floor(e))}function bh(t){if(ch(t)){t.f("Making a connection attempt"),t.je=(new Date).getTime(),t.zc=null;var e=q(t.ud,t),n=q(t.Kc,t),i=q(t.df,t),r=t.id+":"+Sg++,o=t.Cb,a=!1,s=null,u=function(){s?s.close():(a=!0,i())};t.Fa={close:u,ua:function(t){H(s,"sendRequest call when we're not connected not allowed."),s.ua(t)}};var c=t.ae;t.ae=!1,t.Td.getToken(c).then(function(u){a?E("getToken() completed but was canceled"):(E("getToken() completed. Creating connection."),t.ob=u&&u.accessToken,s=new Ce(r,t.L,e,n,i,function(e){O(e+" ("+t.L.toString()+")"),t.ab("server_kill")},o))}).then(null,function(e){t.f("Failed to get token: "+e),a||u()})}}function $g(t,e,n){n=n?La(n,function(t){return Gc(t)}).join("$"):"default",(t=Ug(t,e,n))&&t.G&&t.G("permission_denied")}function Ug(t,e,i){e=new L(e).toString();var r;return n(t.$[e])?(r=t.$[e][i],delete t.$[e][i],0===ra(t.$[e])&&delete t.$[e]):r=void 0,r}function Wg(t,e,n){E("Auth token revoked: "+e+"/"+n),t.ob=null,t.ae=!0,t.Fa.close(),"invalid_token"===e&&(t.he++,3<=t.he&&(t.Sa=3e4,O("Provided authentication credentials are invalid. This usually indicates your FirebaseApp instance was not initialized correctly. Make sure your apiKey and databaseURL match the values provided for your app at https://console.firebase.google.com/, or if you're using a service account, make sure it's authorized to access the specified databaseURL and is from the correct project.")))}function ah(t){Vg(t),r(t.$,function(e){r(e,function(e){Tg(t,e)})});for(var e=0;e<t.pa.length;e++)t.pa[e]&&Zg(t,e);for(;t.Jc.length;)e=t.Jc.shift(),Xg(t,e.action,e.te,e.data,e.G)}function ch(t){var e;return e=sf.Vb().hc,ya(t.od)&&e}function dh(t){this.wa=Q,this.jb=new Cg,this.Ae={},this.ic={},this.Bc=t}function eh(t,e,i,r,o){var a=t.jb,s=o;return H(r>a.Ac,"Stacking an older write on top of newer ones"),n(s)||(s=!0),a.la.push({path:e,Ga:i,Yc:r,visible:s}),s&&(a.S=sg(a.S,e,i)),a.Ac=r,o?fh(t,new Ab(ng,e,i)):[]}function gh(t,e,n,i){var r=t.jb;return H(i>r.Ac,"Stacking an older merge on top of newer ones"),r.la.push({path:e,children:n,Yc:i,visible:!0}),r.S=tg(r.S,e,n),r.Ac=i,n=bg(n),fh(t,new Vc(ng,e,n))}function hh(t,e,n){n=n||!1;var i=Dg(t.jb,e);if(t.jb.Cd(e)){var r=Q;return null!=i.Ga?r=r.set(C,!0):db(i.children,function(t,e){r=r.set(new L(t),e)}),fh(t,new mg(i.path,r,n))}return[]}function ih(t,e,n){return n=bg(n),fh(t,new Vc(pg,e,n))}function jh(t,e,n,i){if(i=kh(t,i),null!=i){var r=lh(i);return i=r.path,r=r.Hb,e=T(i,e),n=new Ab(new og(!1,!0,r,!0),e,n),mh(t,i,n)}return[]}function nh(t,e,n,i){if(i=kh(t,i)){var r=lh(i);return i=r.path,r=r.Hb,e=T(i,e),n=bg(n),n=new Vc(new og(!1,!0,r,!0),e,n),mh(t,i,n)}return[]}function rh(t){return eg(t,function(t,e,n){if(e&&null!=zg(e))return[zg(e)];var i=[];return e&&(i=Ag(e)),r(n,function(t){i=i.concat(t)}),i})}function vh(t,e){for(var n=0;n<e.length;++n){var i=e[n];if(!S(i.m)){var i=oh(i),r=t.ic[i];delete t.ic[i],delete t.Ae["_"+r]}}}function th(t){return S(t.m)&&!Sc(t.m)?t.wb():t}function qh(t,e,n){var i=e.path,o=uh(t,e);if(n=sh(t,n),e=t.Bc.xe(th(e),o,n.jd,n.G),i=t.wa.subtree(i),o)H(null==zg(i.value),"If we're adding a query, it shouldn't be shadowed");else for(o=eg(i,function(t,e,n){if(!t.e()&&e&&null!=zg(e))return[Qf(zg(e))];var i=[];return e&&(i=i.concat(La(Ag(e),function(t){return t.V}))),r(n,function(t){i=i.concat(t)}),i}),i=0;i<o.length;++i)n=o[i],t.Bc.Md(th(n),uh(t,n));return e}function sh(t,e){var n=e.V,i=uh(t,n);return{jd:function(){return(e.w()||G).hash()},G:function(e){if("ok"===e){if(i){var r=n.path;if(e=kh(t,i)){var o=lh(e);e=o.path,o=o.Hb,r=T(e,r),r=new Cb(new og(!1,!0,o,!0),r),e=mh(t,e,r)}else e=[]}else e=fh(t,new Cb(pg,n.path));return e}return r="Unknown Error","too_big"===e?r="The data requested exceeds the maximum size that can be accessed with a single request.":"permission_denied"==e?r="Client doesn't have permission to access the desired data.":"unavailable"==e&&(r="The service is unavailable"),r=Error(e+" at "+n.path.toString()+": "+r),r.code=e.toUpperCase(),t.kb(n,null,r)}}}function oh(t){return t.path.toString()+"$"+t.ja()}function lh(t){var e=t.indexOf("$");return H(-1!==e&&e<t.length-1,"Bad queryKey."),{Hb:t.substr(e+1),path:new L(t.substr(0,e))}}function kh(t,e){var n=t.Ae,i="_"+e;return i in n?n[i]:void 0}function uh(t,e){var n=oh(e);return w(t.ic,n)}function mh(t,e,n){var i=t.wa.get(e);return H(i,"Missing sync point for query tag that we're tracking"),i.eb(n,new Hg(e,t.jb),null)}function fh(t,e){return wh(t,e,t.wa,null,new Hg(C,t.jb))}function wh(t,e,n,i,r){if(e.path.e())return xh(t,e,n,i,r);var o=n.get(C);null==i&&null!=o&&(i=o.hb(C));var a=[],s=J(e.path),u=e.Lc(s);if((n=n.children.get(s))&&u)var c=i?i.Q(s):null,s=r.n(s),a=a.concat(wh(t,u,n,c,s));return o&&(a=a.concat(o.eb(e,r,i))),a}function xh(t,e,n,i,r){var o=n.get(C);null==i&&null!=o&&(i=o.hb(C));var a=[];return n.children.ha(function(n,o){var s=i?i.Q(n):null,u=r.n(n),c=e.Lc(n);c&&(a=a.concat(xh(t,c,o,s,u)))}),o&&(a=a.concat(o.eb(e,r,i))),a}function Te(t,e,n){this.app=n;var i=new Eb(n);if(this.L=t,this.Va=$c(t),this.Uc=null,this.ca=new Nb,this.td=1,this.Ra=null,e||0<=("object"==typeof window&&window.navigator&&window.navigator.userAgent||"").search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i))this.va=new Qc(this.L,q(this.Gb,this),i),setTimeout(q(this.Ic,this,!0),0);else{if(e=n.options.databaseAuthVariableOverride||null,null!==e){if("object"!==da(e))throw Error("Only objects are supported for option databaseAuthVariableOverride");try{B(e)}catch(t){throw Error("Invalid authOverride provided: "+t)}}this.va=this.Ra=new Pg(this.L,q(this.Gb,this),q(this.Ic,this),q(this.re,this),i,e)}var r=this;Fb(i,function(t){r.va.kf(t)}),this.og=ad(t,q(function(){return new Xc(this.Va,this.va)},this)),this.mc=new Jg,this.fe=new Gb,this.nd=new dh({xe:function(t,e,n,i){return e=[],n=r.fe.j(t.path),n.e()||(e=fh(r.nd,new Ab(pg,t.path,n)),setTimeout(function(){i("ok")},0)),e},Md:ba}),yh(this,"connected",!1),this.ia=new mc,this.Ya=new Se(this),this.dd=0,this.ge=null,this.K=new dh({xe:function(t,e,n,i){return r.va.$e(t,n,e,function(e,n){var o=i(e,n);Sb(r.ca,t.path,o)}),[]},Md:function(t,e){r.va.uf(t,e)}})}function zh(t){return t=t.fe.j(new L(".info/serverTimeOffset")).H()||0,(new Date).getTime()+t}function Ah(t){return t=t={timestamp:zh(t)},t.timestamp=t.timestamp||(new Date).getTime(),t}function yh(t,e,n){e=new L("/.info/"+e),n=M(n);var i=t.fe;i.Hd=i.Hd.F(e,n),n=fh(t.nd,new Ab(pg,e,n)),Sb(t.ca,e,n)}function Ch(t){t.f("onDisconnectEvents");var e=Ah(t),n=[];nc(lc(t.ia,e),C,function(e,i){n=n.concat(fh(t.K,new Ab(pg,e,i)));var r=Eh(t,e);Bh(t,r)}),t.ia=new mc,Sb(t.ca,C,n)}function nf(t,e,n,i){var r=M(n);t.va.oe(e.toString(),r.H(!0),function(n,o){"ok"===n&&oc(t.ia,e,r),Dh(i,n,o)})}function of(t,e,n,i,r){var o=M(n,i);t.va.oe(e.toString(),o.H(!0),function(n,i){"ok"===n&&oc(t.ia,e,o),Dh(r,n,i)})}function pf(t,e,n,i){var r,o=!0;for(r in n)o=!1;o?(E("onDisconnect().update() called with empty data.  Don't do anything."),Dh(i,"ok")):t.va.cf(e.toString(),n,function(r,o){if("ok"===r)for(var a in n){var s=M(n[a]);oc(t.ia,e.n(a),s)}Dh(i,r,o)})}function Zf(t,e,n){n=".info"===J(e.path)?t.nd.Nb(e,n):t.K.Nb(e,n),Qb(t.ca,e.path,n)}function Dh(t,e,n){t&&ub(function(){if("ok"==e)t(null);else{var i=(e||"error").toUpperCase(),r=i;n&&(r+=": "+n),r=Error(r),r.code=i,t(r)}})}function Fh(t,e,i,r,o){function a(){}t.f("transaction on "+e);var s=new U(t,e);if(s.gc("value",a),i={path:e,update:i,G:r,status:null,ef:rc(),Fe:o,of:0,Pd:function(){s.Hc("value",a)},Rd:null,Ba:null,ad:null,bd:null,cd:null},r=t.K.Aa(e,void 0)||G,i.ad=r,r=i.update(r.H()),n(r)){ef("transaction failed: Data returned ",r,i.path),i.status=1,o=Kg(t.mc,e);var u=o.Ca()||[];u.push(i),Lg(o,u),"object"==typeof r&&null!==r&&cb(r,".priority")?(u=w(r,".priority"),H(cf(u),"Invalid priority returned by transaction. Priority must be a valid string, finite number, server value, or null.")):u=(t.K.Aa(e)||G).C().H(),o=Ah(t),r=M(r,u),o=pc(r,o),i.bd=r,i.cd=o,i.Ba=t.td++,i=eh(t.K,e,o,i.Ba,i.Fe),Sb(t.ca,e,i),Gh(t)}else i.Pd(),i.bd=null,i.cd=null,i.G&&(t=new W(i.ad,new U(t,i.path),N),i.G(null,!1,t))}function Gh(t,e){var n=e||t.mc;if(e||Hh(t,n),null!==n.Ca()){var i=Ih(t,n);H(0<i.length,"Sending zero length transaction queue"),Na(i,function(t){return 1===t.status})&&Jh(t,n.path(),i)}else n.hd()&&n.O(function(e){Gh(t,e)})}function Jh(t,e,n){for(var i=La(n,function(t){return t.Ba}),r=t.K.Aa(e,i)||G,i=r,r=r.hash(),o=0;o<n.length;o++){var a=n[o];H(1===a.status,"tryToSendTransactionQueue_: items in queue should all be run."),a.status=2,a.of++;var s=T(e,a.path),i=i.F(s,a.bd)}i=i.H(!0),t.va.put(e.toString(),i,function(i){t.f("transaction put response",{path:e.toString(),status:i});var r=[];if("ok"===i){for(i=[],o=0;o<n.length;o++){if(n[o].status=3,r=r.concat(hh(t.K,n[o].Ba)),n[o].G){var a=n[o].cd,s=new U(t,n[o].path);i.push(q(n[o].G,null,null,!0,new W(a,s,N)))}n[o].Pd()}for(Hh(t,Kg(t.mc,e)),Gh(t),Sb(t.ca,e,r),o=0;o<i.length;o++)ub(i[o])}else{if("datastale"===i)for(o=0;o<n.length;o++)n[o].status=4===n[o].status?5:1;else for(O("transaction at "+e.toString()+" failed: "+i),o=0;o<n.length;o++)n[o].status=5,n[o].Rd=i;Bh(t,e)}},r)}function Bh(t,e){var n=Kh(t,e),i=n.path(),n=Ih(t,n);return Lh(t,n,i),i}function Lh(t,e,i){if(0!==e.length){for(var r=[],o=[],a=Ka(e,function(t){return 1===t.status}),a=La(a,function(t){return t.Ba}),s=0;s<e.length;s++){var u,c=e[s],h=T(i,c.path),f=!1;if(H(null!==h,"rerunTransactionsUnderNode_: relativePath should not be null."),5===c.status)f=!0,u=c.Rd,o=o.concat(hh(t.K,c.Ba,!0));else if(1===c.status)if(25<=c.of)f=!0,u="maxretry",o=o.concat(hh(t.K,c.Ba,!0));else{var l=t.K.Aa(c.path,a)||G;c.ad=l;var d=e[s].update(l.H());n(d)?(ef("transaction failed: Data returned ",d,c.path),h=M(d),"object"==typeof d&&null!=d&&cb(d,".priority")||(h=h.fa(l.C())),l=c.Ba,d=Ah(t),d=pc(h,d),c.bd=h,c.cd=d,c.Ba=t.td++,Qa(a,l),o=o.concat(eh(t.K,c.path,d,c.Ba,c.Fe)),o=o.concat(hh(t.K,l,!0))):(f=!0,u="nodata",o=o.concat(hh(t.K,c.Ba,!0)))}Sb(t.ca,i,o),o=[],f&&(e[s].status=3,setTimeout(e[s].Pd,Math.floor(0)),e[s].G&&("nodata"===u?(c=new U(t,e[s].path),r.push(q(e[s].G,null,null,!1,new W(e[s].ad,c,N)))):r.push(q(e[s].G,null,Error(u),!1,null))))}for(Hh(t,t.mc),s=0;s<r.length;s++)ub(r[s]);Gh(t)}}function Kh(t,e){for(var n,i=t.mc;null!==(n=J(e))&&null===i.Ca();)i=Kg(i,n),e=D(e);return i}function Ih(t,e){var n=[];return Mh(t,e,n),n.sort(function(t,e){return t.ef-e.ef}),n}function Mh(t,e,n){var i=e.Ca();if(null!==i)for(var r=0;r<i.length;r++)n.push(i[r]);e.O(function(e){Mh(t,e,n)})}function Hh(t,e){var n=e.Ca();if(n){for(var i=0,r=0;r<n.length;r++)3!==n[r].status&&(n[i]=n[r],i++);n.length=i,Lg(e,0<n.length?n:null)}e.O(function(e){Hh(t,e)})}function Eh(t,e){var n=Kh(t,e).path(),i=Kg(t.mc,e);return Og(i,function(e){Nh(t,e)}),Nh(t,i),Ng(i,function(e){Nh(t,e)}),n}function Nh(t,e){var n=e.Ca();if(null!==n){for(var i=[],r=[],o=-1,a=0;a<n.length;a++)4!==n[a].status&&(2===n[a].status?(H(o===a-1,"All SENT items should be at beginning of queue."),o=a,n[a].status=4,n[a].Rd="set"):(H(1===n[a].status,"Unexpected transaction status in abort"),n[a].Pd(),r=r.concat(hh(t.K,n[a].Ba,!0)),n[a].G&&i.push(q(n[a].G,null,Error("set"),!1,null))));for(-1===o?Lg(e,null):n.length=o+1,Sb(t.ca,e.path(),r),a=0;a<i.length;a++)ub(i[a])}}function Ye(){this.lb={},this.wf=!1}function U(t,e){if(!(t instanceof Te))throw Error("new Firebase() no longer supported - use app.database().");X.call(this,t,e,fe,!1),this.then=void 0,this.catch=void 0}var g,aa=this;la(na,ma),na.prototype.reset=function(){this.M[0]=1732584193,this.M[1]=4023233417,this.M[2]=2562383102,this.M[3]=271733878,this.M[4]=3285377520,this.Nd=this.$b=0},na.prototype.update=function(t,e){if(null!=t){n(e)||(e=t.length);for(var i=e-this.Wa,r=0,o=this.Ud,a=this.$b;r<e;){if(0==a)for(;r<=i;)oa(this,t,r),r+=this.Wa;if(p(t)){for(;r<e;)if(o[a]=t.charCodeAt(r),++a,++r,a==this.Wa){oa(this,o),a=0;break}}else for(;r<e;)if(o[a]=t[r],++a,++r,a==this.Wa){oa(this,o),a=0;break}}this.$b=a,this.Nd+=e}};var Ea={'"':'\\"',"\\":"\\\\","/":"\\/","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t","\v":"\\u000b"},Fa=/\uffff/.test("￿")?/[\\\"\x00-\x1f\x7f-\uffff]/g:/[\\\"\x00-\x1f\x7f-\xff]/g,t;t:{var Ga=aa.navigator;if(Ga){var Ha=Ga.userAgent;if(Ha){t=Ha;break t}}t=""}var v=Array.prototype,Ia=v.indexOf?function(t,e,n){return v.indexOf.call(t,e,n)}:function(t,e,n){if(n=null==n?0:0>n?Math.max(0,t.length+n):n,p(t))return p(e)&&1==e.length?t.indexOf(e,n):-1;for(;n<t.length;n++)if(n in t&&t[n]===e)return n;return-1},Ja=v.forEach?function(t,e,n){v.forEach.call(t,e,n)}:function(t,e,n){for(var i=t.length,r=p(t)?t.split(""):t,o=0;o<i;o++)o in r&&e.call(n,r[o],o,t)},Ka=v.filter?function(t,e,n){return v.filter.call(t,e,n)}:function(t,e,n){for(var i=t.length,r=[],o=0,a=p(t)?t.split(""):t,s=0;s<i;s++)if(s in a){var u=a[s];e.call(n,u,s,t)&&(r[o++]=u)}return r},La=v.map?function(t,e,n){return v.map.call(t,e,n)}:function(t,e,n){for(var i=t.length,r=Array(i),o=p(t)?t.split(""):t,a=0;a<i;a++)a in o&&(r[a]=e.call(n,o[a],a,t));return r},Ma=v.reduce?function(t,e,n,i){for(var r=[],o=1,a=arguments.length;o<a;o++)r.push(arguments[o]);return i&&(r[0]=q(e,i)),v.reduce.apply(t,r)}:function(t,e,n,i){var r=n;return Ja(t,function(n,o){r=e.call(i,r,n,o,t)}),r},Na=v.every?function(t,e,n){return v.every.call(t,e,n)}:function(t,e,n){for(var i=t.length,r=p(t)?t.split(""):t,o=0;o<i;o++)if(o in r&&!e.call(n,r[o],o,t))return!1;return!0},Ua=-1!=t.indexOf("Opera")||-1!=t.indexOf("OPR"),Va=-1!=t.indexOf("Trident")||-1!=t.indexOf("MSIE"),Wa=-1!=t.indexOf("Gecko")&&-1==t.toLowerCase().indexOf("webkit")&&!(-1!=t.indexOf("Trident")||-1!=t.indexOf("MSIE")),Xa=-1!=t.toLowerCase().indexOf("webkit");
!function(){var e,n="";return Ua&&aa.opera?(n=aa.opera.version,ha(n)?n():n):(Wa?e=/rv\:([^\);]+)(\)|;)/:Va?e=/\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/:Xa&&(e=/WebKit\/(\S+)/),e&&(n=(n=e.exec(t))?n[1]:""),Va&&(e=(e=aa.document)?e.documentMode:void 0,e>parseFloat(n))?String(e):n)}();var Ya=null,Za=null,$a=null,gb=firebase.Promise;vb.prototype.set=function(t,e){null==e?delete this.oc[t]:this.oc[t]=e},vb.prototype.get=function(t){return cb(this.oc,t)?this.oc[t]:null},vb.prototype.remove=function(t){delete this.oc[t]},vb.prototype.Ze=!0,g=wb.prototype,g.set=function(t,e){null==e?this.tc.removeItem(this.Ad+t):this.tc.setItem(this.Ad+t,B(e))},g.get=function(t){return t=this.tc.getItem(this.Ad+t),null==t?null:ob(t)},g.remove=function(t){this.tc.removeItem(this.Ad+t)},g.Ze=!1,g.toString=function(){return this.tc.toString()};var yb=xb("localStorage"),zb=xb("sessionStorage");Ab.prototype.Lc=function(t){return this.path.e()?new Ab(this.source,C,this.Ga.Q(t)):new Ab(this.source,D(this.path),this.Ga)},Ab.prototype.toString=function(){return"Operation("+this.path+": "+this.source.toString()+" overwrite: "+this.Ga.toString()+")"},Cb.prototype.Lc=function(){return this.path.e()?new Cb(this.source,C):new Cb(this.source,D(this.path))},Cb.prototype.toString=function(){return"Operation("+this.path+": "+this.source.toString()+" listen_complete)"},Eb.prototype.getToken=function(t){return this.Ee.INTERNAL.getToken(t).then(null,function(t){return t&&"auth/token-not-initialized"===t.code?(E("Got auth/token-not-initialized error.  Treating as null token."),null):Promise.reject(t)})},Gb.prototype.j=function(t){return this.Hd.P(t)},Gb.prototype.toString=function(){return this.Hd.toString()},Hb.prototype.toString=function(){var t=(this.Rc?"https://":"http://")+this.host;return this.gf&&(t+="<"+this.gf+">"),t},Kb.prototype.get=function(){return za(this.sc)},Mb.prototype.get=function(){var t=this.Ef.get(),e=za(t);if(this.pd)for(var n in this.pd)e[n]-=this.pd[n];return this.pd=t,e},Pb.prototype.add=function(t){this.gd.push(t)},Pb.prototype.Yb=function(){return this.qa},Ub.prototype.Yb=function(){var t=this.Kd.wb();return"value"===this.fd?t.path:t.getParent().path},Ub.prototype.de=function(){return this.fd},Ub.prototype.Tb=function(){return this.Zd.Tb(this)},Ub.prototype.toString=function(){return this.Yb().toString()+":"+this.fd+":"+B(this.Kd.Qe())},Vb.prototype.Yb=function(){return this.path},Vb.prototype.de=function(){return"cancel"},Vb.prototype.Tb=function(){return this.Zd.Tb(this)},Vb.prototype.toString=function(){return this.path.toString()+":cancel"},Wb.prototype.Te=function(){return null},Wb.prototype.ce=function(){return null};var Xb=new Wb;Yb.prototype.Te=function(t){var e=this.Ka.N;return Zb(e,t)?e.j().Q(t):(e=null!=this.wd?new $b(this.wd,!0,!1):this.Ka.w(),this.xf.pc(t,e))},Yb.prototype.ce=function(t,e,n){var i=null!=this.wd?this.wd:ac(this.Ka);return t=this.xf.Vd(i,e,1,n,t),0===t.length?null:t[0]};var cc="value";$b.prototype.j=function(){return this.A};var rc=function(){var t=1;return function(){return t++}}(),H=kb,sc=lb,Tb=null,wc=!0,Kc=/^-?\d{1,10}$/;g=Qc.prototype,g.$e=function(t,e,n,i){var r=t.path.toString();this.f("Listen called for "+r+" "+t.ja());var o=Rc(t,n),a={};this.$[o]=a,t=Tc(t.m);var s=this;Uc(this,r+".json",t,function(t,e){var u=e;404===t&&(t=u=null),null===t&&s.Gb(r,u,!1,n),w(s.$,o)===a&&i(t?401==t?"permission_denied":"rest_error:"+t:"ok",null)})},g.uf=function(t,e){var n=Rc(t,e);delete this.$[n]},g.kf=function(){},g.oe=function(){},g.cf=function(){},g.vd=function(){},g.put=function(){},g.af=function(){},g.ve=function(){},Vc.prototype.Lc=function(t){return this.path.e()?(t=this.children.subtree(new L(t)),t.e()?null:t.value?new Ab(this.source,C,t.value):new Vc(this.source,C,t)):(H(J(this.path)===t,"Can't get a merge for a child not on the path of the operation"),new Vc(this.source,D(this.path),this.children))},Vc.prototype.toString=function(){return"Operation("+this.path+": "+this.source.toString()+" merge: "+this.children.toString()+")"},Xc.prototype.lf=function(){var t,e=this.Uc.get(),n={},i=!1;for(t in e)0<e[t]&&cb(this.rf,t)&&(n[t]=e[t],i=!0);i&&this.va.ve(n),Mc(q(this.lf,this),Math.floor(6e5*Math.random()))};var Yc={},Zc={},bd=null;"undefined"!=typeof MozWebSocket?bd=MozWebSocket:"undefined"!=typeof WebSocket&&(bd=WebSocket);var dd;cd.prototype.open=function(t,e){this.ib=e,this.Xf=t,this.f("Websocket connecting to "+this.Je),this.vc=!1,yb.set("previous_websocket_failure",!0);try{this.Ia=new bd(this.Je)}catch(t){this.f("Error instantiating WebSocket.");var n=t.message||t.data;return n&&this.f(n),void this.bb()}var i=this;this.Ia.onopen=function(){i.f("Websocket connected."),i.vc=!0},this.Ia.onclose=function(){i.f("Websocket connection was disconnected."),i.Ia=null,i.bb()},this.Ia.onmessage=function(t){if(null!==i.Ia)if(t=t.data,i.pb+=t.length,Lb(i.Va,"bytes_received",t.length),ed(i),null!==i.frames)fd(i,t);else{t:{if(H(null===i.frames,"We already have a frame buffer"),6>=t.length){var e=Number(t);if(!isNaN(e)){i.Ce=e,i.frames=[],t=null;break t}}i.Ce=1,i.frames=[]}null!==t&&fd(i,t)}},this.Ia.onerror=function(t){i.f("WebSocket error.  Closing connection."),(t=t.message||t.data)&&i.f(t),i.bb()}},cd.prototype.start=function(){},cd.isAvailable=function(){var t=!1;if("undefined"!=typeof navigator&&navigator.userAgent){var e=navigator.userAgent.match(/Android ([0-9]{0,}\.[0-9]{0,})/);e&&1<e.length&&4.4>parseFloat(e[1])&&(t=!0)}return!t&&null!==bd&&!dd},cd.responsesRequiredToBeHealthy=2,cd.healthyTimeout=3e4,g=cd.prototype,g.qd=function(){yb.remove("previous_websocket_failure")},g.send=function(t){ed(this),t=B(t),this.qb+=t.length,Lb(this.Va,"bytes_sent",t.length),t=Hc(t,16384),1<t.length&&gd(this,String(t.length));for(var e=0;e<t.length;e++)gd(this,t[e])},g.Sc=function(){this.Ab=!0,this.yc&&(clearInterval(this.yc),this.yc=null),this.Ia&&(this.Ia.close(),this.Ia=null)},g.bb=function(){this.Ab||(this.f("WebSocket is closing itself"),this.Sc(),this.ib&&(this.ib(this.vc),this.ib=null))},g.close=function(){this.Ab||(this.f("WebSocket is being closed"),this.Sc())},kd.prototype.Ff=function(t,e){if(null==t.Xa||null==e.Xa)throw sc("Should only compare child_ events.");return this.g.compare(new K(t.Xa,t.Ja),new K(e.Xa,e.Ja))},pd.prototype.eb=function(t,e,n,i){var r,o=new hd;if(e.type===Bb)e.source.be?n=qd(this,t,e.path,e.Ga,n,i,o):(H(e.source.Se,"Unknown source."),r=e.source.Be||ec(t.w())&&!e.path.e(),n=rd(this,t,e.path,e.Ga,n,i,r,o));else if(e.type===Wc)e.source.be?n=sd(this,t,e.path,e.children,n,i,o):(H(e.source.Se,"Unknown source."),r=e.source.Be||ec(t.w()),n=td(this,t,e.path,e.children,n,i,r,o));else if(e.type===ud)if(e.Gd)if(e=e.path,null!=n.lc(e))n=t;else{if(r=new Yb(n,t,i),i=t.N.j(),e.e()||".priority"===J(e))dc(t.w())?e=n.Aa(ac(t)):(e=t.w().j(),H(e instanceof P,"serverChildren would be complete if leaf node"),e=n.qc(e)),e=this.U.ya(i,e,o);else{var a=J(e),s=n.pc(a,t.w());null==s&&Zb(t.w(),a)&&(s=i.Q(a)),e=null!=s?this.U.F(i,a,s,D(e),r,o):t.N.j().Da(a)?this.U.F(i,a,G,D(e),r,o):i,e.e()&&dc(t.w())&&(i=n.Aa(ac(t)),i.J()&&(e=this.U.ya(e,i,o)))}i=dc(t.w())||null!=n.lc(C),n=vd(t,e,i,this.U.Na())}else n=wd(this,t,e.path,e.Ob,n,i,o);else{if(e.type!==Db)throw sc("Unknown operation type: "+e.type);i=e.path,e=t.w(),r=e.j(),a=e.da||i.e(),n=xd(this,new yd(t.N,new $b(r,a,e.Sb)),i,n,Xb,o)}return o=ta(o.fb),i=n,e=i.N,e.da&&(r=e.j().J()||e.j().e(),a=zd(t),(0<o.length||!t.N.da||r&&!e.j().Z(a)||!e.j().C().Z(a.C()))&&o.push(bc(zd(i)))),new od(n,o)},g=Gd.prototype,g.F=function(t,e,n,i,r,o){return H(t.xc(this.g),"A node must be indexed if only a child is updated"),r=t.Q(e),r.P(i).Z(n.P(i))&&r.e()==n.e()?t:(null!=o&&(n.e()?t.Da(e)?jd(o,new I("child_removed",r,e)):H(t.J(),"A child remove without an old child only makes sense on a leaf node"):r.e()?jd(o,new I("child_added",n,e)):jd(o,new I("child_changed",n,e,r))),t.J()&&n.e()?t:t.T(e,n).nb(this.g))},g.ya=function(t,e,n){return null!=n&&(t.J()||t.O(N,function(t,i){e.Da(t)||jd(n,new I("child_removed",i,t))}),e.J()||e.O(N,function(e,i){if(t.Da(e)){var r=t.Q(e);r.Z(i)||jd(n,new I("child_changed",i,e,r))}else jd(n,new I("child_added",i,e))})),e.nb(this.g)},g.fa=function(t,e){return t.e()?G:t.fa(e)},g.Na=function(){return!1},g.Ub=function(){return this},g=Hd.prototype,g.matches=function(t){return 0>=this.g.compare(this.Tc,t)&&0>=this.g.compare(t,this.uc)},g.F=function(t,e,n,i,r,o){return this.matches(new K(e,n))||(n=G),this.ee.F(t,e,n,i,r,o)},g.ya=function(t,e,n){e.J()&&(e=G);var i=e.nb(this.g),i=i.fa(G),r=this;return e.O(N,function(t,e){r.matches(new K(t,e))||(i=i.T(t,G))}),this.ee.ya(t,i,n)},g.fa=function(t){return t},g.Na=function(){return!0},g.Ub=function(){return this.ee},g=Md.prototype,g.F=function(t,e,n,i,r,o){return this.sa.matches(new K(e,n))||(n=G),t.Q(e).Z(n)?t:t.Eb()<this.oa?this.sa.Ub().F(t,e,n,i,r,o):Od(this,t,e,n,r,o)},g.ya=function(t,e,n){var i;if(e.J()||e.e())i=G.nb(this.g);else if(2*this.oa<e.Eb()&&e.xc(this.g)){i=G.nb(this.g),e=this.Ib?e.Zb(this.sa.uc,this.g):e.Xb(this.sa.Tc,this.g);for(var r=0;0<e.Pa.length&&r<this.oa;){var o,a=R(e);if(!(o=this.Ib?0>=this.g.compare(this.sa.Tc,a):0>=this.g.compare(a,this.sa.uc)))break;i=i.T(a.name,a.R),r++}}else{i=e.nb(this.g),i=i.fa(G);var s,u,c;if(this.Ib){e=i.We(this.g),s=this.sa.uc,u=this.sa.Tc;var h=Pd(this.g);c=function(t,e){return h(e,t)}}else e=i.Wb(this.g),s=this.sa.Tc,u=this.sa.uc,c=Pd(this.g);for(var r=0,f=!1;0<e.Pa.length;)a=R(e),!f&&0>=c(s,a)&&(f=!0),(o=f&&r<this.oa&&0>=c(a,u))?r++:i=i.T(a.name,G)}return this.sa.Ub().ya(t,i,n)},g.fa=function(t){return t},g.Na=function(){return!0},g.Ub=function(){return this.sa.Ub()};var Td=["object","boolean","number","string"];g=qc.prototype,g.J=function(){return!0},g.C=function(){return this.aa},g.fa=function(t){return new qc(this.B,t)},g.Q=function(t){return".priority"===t?this.aa:G},g.P=function(t){return t.e()?this:".priority"===J(t)?this.aa:G},g.Da=function(){return!1},g.Ve=function(){return null},g.T=function(t,e){return".priority"===t?this.fa(e):e.e()&&".priority"!==t?this:G.T(t,e).fa(this.aa)},g.F=function(t,e){var n=J(t);return null===n?e:e.e()&&".priority"!==n?this:(H(".priority"!==n||1===Ad(t),".priority must be the last token in a path"),this.T(n,G.F(D(t),e)))},g.e=function(){return!1},g.Eb=function(){return 0},g.O=function(){return!1},g.H=function(t){return t&&!this.C().e()?{".value":this.Ca(),".priority":this.C().H()}:this.Ca()},g.hash=function(){if(null===this.Db){var t="";this.aa.e()||(t+="priority:"+Ud(this.aa.H())+":");var e=typeof this.B,t=t+(e+":"),t="number"===e?t+Jc(this.B):t+this.B;this.Db=uc(t)}return this.Db},g.Ca=function(){return this.B},g.rc=function(t){if(t===G)return 1;if(t instanceof P)return-1;H(t.J(),"Unknown node type");var e=typeof t.B,n=typeof this.B,i=Ia(Td,e),r=Ia(Td,n);return H(0<=i,"Unknown leaf type: "+e),H(0<=r,"Unknown leaf type: "+n),i===r?"object"===n?0:this.B<t.B?-1:this.B===t.B?0:1:r-i},g.nb=function(){return this},g.xc=function(){return!0},g.Z=function(t){return t===this||!!t.J()&&(this.B===t.B&&this.aa.Z(t.aa))},g.toString=function(){return B(this.H(!0))};var Wd={};Vd.prototype.ld=function(t,e){return 0!==this.compare(new K("[MIN_NAME]",t),new K("[MIN_NAME]",e))},Vd.prototype.Gc=function(){return Xd},la(Yd,Vd),g=Yd.prototype,g.wc=function(t){return!t.P(this.bc).e()},g.compare=function(t,e){var n=t.R.P(this.bc),i=e.R.P(this.bc),n=n.rc(i);return 0===n?hc(t.name,e.name):n},g.Dc=function(t,e){var n=M(t),n=G.F(this.bc,n);return new K(e,n)},g.Ec=function(){var t=G.F(this.bc,Zd);return new K("[MAX_NAME]",t)},g.toString=function(){return this.bc.slice().join("/")},la($d,Vd),g=$d.prototype,g.compare=function(t,e){var n=t.R.C(),i=e.R.C(),n=n.rc(i);return 0===n?hc(t.name,e.name):n},g.wc=function(t){return!t.C().e()},g.ld=function(t,e){return!t.C().Z(e.C())},g.Gc=function(){return Xd},g.Ec=function(){return new K("[MAX_NAME]",new qc("[PRIORITY-POST]",Zd))},g.Dc=function(t,e){var n=M(t);return new K(e,new qc("[PRIORITY-POST]",n))},g.toString=function(){return".priority"};var N=new $d;la(ae,Vd),g=ae.prototype,g.compare=function(t,e){return hc(t.name,e.name)},g.wc=function(){throw sc("KeyIndex.isDefinedOn not expected to be called.")},g.ld=function(){return!1},g.Gc=function(){return Xd},g.Ec=function(){return new K("[MAX_NAME]",G)},g.Dc=function(t){return H(p(t),"KeyIndex indexValue must always be a string."),new K(t,G)},g.toString=function(){return".key"};var Fd=new ae;la(be,Vd),g=be.prototype,g.compare=function(t,e){var n=t.R.rc(e.R);return 0===n?hc(t.name,e.name):n},g.wc=function(){return!0},g.ld=function(t,e){return!t.Z(e)},g.Gc=function(){return Xd},g.Ec=function(){return ce},g.Dc=function(t,e){var n=M(t);return new K(e,n)},g.toString=function(){return".value"};var de=new be,fe=new ee;g=ee.prototype,g.ke=function(t){var e=ge(this);return e.xa=!0,e.oa=t,e.mb="l",e},g.le=function(t){var e=ge(this);return e.xa=!0,e.oa=t,e.mb="r",e},g.Ld=function(t,e){var i=ge(this);return i.ka=!0,n(t)||(t=null),i.dc=t,null!=e?(i.Kb=!0,i.zb=e):(i.Kb=!1,i.zb=""),i},g.ed=function(t,e){var i=ge(this);return i.na=!0,n(t)||(t=null),i.ac=t,n(e)?(i.Rb=!0,i.xb=e):(i.vg=!1,i.xb=""),i},g.toString=function(){return B(ie(this))},je.prototype.get=function(t){var e=w(this.md,t);if(!e)throw Error("No index defined for "+t);return e===Wd?null:e};var ne=new je({".priority":Wd},{".priority":N});g=oe.prototype,g.add=function(t,e){this.set[t]=null===e||e},g.contains=function(t){return cb(this.set,t)},g.get=function(t){return this.contains(t)?this.set[t]:void 0},g.remove=function(t){delete this.set[t]},g.clear=function(){this.set={}},g.e=function(){return ya(this.set)},g.count=function(){return ra(this.set)},g.keys=function(){var t=[];return r(this.set,function(e,n){t.push(n)}),t};var re,se;qe.prototype.open=function(t,e){this.Me=0,this.ia=e,this.bf=new rb(t),this.Ab=!1;var n=this;this.sb=setTimeout(function(){n.f("Timed out trying to connect."),n.bb(),n.sb=null},Math.floor(3e4)),Dc(function(){if(!n.Ab){n.Ta=new te(function(t,e,i,r,o){if(ue(n,arguments),n.Ta)if(n.sb&&(clearTimeout(n.sb),n.sb=null),n.vc=!0,"start"==t)n.id=e,n.ff=i;else{if("close"!==t)throw Error("Unrecognized command received: "+t);e?(n.Ta.Id=!1,sb(n.bf,e,function(){n.bb()})):n.bb()}},function(t,e){ue(n,arguments),tb(n.bf,t,e)},function(){n.bb()},n.Xc);var t={start:"t"};t.ser=Math.floor(1e8*Math.random()),n.Ta.Od&&(t.cb=n.Ta.Od),t.v="5",n.tf&&(t.s=n.tf),n.Cb&&(t.ls=n.Cb),"undefined"!=typeof location&&location.href&&-1!==location.href.indexOf("firebaseio.com")&&(t.r="f"),t=n.Xc(t),n.f("Connecting via long-poll to "+t),ve(n.Ta,t,function(){})}})},qe.prototype.start=function(){var t=this.Ta,e=this.ff;for(t.Vf=this.id,t.Wf=e,t.Sd=!0;we(t););t=this.id,e=this.ff,this.fc=document.createElement("iframe");var n={dframe:"t"};n.id=t,n.pw=e,this.fc.src=this.Xc(n),this.fc.style.display="none",document.body.appendChild(this.fc)},qe.isAvailable=function(){return re||!se&&"undefined"!=typeof document&&null!=document.createElement&&!("object"==typeof window&&window.chrome&&window.chrome.extension&&!/^chrome/.test(window.location.href))&&!("object"==typeof Windows&&"object"==typeof Windows.rg)&&!0},g=qe.prototype,g.qd=function(){},g.Sc=function(){this.Ab=!0,this.Ta&&(this.Ta.close(),this.Ta=null),this.fc&&(document.body.removeChild(this.fc),this.fc=null),this.sb&&(clearTimeout(this.sb),this.sb=null)},g.bb=function(){this.Ab||(this.f("Longpoll is closing itself"),this.Sc(),this.ia&&(this.ia(this.vc),this.ia=null))},g.close=function(){this.Ab||(this.f("Longpoll is being closed."),this.Sc())},g.send=function(t){t=B(t),this.qb+=t.length,Lb(this.Va,"bytes_sent",t.length),t=mb(t),t=ab(t,!0),t=Hc(t,1840);for(var e=0;e<t.length;e++){var n=this.Ta;n.Pc.push({jg:this.Me,pg:t.length,Oe:t[e]}),n.Sd&&we(n),this.Me++}},te.prototype.close=function(){if(this.Sd=!1,this.Ea){this.Ea.gb.body.innerHTML="";var t=this;setTimeout(function(){null!==t.Ea&&(document.body.removeChild(t.Ea),t.Ea=null)},Math.floor(0))}var e=this.ib;e&&(this.ib=null,e())};var Ae=[qe,cd];Ce.prototype.ua=function(t){Ne(this,{t:"d",d:t})},Ce.prototype.ud=function(t){Ke(this),this.qe(t)},Ce.prototype.close=function(){2!==this.Ua&&(this.f("Closing realtime connection."),this.Ua=2,Je(this),this.ia&&(this.ia(),this.ia=null))},g=L.prototype,g.toString=function(){for(var t="",e=this.Y;e<this.o.length;e++)""!==this.o[e]&&(t+="/"+this.o[e]);return t||"/"},g.slice=function(t){return this.o.slice(this.Y+(t||0))},g.parent=function(){if(this.Y>=this.o.length)return null;for(var t=[],e=this.Y;e<this.o.length-1;e++)t.push(this.o[e]);return new L(t,0)},g.n=function(t){for(var e=[],n=this.Y;n<this.o.length;n++)e.push(this.o[n]);if(t instanceof L)for(n=t.Y;n<t.o.length;n++)e.push(t.o[n]);else for(t=t.split("/"),n=0;n<t.length;n++)0<t[n].length&&e.push(t[n]);return new L(e,0)},g.e=function(){return this.Y>=this.o.length},g.Z=function(t){if(Ad(this)!==Ad(t))return!1;for(var e=this.Y,n=t.Y;e<=this.o.length;e++,n++)if(this.o[e]!==t.o[n])return!1;return!0},g.contains=function(t){var e=this.Y,n=t.Y;if(Ad(this)>Ad(t))return!1;for(;e<this.o.length;){if(this.o[e]!==t.o[n])return!1;++e,++n}return!0};var C=new L("");Pe.prototype.push=function(t){0<this.Qa.length&&(this.Ha+=1),this.Qa.push(t),this.Ha+=nb(t),Qe(this)},Pe.prototype.pop=function(){var t=this.Qa.pop();this.Ha-=nb(t),0<this.Qa.length&&--this.Ha};var Ve={TIMESTAMP:{".sv":"timestamp"}};g=Se.prototype,g.app=null,g.jf=function(t){return We(this,"ref"),x("database.ref",0,1,arguments.length),n(t)?this.ba.n(t):this.ba},g.gg=function(t){We(this,"database.refFromURL"),x("database.refFromURL",1,1,arguments.length);var e=Bc(t);Xe("database.refFromURL",e);var n=e.jc;return n.host!==this.ta.L.host&&Ac("database.refFromURL: Host name does not match the current database: (found "+n.host+" but expected "+this.ta.L.host+")"),this.jf(e.path.toString())},g.Pf=function(){x("database.goOffline",0,0,arguments.length),We(this,"goOffline"),this.ta.ab()},g.Qf=function(){x("database.goOnline",0,0,arguments.length),We(this,"goOnline"),this.ta.kc()},Object.defineProperty(Se.prototype,"app",{get:function(){return this.ta.app}}),Ue.prototype.delete=function(){We(this.Ya,"delete");var t=Ye.Vb(),e=this.Ya.ta;return w(t.lb,e.app.name)!==e&&Ac("Database "+e.app.name+" has already been deleted."),e.ab(),delete t.lb[e.app.name],this.Ya.ta=null,this.Ya.ba=null,this.Ya=this.Ya.INTERNAL=null,firebase.Promise.resolve()},Se.prototype.ref=Se.prototype.jf,Se.prototype.refFromURL=Se.prototype.gg,Se.prototype.goOnline=Se.prototype.Qf,Se.prototype.goOffline=Se.prototype.Pf,Ue.prototype.delete=Ue.prototype.delete,mc.prototype.find=function(t){if(null!=this.B)return this.B.P(t);if(t.e()||null==this.k)return null;var e=J(t);return t=D(t),this.k.contains(e)?this.k.get(e).find(t):null},mc.prototype.O=function(t){null!==this.k&&pe(this.k,function(e,n){t(e,n)})};var $e=/[\[\].#$\/\u0000-\u001F\u007F]/,af=/[\[\].#$\u0000-\u001F\u007F]/;V.prototype.cancel=function(t){x("Firebase.onDisconnect().cancel",0,1,arguments.length),A("Firebase.onDisconnect().cancel",1,t,!0);var e=new hb;return this.ta.vd(this.qa,ib(e,t)),e.ra},V.prototype.cancel=V.prototype.cancel,V.prototype.remove=function(t){x("Firebase.onDisconnect().remove",0,1,arguments.length),mf("Firebase.onDisconnect().remove",this.qa),A("Firebase.onDisconnect().remove",1,t,!0);var e=new hb;return nf(this.ta,this.qa,null,ib(e,t)),e.ra},V.prototype.remove=V.prototype.remove,V.prototype.set=function(t,e){x("Firebase.onDisconnect().set",1,2,arguments.length),mf("Firebase.onDisconnect().set",this.qa),df("Firebase.onDisconnect().set",t,this.qa,!1),A("Firebase.onDisconnect().set",2,e,!0);var n=new hb;return nf(this.ta,this.qa,t,ib(n,e)),n.ra},V.prototype.set=V.prototype.set,V.prototype.Jb=function(t,e,n){x("Firebase.onDisconnect().setWithPriority",2,3,arguments.length),mf("Firebase.onDisconnect().setWithPriority",this.qa),df("Firebase.onDisconnect().setWithPriority",t,this.qa,!1),hf("Firebase.onDisconnect().setWithPriority",2,e),A("Firebase.onDisconnect().setWithPriority",3,n,!0);var i=new hb;return of(this.ta,this.qa,t,e,ib(i,n)),i.ra},V.prototype.setWithPriority=V.prototype.Jb,V.prototype.update=function(t,e){if(x("Firebase.onDisconnect().update",1,2,arguments.length),mf("Firebase.onDisconnect().update",this.qa),ea(t)){for(var n={},i=0;i<t.length;++i)n[""+i]=t[i];t=n,O("Passing an Array to Firebase.onDisconnect().update() is deprecated. Use set() if you want to overwrite the existing data, or an Object with integer keys if you really do want to only update some of the children.")}return gf("Firebase.onDisconnect().update",t,this.qa),A("Firebase.onDisconnect().update",2,e,!0),n=new hb,pf(this.ta,this.qa,t,ib(n,e)),n.ra},V.prototype.update=V.prototype.update,qf.prototype.De=function(t,e){var n;n=this.Cc[t]||[];var i=n.length;if(0<i){for(var r=Array(i),o=0;o<i;o++)r[o]=n[o];n=r}else n=[];for(i=0;i<n.length;i++)n[i].He.apply(n[i].Ma,Array.prototype.slice.call(arguments,1))},qf.prototype.gc=function(t,e,n){rf(this,t),this.Cc[t]=this.Cc[t]||[],this.Cc[t].push({He:e,Ma:n}),(t=this.Ue(t))&&e.apply(n,t)},qf.prototype.Hc=function(t,e,n){rf(this,t),t=this.Cc[t]||[];for(var i=0;i<t.length;i++)if(t[i].He===e&&(!n||n===t[i].Ma)){t.splice(i,1);break}},la(sf,qf),sf.prototype.Ue=function(t){return H("online"===t,"Unknown event type: "+t),[this.hc]},ca(sf),la(tf,qf),tf.prototype.Ue=function(t){return H("visible"===t,"Unknown event type: "+t),[this.Mb]},ca(tf);var uf=function(){var t=0,e=[];return function(n){var i=n===t;t=n;for(var r=Array(8),o=7;0<=o;o--)r[o]="-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz".charAt(n%64),n=Math.floor(n/64);if(H(0===n,"Cannot push at time == 0"),n=r.join(""),i){for(o=11;0<=o&&63===e[o];o--)e[o]=0;e[o]++}else for(o=0;12>o;o++)e[o]=Math.floor(64*Math.random());for(o=0;12>o;o++)n+="-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz".charAt(e[o]);return H(20===n.length,"nextPushId: Length should be 20."),n}}();g=vf.prototype,g.Oa=function(t,e){return new vf(this.La,this.ba.Oa(t,e,this.La).X(null,null,!1,null,null))},g.remove=function(t){return new vf(this.La,this.ba.remove(t,this.La).X(null,null,!1,null,null))},g.get=function(t){for(var e,n=this.ba;!n.e();){if(e=this.La(t,n.key),0===e)return n.value;0>e?n=n.left:0<e&&(n=n.right)}return null},g.e=function(){return this.ba.e()},g.count=function(){return this.ba.count()},g.Fc=function(){return this.ba.Fc()},g.ec=function(){return this.ba.ec()},g.ha=function(t){return this.ba.ha(t)},g.Wb=function(t){return new yf(this.ba,null,this.La,!1,t)},g.Xb=function(t,e){return new yf(this.ba,t,this.La,!1,e)},g.Zb=function(t,e){return new yf(this.ba,t,this.La,!0,e)},g.We=function(t){return new yf(this.ba,null,this.La,!0,t)},g=Af.prototype,g.X=function(t,e,n,i,r){return new Af(null!=t?t:this.key,null!=e?e:this.value,null!=n?n:this.color,null!=i?i:this.left,null!=r?r:this.right)},g.count=function(){return this.left.count()+1+this.right.count()},g.e=function(){return!1},g.ha=function(t){return this.left.ha(t)||t(this.key,this.value)||this.right.ha(t)},g.Fc=function(){return Bf(this).key},g.ec=function(){return this.right.e()?this.key:this.right.ec()},g.Oa=function(t,e,n){var i,r;return r=this,i=n(t,r.key),r=0>i?r.X(null,null,null,r.left.Oa(t,e,n),null):0===i?r.X(null,e,null,null,null):r.X(null,null,null,null,r.right.Oa(t,e,n)),Cf(r)},g.remove=function(t,e){var n,i;if(n=this,0>e(t,n.key))n.left.e()||n.left.ea()||n.left.left.ea()||(n=Ef(n)),n=n.X(null,null,null,n.left.remove(t,e),null);else{if(n.left.ea()&&(n=Ff(n)),n.right.e()||n.right.ea()||n.right.left.ea()||(n=Gf(n),n.left.left.ea()&&(n=Ff(n),n=Gf(n))),0===e(t,n.key)){if(n.right.e())return wf;i=Bf(n.right),n=n.X(i.key,i.value,null,null,Df(n.right))}n=n.X(null,null,null,null,n.right.remove(t,e))}return Cf(n)},g.ea=function(){return this.color},g=If.prototype,g.X=function(){return this},g.Oa=function(t,e){return new Af(t,e,null)},g.remove=function(){return this},g.count=function(){return 0},g.e=function(){return!0},g.ha=function(){return!1},g.Fc=function(){return null},g.ec=function(){return null},g.ea=function(){return!1};var wf=new If;g=P.prototype,g.J=function(){return!1},g.C=function(){return this.aa||G},g.fa=function(t){return this.k.e()?this:new P(this.k,t,this.yb)},g.Q=function(t){return".priority"===t?this.C():(t=this.k.get(t),null===t?G:t)},g.P=function(t){var e=J(t);return null===e?this:this.Q(e).P(D(t))},g.Da=function(t){return null!==this.k.get(t)},g.T=function(t,e){if(H(e,"We should always be passing snapshot nodes"),".priority"===t)return this.fa(e);var n,i,r=new K(t,e);return e.e()?(n=this.k.remove(t),r=me(this.yb,r,this.k)):(n=this.k.Oa(t,e),r=ke(this.yb,r,this.k)),i=n.e()?G:this.aa,new P(n,i,r)},g.F=function(t,e){var n=J(t);if(null===n)return e;H(".priority"!==J(t)||1===Ad(t),".priority must be the last token in a path");var i=this.Q(n).F(D(t),e);return this.T(n,i)},g.e=function(){return this.k.e()},g.Eb=function(){return this.k.count()};var Jf=/^(0|[1-9]\d*)$/;g=P.prototype,g.H=function(t){if(this.e())return null;var e={},n=0,i=0,r=!0;if(this.O(N,function(o,a){e[o]=a.H(t),n++,r&&Jf.test(o)?i=Math.max(i,Number(o)):r=!1}),!t&&r&&i<2*n){var o,a=[];for(o in e)a[o]=e[o];return a}return t&&!this.C().e()&&(e[".priority"]=this.C().H()),e},g.hash=function(){if(null===this.Db){var t="";this.C().e()||(t+="priority:"+Ud(this.C().H())+":"),this.O(N,function(e,n){var i=n.hash();""!==i&&(t+=":"+e+":"+i)}),this.Db=""===t?"":uc(t)}return this.Db},g.Ve=function(t,e,n){return(n=Kf(this,n))?(t=xf(n,new K(t,e)))?t.name:null:xf(this.k,t)},g.O=function(t,e){var n=Kf(this,t);return n?n.ha(function(t){return e(t.name,t.R)}):this.k.ha(e)},g.Wb=function(t){return this.Xb(t.Gc(),t)},g.Xb=function(t,e){var n=Kf(this,e);if(n)return n.Xb(t,function(t){return t});for(var n=this.k.Xb(t.name,jc),i=zf(n);null!=i&&0>e.compare(i,t);)R(n),i=zf(n);return n},g.We=function(t){return this.Zb(t.Ec(),t)},g.Zb=function(t,e){var n=Kf(this,e);if(n)return n.Zb(t,function(t){return t});for(var n=this.k.Zb(t.name,jc),i=zf(n);null!=i&&0<e.compare(i,t);)R(n),i=zf(n);return n},g.rc=function(t){return this.e()?t.e()?0:-1:t.J()||t.e()?1:t===Zd?-1:0},g.nb=function(t){if(t===Fd||va(this.yb.cc,t.toString()))return this;var e=this.yb,n=this.k;H(t!==Fd,"KeyIndex always exists and isn't meant to be added to the IndexMap.");for(var i=[],r=!1,n=n.Wb(jc),o=R(n);o;)r=r||t.wc(o.R),i.push(o),o=R(n);return i=r?le(i,Pd(t)):Wd,r=t.toString(),n=za(e.cc),n[r]=t,t=za(e.md),t[r]=i,new P(this.k,this.aa,new je(t,n))},g.xc=function(t){return t===Fd||va(this.yb.cc,t.toString())},g.Z=function(t){if(t===this)return!0;if(t.J())return!1;if(this.C().Z(t.C())&&this.k.count()===t.k.count()){var e=this.Wb(N);t=t.Wb(N);for(var n=R(e),i=R(t);n&&i;){if(n.name!==i.name||!n.R.Z(i.R))return!1;n=R(e),i=R(t)}return null===n&&null===i}return!1},g.toString=function(){return B(this.H(!0))};var Lf=Math.log(2),G=new P(new vf(ic),null,ne);la(Of,P),g=Of.prototype,g.rc=function(t){return t===this?0:1},g.Z=function(t){return t===this},g.C=function(){return this},g.Q=function(){return G},g.e=function(){return!1};var Zd=new Of,Xd=new K("[MIN_NAME]",G),ce=new K("[MAX_NAME]",Zd);W.prototype.H=function(){return x("Firebase.DataSnapshot.val",0,0,arguments.length),this.A.H()},W.prototype.val=W.prototype.H,W.prototype.Qe=function(){return x("Firebase.DataSnapshot.exportVal",0,0,arguments.length),this.A.H(!0)},W.prototype.exportVal=W.prototype.Qe,W.prototype.Lf=function(){return x("Firebase.DataSnapshot.exists",0,0,arguments.length),!this.A.e()},W.prototype.exists=W.prototype.Lf,W.prototype.n=function(t){x("Firebase.DataSnapshot.child",0,1,arguments.length),ga(t)&&(t=String(t)),lf("Firebase.DataSnapshot.child",t);var e=new L(t),n=this.V.n(e);return new W(this.A.P(e),n,N)},W.prototype.child=W.prototype.n,W.prototype.Da=function(t){x("Firebase.DataSnapshot.hasChild",1,1,arguments.length),lf("Firebase.DataSnapshot.hasChild",t);var e=new L(t);return!this.A.P(e).e()},W.prototype.hasChild=W.prototype.Da,W.prototype.C=function(){return x("Firebase.DataSnapshot.getPriority",0,0,arguments.length),this.A.C().H()},W.prototype.getPriority=W.prototype.C,W.prototype.forEach=function(t){if(x("Firebase.DataSnapshot.forEach",1,1,arguments.length),A("Firebase.DataSnapshot.forEach",1,t,!1),this.A.J())return!1;var e=this;return!!this.A.O(this.g,function(n,i){return t(new W(i,e.V.n(n),N))})},W.prototype.forEach=W.prototype.forEach,W.prototype.hd=function(){return x("Firebase.DataSnapshot.hasChildren",0,0,arguments.length),!this.A.J()&&!this.A.e()},W.prototype.hasChildren=W.prototype.hd,W.prototype.getKey=function(){return x("Firebase.DataSnapshot.key",0,0,arguments.length),this.V.getKey()},Lc(W.prototype,"key",W.prototype.getKey),W.prototype.Eb=function(){return x("Firebase.DataSnapshot.numChildren",0,0,arguments.length),this.A.Eb()},W.prototype.numChildren=W.prototype.Eb,W.prototype.wb=function(){return x("Firebase.DataSnapshot.ref",0,0,arguments.length),this.V},Lc(W.prototype,"ref",W.prototype.wb),yd.prototype.w=function(){return this.Jd},g=Pf.prototype,g.w=function(){return this.Ka.w().j()},g.hb=function(t){var e=ac(this.Ka);return e&&(S(this.V.m)||!t.e()&&!e.Q(J(t)).e())?e.P(t):null},g.e=function(){return 0===this.Za.length},g.Nb=function(t){this.Za.push(t)},g.kb=function(t,e){var n=[];if(e){H(null==t,"A cancel should cancel all event registrations.");var i=this.V.path;Ja(this.Za,function(t){(t=t.Le(e,i))&&n.push(t)})}if(t){for(var r=[],o=0;o<this.Za.length;++o){var a=this.Za[o];if(a.matches(t)){if(t.Xe()){r=r.concat(this.Za.slice(o+1));break}}else r.push(a)}this.Za=r}else this.Za=[];return n},g.eb=function(t,e,n){t.type===Wc&&null!==t.source.Hb&&(H(ac(this.Ka),"We should always have a full cache before handling merges"),H(zd(this.Ka),"Missing event cache, even though we have a server cache"));var i=this.Ka;return t=this.hf.eb(i,t,e,n),e=this.hf,n=t.Qd,H(n.N.j().xc(e.U.g),"Event snap not indexed"),H(n.w().j().xc(e.U.g),"Server snap not indexed"),H(dc(t.Qd.w())||!dc(i.w()),"Once a server snap is complete, it should never go back"),this.Ka=t.Qd,Rf(this,t.Df,t.Qd.N.j(),null)},g=Tf.prototype,g.nf=function(t){return"value"===t},g.createEvent=function(t,e){var n=e.m.g;return new Ub("value",this,new W(t.Ja,e.wb(),n))},g.Tb=function(t){var e=this.tb;if("cancel"===t.de()){H(this.rb,"Raising a cancel event on a listener with no cancel callback");var n=this.rb;return function(){n.call(e,t.error)}}var i=this.Pb;return function(){i.call(e,t.Kd)}},g.Le=function(t,e){return this.rb?new Vb(this,t,e):null},g.matches=function(t){return t instanceof Tf&&(!t.Pb||!this.Pb||t.Pb===this.Pb&&t.tb===this.tb)},g.Xe=function(){return null!==this.Pb},g=Uf.prototype,g.nf=function(t){return t="children_added"===t?"child_added":t,("children_removed"===t?"child_removed":t)in this.ga},g.Le=function(t,e){return this.rb?new Vb(this,t,e):null},g.createEvent=function(t,e){H(null!=t.Xa,"Child events should have a childName.");var n=e.wb().n(t.Xa);return new Ub(t.type,this,new W(t.Ja,n,e.m.g),t.Bd)},g.Tb=function(t){var e=this.tb;if("cancel"===t.de()){H(this.rb,"Raising a cancel event on a listener with no cancel callback");var n=this.rb;return function(){n.call(e,t.error)}}var i=this.ga[t.fd];return function(){i.call(e,t.Kd,t.Bd)}},g.matches=function(t){if(t instanceof Uf){if(!this.ga||!t.ga)return!0;if(this.tb===t.tb){var e=ra(t.ga);if(e===ra(this.ga)){if(1===e){var e=sa(t.ga),n=sa(this.ga);return!(n!==e||t.ga[e]&&this.ga[n]&&t.ga[e]!==this.ga[n])}return qa(this.ga,function(e,n){return t.ga[n]===e})}}}return!1},g.Xe=function(){return null!==this.ga},g=X.prototype,g.wb=function(){return x("Query.ref",0,0,arguments.length),new U(this.u,this.path)},g.gc=function(t,e,n,i){x("Query.on",2,4,arguments.length),jf("Query.on",t,!1),A("Query.on",2,e,!1);var r=Yf("Query.on",n,i);if("value"===t)Zf(this.u,this,new Tf(e,r.cancel||null,r.Ma||null));else{var o={};o[t]=e,Zf(this.u,this,new Uf(o,r.cancel,r.Ma))}return e},g.Hc=function(t,e,n){x("Query.off",0,3,arguments.length),jf("Query.off",t,!0),A("Query.off",2,e,!0),eb("Query.off",3,n);var i=null,r=null;"value"===t?i=new Tf(e||null,null,n||null):t&&(e&&(r={},r[t]=e),i=new Uf(r,null,n||null)),r=this.u,i=".info"===J(this.path)?r.nd.kb(this,i):r.K.kb(this,i),
Qb(r.ca,this.path,i)},g.$f=function(t,e){function n(s){o&&(o=!1,r.Hc(t,n),e&&e.call(i.Ma,s),a.resolve(s))}x("Query.once",1,4,arguments.length),jf("Query.once",t,!1),A("Query.once",2,e,!0);var i=Yf("Query.once",arguments[2],arguments[3]),r=this,o=!0,a=new hb;return jb(a.ra),this.gc(t,n,function(e){r.Hc(t,n),i.cancel&&i.cancel.call(i.Ma,e),a.reject(e)}),a.ra},g.ke=function(t){if(x("Query.limitToFirst",1,1,arguments.length),!ga(t)||Math.floor(t)!==t||0>=t)throw Error("Query.limitToFirst: First argument must be a positive integer.");if(this.m.xa)throw Error("Query.limitToFirst: Limit was already set (by another call to limit, limitToFirst, or limitToLast).");return new X(this.u,this.path,this.m.ke(t),this.Mc)},g.le=function(t){if(x("Query.limitToLast",1,1,arguments.length),!ga(t)||Math.floor(t)!==t||0>=t)throw Error("Query.limitToLast: First argument must be a positive integer.");if(this.m.xa)throw Error("Query.limitToLast: Limit was already set (by another call to limit, limitToFirst, or limitToLast).");return new X(this.u,this.path,this.m.le(t),this.Mc)},g.ag=function(t){if(x("Query.orderByChild",1,1,arguments.length),"$key"===t)throw Error('Query.orderByChild: "$key" is invalid.  Use Query.orderByKey() instead.');if("$priority"===t)throw Error('Query.orderByChild: "$priority" is invalid.  Use Query.orderByPriority() instead.');if("$value"===t)throw Error('Query.orderByChild: "$value" is invalid.  Use Query.orderByValue() instead.');lf("Query.orderByChild",t),Xf(this,"Query.orderByChild");var e=new L(t);if(e.e())throw Error("Query.orderByChild: cannot pass in empty path.  Use Query.orderByValue() instead.");return e=new Yd(e),e=he(this.m,e),Vf(e),new X(this.u,this.path,e,!0)},g.bg=function(){x("Query.orderByKey",0,0,arguments.length),Xf(this,"Query.orderByKey");var t=he(this.m,Fd);return Vf(t),new X(this.u,this.path,t,!0)},g.cg=function(){x("Query.orderByPriority",0,0,arguments.length),Xf(this,"Query.orderByPriority");var t=he(this.m,N);return Vf(t),new X(this.u,this.path,t,!0)},g.dg=function(){x("Query.orderByValue",0,0,arguments.length),Xf(this,"Query.orderByValue");var t=he(this.m,de);return Vf(t),new X(this.u,this.path,t,!0)},g.Ld=function(t,e){x("Query.startAt",0,2,arguments.length),df("Query.startAt",t,this.path,!0),kf("Query.startAt",e);var i=this.m.Ld(t,e);if(Wf(i),Vf(i),this.m.ka)throw Error("Query.startAt: Starting point was already set (by another call to startAt or equalTo).");return n(t)||(e=t=null),new X(this.u,this.path,i,this.Mc)},g.ed=function(t,e){x("Query.endAt",0,2,arguments.length),df("Query.endAt",t,this.path,!0),kf("Query.endAt",e);var n=this.m.ed(t,e);if(Wf(n),Vf(n),this.m.na)throw Error("Query.endAt: Ending point was already set (by another call to endAt or equalTo).");return new X(this.u,this.path,n,this.Mc)},g.If=function(t,e){if(x("Query.equalTo",1,2,arguments.length),df("Query.equalTo",t,this.path,!1),kf("Query.equalTo",e),this.m.ka)throw Error("Query.equalTo: Starting point was already set (by another call to endAt or equalTo).");if(this.m.na)throw Error("Query.equalTo: Ending point was already set (by another call to endAt or equalTo).");return this.Ld(t,e).ed(t,e)},g.toString=function(){x("Query.toString",0,0,arguments.length);for(var t=this.path,e="",n=t.Y;n<t.o.length;n++)""!==t.o[n]&&(e+="/"+encodeURIComponent(String(t.o[n])));return this.u.toString()+(e||"/")},g.ja=function(){var t=Gc(ie(this.m));return"{}"===t?"default":t},g.isEqual=function(t){if(x("Query.isEqual",1,1,arguments.length),!(t instanceof X))throw Error("Query.isEqual failed: First argument must be an instance of firebase.database.Query.");var e=this.u===t.u,n=this.path.Z(t.path),i=this.ja()===t.ja();return e&&n&&i},X.prototype.on=X.prototype.gc,X.prototype.off=X.prototype.Hc,X.prototype.once=X.prototype.$f,X.prototype.limitToFirst=X.prototype.ke,X.prototype.limitToLast=X.prototype.le,X.prototype.orderByChild=X.prototype.ag,X.prototype.orderByKey=X.prototype.bg,X.prototype.orderByPriority=X.prototype.cg,X.prototype.orderByValue=X.prototype.dg,X.prototype.startAt=X.prototype.Ld,X.prototype.endAt=X.prototype.ed,X.prototype.equalTo=X.prototype.If,X.prototype.toString=X.prototype.toString,X.prototype.isEqual=X.prototype.isEqual,Lc(X.prototype,"ref",X.prototype.wb);var ag=new vf(function(t,e){return t===e?0:t<e?-1:1});g=$f.prototype,g.e=function(){return null===this.value&&this.children.e()},g.subtree=function(t){if(t.e())return this;var e=this.children.get(J(t));return null!==e?e.subtree(D(t)):Q},g.set=function(t,e){if(t.e())return new $f(e,this.children);var n=J(t),i=(this.children.get(n)||Q).set(D(t),e),n=this.children.Oa(n,i);return new $f(this.value,n)},g.remove=function(t){if(t.e())return this.children.e()?Q:new $f(null,this.children);var e=J(t),n=this.children.get(e);return n?(t=n.remove(D(t)),e=t.e()?this.children.remove(e):this.children.Oa(e,t),null===this.value&&e.e()?Q:new $f(this.value,e)):this},g.get=function(t){if(t.e())return this.value;var e=this.children.get(J(t));return e?e.get(D(t)):null};var Q=new $f(null);$f.prototype.toString=function(){var t={};return Cd(this,function(e,n){t[e.toString()]=n.toString()}),B(t)},mg.prototype.Lc=function(t){return this.path.e()?null!=this.Ob.value?(H(this.Ob.children.e(),"affectedTree should not have overlapping affected paths."),this):(t=this.Ob.subtree(new L(t)),new mg(C,t,this.Gd)):(H(J(this.path)===t,"operationForChild called for unrelated child."),new mg(D(this.path),this.Ob,this.Gd))},mg.prototype.toString=function(){return"Operation("+this.path+": "+this.source.toString()+" ack write revert="+this.Gd+" affectedTree="+this.Ob+")"};var Bb=0,Wc=1,ud=2,Db=3,ng=new og(!0,!1,null,!1),pg=new og(!1,!0,null,!1);og.prototype.toString=function(){return this.be?"user":this.Be?"server(queryID="+this.Hb+")":"server"};var rg=new qg(new $f(null));qg.prototype.Cd=function(t){return t.e()?rg:(t=Ed(this.W,t,Q),new qg(t))},qg.prototype.e=function(){return this.W.e()},qg.prototype.apply=function(t){return xg(C,this.W,t)},g=yg.prototype,g.e=function(){return ya(this.za)},g.eb=function(t,e,n){var i=t.source.Hb;if(null!==i)return i=w(this.za,i),H(null!=i,"SyncTree gave us an op for an invalid query."),i.eb(t,e,n);var o=[];return r(this.za,function(i){o=o.concat(i.eb(t,e,n))}),o},g.Nb=function(t,e,n,i,r){var o=t.ja(),a=w(this.za,o);if(!a){var a=n.Aa(r?i:null),s=!1;a?s=!0:(a=i instanceof P?n.qc(i):G,s=!1),a=new Pf(t,new yd(new $b(a,s,!1),new $b(i,r,!1))),this.za[o]=a}return a.Nb(e),Sf(a,e)},g.kb=function(t,e,n){var i=t.ja(),o=[],a=[],s=null!=zg(this);if("default"===i){var u=this;r(this.za,function(t,i){a=a.concat(t.kb(e,n)),t.e()&&(delete u.za[i],S(t.V.m)||o.push(t.V))})}else{var c=w(this.za,i);c&&(a=a.concat(c.kb(e,n)),c.e()&&(delete this.za[i],S(c.V.m)||o.push(c.V)))}return s&&null==zg(this)&&o.push(new U(t.u,t.path)),{hg:o,Kf:a}},g.hb=function(t){var e=null;return r(this.za,function(n){e=e||n.hb(t)}),e},g=Cg.prototype,g.Cd=function(t){var e=Pa(this.la,function(e){return e.Yc===t});H(0<=e,"removeWrite called with nonexistent writeId.");var n=this.la[e];this.la.splice(e,1);for(var i=n.visible,o=!1,a=this.la.length-1;i&&0<=a;){var s=this.la[a];s.visible&&(a>=e&&Eg(s,n.path)?i=!1:n.path.contains(s.path)&&(o=!0)),a--}if(i){if(o)this.S=Fg(this.la,Gg,C),this.Ac=0<this.la.length?this.la[this.la.length-1].Yc:-1;else if(n.Ga)this.S=this.S.Cd(n.path);else{var u=this;r(n.children,function(t,e){u.S=u.S.Cd(n.path.n(e))})}return!0}return!1},g.Aa=function(t,e,n,i){if(n||i){var r=wg(this.S,t);return!i&&r.e()?e:i||null!=e||null!=ug(r,C)?(r=Fg(this.la,function(e){return(e.visible||i)&&(!n||!(0<=Ia(n,e.Yc)))&&(e.path.contains(t)||t.contains(e.path))},t),e=e||G,r.apply(e)):null}return r=ug(this.S,t),null!=r?r:(r=wg(this.S,t),r.e()?e:null!=e||null!=ug(r,C)?(e=e||G,r.apply(e)):null)},g.qc=function(t,e){var n=G,i=ug(this.S,t);if(i)i.J()||i.O(N,function(t,e){n=n.T(t,e)});else if(e){var r=wg(this.S,t);e.O(N,function(t,e){var i=wg(r,new L(t)).apply(e);n=n.T(t,i)}),Ja(vg(r),function(t){n=n.T(t.name,t.R)})}else r=wg(this.S,t),Ja(vg(r),function(t){n=n.T(t.name,t.R)});return n},g.Zc=function(t,e,n,i){return H(n||i,"Either existingEventSnap or existingServerSnap must exist"),t=t.n(e),null!=ug(this.S,t)?null:(t=wg(this.S,t),t.e()?i.P(e):t.apply(i.P(e)))},g.pc=function(t,e,n){t=t.n(e);var i=ug(this.S,t);return null!=i?i:Zb(n,e)?wg(this.S,t).apply(n.j().Q(e)):null},g.lc=function(t){return ug(this.S,t)},g.Vd=function(t,e,n,i,r,o){var a;if(t=wg(this.S,t),a=ug(t,C),null==a){if(null==e)return[];a=t.apply(e)}if(a=a.nb(o),a.e()||a.J())return[];for(e=[],t=Pd(o),r=r?a.Zb(n,o):a.Xb(n,o),o=R(r);o&&e.length<i;)0!==t(o,n)&&e.push(o),o=R(r);return e},g=Hg.prototype,g.Aa=function(t,e,n){return this.W.Aa(this.Lb,t,e,n)},g.qc=function(t){return this.W.qc(this.Lb,t)},g.Zc=function(t,e,n){return this.W.Zc(this.Lb,t,e,n)},g.lc=function(t){return this.W.lc(this.Lb.n(t))},g.Vd=function(t,e,n,i,r){return this.W.Vd(this.Lb,t,e,n,i,r)},g.pc=function(t,e){return this.W.pc(this.Lb,t,e)},g.n=function(t){return new Hg(this.Lb.n(t),this.W)},g=Jg.prototype,g.Ca=function(){return this.A.value},g.clear=function(){this.A.value=null,this.A.children={},this.A.$c=0,Mg(this)},g.hd=function(){return 0<this.A.$c},g.e=function(){return null===this.Ca()&&!this.hd()},g.O=function(t){var e=this;r(this.A.children,function(n,i){t(new Jg(i,e,n))})},g.path=function(){return new L(null===this.Oc?this.sd:this.Oc.path()+"/"+this.sd)},g.name=function(){return this.sd},g.parent=function(){return this.Oc};var Qg=0,Sg=0;g=Pg.prototype,g.ua=function(t,e,n){var i=++this.ig;t={r:i,a:t,b:e},this.f(B(t)),H(this.ma,"sendRequest call when we're not connected not allowed."),this.Fa.ua(t),n&&(this.Ed[i]=n)},g.$e=function(t,e,n,i){var r=t.ja(),o=t.path.toString();this.f("Listen called for "+o+" "+r),this.$[o]=this.$[o]||{},H(Sc(t.m)||!S(t.m),"listen() called for non-default but complete query"),H(!this.$[o][r],"listen() called twice for same path/queryId."),t={G:i,jd:e,eg:t,tag:n},this.$[o][r]=t,this.ma&&Tg(this,t)},g.kf=function(t){this.ob=t,this.f("Auth token refreshed"),this.ob?Vg(this):this.ma&&this.ua("unauth",{},function(){}),(t&&40===t.length||Pc(t))&&(this.f("Admin auth credential detected.  Reducing max reconnect time."),this.rd=3e4)},g.uf=function(t,e){var n=t.path.toString(),i=t.ja();if(this.f("Unlisten called for "+n+" "+i),H(Sc(t.m)||!S(t.m),"unlisten() called for non-default but complete query"),Ug(this,n,i)&&this.ma){var r=ie(t.m);this.f("Unlisten on "+n+" for "+i),n={p:n},e&&(n.q=r,n.t=e),this.ua("n",n)}},g.oe=function(t,e,n){this.ma?Xg(this,"o",t,e,n):this.Jc.push({te:t,action:"o",data:e,G:n})},g.cf=function(t,e,n){this.ma?Xg(this,"om",t,e,n):this.Jc.push({te:t,action:"om",data:e,G:n})},g.vd=function(t,e){this.ma?Xg(this,"oc",t,null,e):this.Jc.push({te:t,action:"oc",data:null,G:e})},g.put=function(t,e,n,i){Yg(this,"p",t,e,n,i)},g.af=function(t,e,n,i){Yg(this,"m",t,e,n,i)},g.ve=function(t){this.ma&&(t={c:t},this.f("reportStats",t),this.ua("s",t,function(t){"ok"!==t.s&&this.f("reportStats","Error sending stats: "+t.d)}))},g.ud=function(t){if("r"in t){this.f("from server: "+B(t));var e=t.r,n=this.Ed[e];n&&(delete this.Ed[e],n(t.b))}else{if("error"in t)throw"A server-side error has occurred: "+t.error;"a"in t&&(e=t.a,t=t.b,this.f("handleServerMessage",e,t),"d"===e?this.Gb(t.p,t.d,!1,t.t):"m"===e?this.Gb(t.p,t.d,!0,t.t):"c"===e?$g(this,t.p,t.q):"ac"===e?Wg(this,t.s,t.d):"sd"===e?this.we?this.we(t):"msg"in t&&"undefined"!=typeof console&&console.log("FIREBASE: "+t.msg.replace("\n","\nFIREBASE: ")):zc("Unrecognized action received from server: "+B(e)+"\nAre you using the latest client?"))}},g.Kc=function(t,e){if(this.f("connection ready"),this.ma=!0,this.zc=(new Date).getTime(),this.re({serverTimeOffset:t-(new Date).getTime()}),this.Cb=e,this.Re){var n={};n["sdk.js."+firebase.SDK_VERSION.replace(/\./g,"-")]=1,qb()?n["framework.cordova"]=1:"object"==typeof navigator&&"ReactNative"===navigator.product&&(n["framework.reactnative"]=1),this.ve(n)}ah(this),this.Re=!1,this.Ic(!0)},g.Zf=function(t){t&&!this.Mb&&this.Sa===this.rd&&(this.f("Window became visible.  Reducing delay."),this.Sa=1e3,this.Fa||Rg(this,0)),this.Mb=t},g.Yf=function(t){t?(this.f("Browser went online."),this.Sa=1e3,this.Fa||Rg(this,0)):(this.f("Browser went offline.  Killing connection."),this.Fa&&this.Fa.close())},g.df=function(){this.f("data client disconnected"),this.ma=!1,this.Fa=null;for(var t=0;t<this.pa.length;t++){var e=this.pa[t];e&&"h"in e.mf&&e.fg&&(e.G&&e.G("disconnect"),delete this.pa[t],this.Nc--)}0===this.Nc&&(this.pa=[]),this.Ed={},ch(this)&&(this.Mb?this.zc&&(3e4<(new Date).getTime()-this.zc&&(this.Sa=1e3),this.zc=null):(this.f("Window isn't visible.  Delaying reconnect."),this.Sa=this.rd,this.je=(new Date).getTime()),t=Math.max(0,this.Sa-((new Date).getTime()-this.je)),t*=Math.random(),this.f("Trying to reconnect in "+t+"ms"),Rg(this,t),this.Sa=Math.min(this.rd,1.3*this.Sa)),this.Ic(!1)},g.ab=function(t){E("Interrupting connection for reason: "+t),this.od[t]=!0,this.Fa?this.Fa.close():(this.ub&&(clearTimeout(this.ub),this.ub=null),this.ma&&this.df())},g.kc=function(t){E("Resuming connection for reason: "+t),delete this.od[t],ya(this.od)&&(this.Sa=1e3,this.Fa||Rg(this,0))};var Y={Mf:function(){re=dd=!0}};Y.forceLongPolling=Y.Mf,Y.Nf=function(){se=!0},Y.forceWebSockets=Y.Nf,Y.Tf=function(){return cd.isAvailable()},Y.isWebSocketsAvailable=Y.Tf,Y.lg=function(t,e){t.u.Ra.we=e},Y.setSecurityDebugCallback=Y.lg,Y.ye=function(t,e){t.u.ye(e)},Y.stats=Y.ye,Y.ze=function(t,e){t.u.ze(e)},Y.statsIncrementCounter=Y.ze,Y.dd=function(t){return t.u.dd},Y.dataUpdateCount=Y.dd,Y.Sf=function(t,e){t.u.ge=e},Y.interceptServerData=Y.Sf,dh.prototype.Nb=function(t,e){var n=t.path,i=null,r=!1;ig(this.wa,n,function(t,e){var o=T(t,n);i=i||e.hb(o),r=r||null!=zg(e)});var o=this.wa.get(n);o?(r=r||null!=zg(o),i=i||o.hb(C)):(o=new yg,this.wa=this.wa.set(n,o));var a;null!=i?a=!0:(a=!1,i=G,lg(this.wa.subtree(n),function(t,e){var n=e.hb(C);n&&(i=i.T(t,n))}));var s=null!=Bg(o,t);if(!s&&!S(t.m)){var u=oh(t);H(!(u in this.ic),"View does not exist, but we have a tag");var c=ph++;this.ic[u]=c,this.Ae["_"+c]=u}return a=o.Nb(t,e,new Hg(n,this.jb),i,a),s||r||(o=Bg(o,t),a=a.concat(qh(this,t,o))),a},dh.prototype.kb=function(t,e,n){var i=t.path,r=this.wa.get(i),o=[];if(r&&("default"===t.ja()||null!=Bg(r,t))){o=r.kb(t,e,n),r.e()&&(this.wa=this.wa.remove(i)),r=o.hg,o=o.Kf,e=-1!==Pa(r,function(t){return S(t.m)});var a=gg(this.wa,i,function(t,e){return null!=zg(e)});if(e&&!a&&(i=this.wa.subtree(i),!i.e()))for(var i=rh(i),s=0;s<i.length;++s){var u=i[s],c=u.V,u=sh(this,u);this.Bc.xe(th(c),uh(this,c),u.jd,u.G)}if(!a&&0<r.length&&!n)if(e)this.Bc.Md(th(t),null);else{var h=this;Ja(r,function(t){t.ja();var e=h.ic[oh(t)];h.Bc.Md(th(t),e)})}vh(this,r)}return o},dh.prototype.Aa=function(t,e){var n=this.jb,i=gg(this.wa,t,function(e,n){var i=T(e,t);if(i=n.hb(i))return i});return n.Aa(t,i,e,!0)};var ph=1;g=Te.prototype,g.toString=function(){return(this.L.Rc?"https://":"http://")+this.L.host},g.name=function(){return this.L.me},g.Gb=function(t,e,n,i){this.dd++;var r=new L(t);e=this.ge?this.ge(t,e):e,t=[],i?n?(e=pa(e,function(t){return M(t)}),t=nh(this.K,r,e,i)):(e=M(e),t=jh(this.K,r,e,i)):n?(i=pa(e,function(t){return M(t)}),t=ih(this.K,r,i)):(i=M(e),t=fh(this.K,new Ab(pg,r,i))),i=r,0<t.length&&(i=Bh(this,r)),Sb(this.ca,i,t)},g.Ic=function(t){yh(this,"connected",t),!1===t&&Ch(this)},g.re=function(t){var e=this;Ic(t,function(t,n){yh(e,n,t)})},g.Jb=function(t,e,n,i){this.f("set",{path:t.toString(),value:e,ug:n});var r=Ah(this);e=M(e,n);var r=pc(e,r),o=this.td++,r=eh(this.K,t,r,o,!0);Ob(this.ca,r);var a=this;this.va.put(t.toString(),e.H(!0),function(e,n){var r="ok"===e;r||O("set at "+t+" failed: "+e),r=hh(a.K,o,!r),Sb(a.ca,t,r),Dh(i,e,n)}),r=Eh(this,t),Bh(this,r),Sb(this.ca,r,[])},g.update=function(t,e,n){this.f("update",{path:t.toString(),value:e});var i=!0,o=Ah(this),a={};if(r(e,function(t,e){i=!1;var n=M(t);a[e]=pc(n,o)}),i)E("update() called with empty data.  Don't do anything."),Dh(n,"ok");else{var s=this.td++,u=gh(this.K,t,a,s);Ob(this.ca,u);var c=this;this.va.af(t.toString(),e,function(e,i){var r="ok"===e;r||O("update at "+t+" failed: "+e);var r=hh(c.K,s,!r),o=t;0<r.length&&(o=Bh(c,t)),Sb(c.ca,o,r),Dh(n,e,i)}),r(e,function(e,n){var i=Eh(c,t.n(n));Bh(c,i)}),Sb(this.ca,t,[])}},g.vd=function(t,e){var n=this;this.va.vd(t.toString(),function(i,r){"ok"===i&&Ze(n.ia,t),Dh(e,i,r)})},g.ab=function(){this.Ra&&this.Ra.ab("repo_interrupt")},g.kc=function(){this.Ra&&this.Ra.kc("repo_interrupt")},g.ye=function(t){if("undefined"!=typeof console){t?(this.Uc||(this.Uc=new Mb(this.Va)),t=this.Uc.get()):t=this.Va.get();var e,n=Ma(ua(t),function(t,e){return Math.max(e.length,t)},0);for(e in t){for(var i=t[e],r=e.length;r<n+2;r++)e+=" ";console.log(e+i)}}},g.ze=function(t){Lb(this.Va,t),this.og.rf[t]=!0},g.f=function(t){var e="";this.Ra&&(e=this.Ra.id+":"),E(e,arguments)},Ye.prototype.ab=function(){for(var t in this.lb)this.lb[t].ab()},Ye.prototype.kc=function(){for(var t in this.lb)this.lb[t].kc()},Ye.prototype.$d=function(t){this.wf=t},ca(Ye),Ye.prototype.interrupt=Ye.prototype.ab,Ye.prototype.resume=Ye.prototype.kc;var Z={};if(Z.nc=Pg,Z.DataConnection=Z.nc,Pg.prototype.ng=function(t,e){this.ua("q",{p:t},e)},Z.nc.prototype.simpleListen=Z.nc.prototype.ng,Pg.prototype.Hf=function(t,e){this.ua("echo",{d:t},e)},Z.nc.prototype.echo=Z.nc.prototype.Hf,Pg.prototype.interrupt=Pg.prototype.ab,Z.zf=Ce,Z.RealTimeConnection=Z.zf,Ce.prototype.sendRequest=Ce.prototype.ua,Ce.prototype.close=Ce.prototype.close,Z.Rf=function(t){var e=Pg.prototype.put;return Pg.prototype.put=function(i,r,o,a){n(a)&&(a=t()),e.call(this,i,r,o,a)},function(){Pg.prototype.put=e}},Z.hijackHash=Z.Rf,Z.yf=Hb,Z.ConnectionTarget=Z.yf,Z.ja=function(t){return t.ja()},Z.queryIdentifier=Z.ja,Z.Uf=function(t){return t.u.Ra.$},Z.listens=Z.Uf,Z.$d=function(t){Ye.Vb().$d(t)},Z.forceRestClient=Z.$d,Z.Context=Ye,la(U,X),g=U.prototype,g.getKey=function(){return x("Firebase.key",0,0,arguments.length),this.path.e()?null:Bd(this.path)},g.n=function(t){if(x("Firebase.child",1,1,arguments.length),ga(t))t=String(t);else if(!(t instanceof L))if(null===J(this.path)){var e=t;e&&(e=e.replace(/^\/*\.info(\/|$)/,"/")),lf("Firebase.child",e)}else lf("Firebase.child",t);return new U(this.u,this.path.n(t))},g.getParent=function(){x("Firebase.parent",0,0,arguments.length);var t=this.path.parent();return null===t?null:new U(this.u,t)},g.Of=function(){x("Firebase.ref",0,0,arguments.length);for(var t=this;null!==t.getParent();)t=t.getParent();return t},g.Gf=function(){return this.u.Ya},g.set=function(t,e){x("Firebase.set",1,2,arguments.length),mf("Firebase.set",this.path),df("Firebase.set",t,this.path,!1),A("Firebase.set",2,e,!0);var n=new hb;return this.u.Jb(this.path,t,null,ib(n,e)),n.ra},g.update=function(t,e){if(x("Firebase.update",1,2,arguments.length),mf("Firebase.update",this.path),ea(t)){for(var n={},i=0;i<t.length;++i)n[""+i]=t[i];t=n,O("Passing an Array to Firebase.update() is deprecated. Use set() if you want to overwrite the existing data, or an Object with integer keys if you really do want to only update some of the children.")}return gf("Firebase.update",t,this.path),A("Firebase.update",2,e,!0),n=new hb,this.u.update(this.path,t,ib(n,e)),n.ra},g.Jb=function(t,e,n){if(x("Firebase.setWithPriority",2,3,arguments.length),mf("Firebase.setWithPriority",this.path),df("Firebase.setWithPriority",t,this.path,!1),hf("Firebase.setWithPriority",2,e),A("Firebase.setWithPriority",3,n,!0),".length"===this.getKey()||".keys"===this.getKey())throw"Firebase.setWithPriority failed: "+this.getKey()+" is a read-only object.";var i=new hb;return this.u.Jb(this.path,t,e,ib(i,n)),i.ra},g.remove=function(t){return x("Firebase.remove",0,1,arguments.length),mf("Firebase.remove",this.path),A("Firebase.remove",1,t,!0),this.set(null,t)},g.transaction=function(t,e,i){if(x("Firebase.transaction",1,3,arguments.length),mf("Firebase.transaction",this.path),A("Firebase.transaction",1,t,!1),A("Firebase.transaction",2,e,!0),n(i)&&"boolean"!=typeof i)throw Error(y("Firebase.transaction",3,!0)+"must be a boolean.");if(".length"===this.getKey()||".keys"===this.getKey())throw"Firebase.transaction failed: "+this.getKey()+" is a read-only object.";"undefined"==typeof i&&(i=!0);var r=new hb;return ha(e)&&jb(r.ra),Fh(this.u,this.path,t,function(t,n,i){t?r.reject(t):r.resolve(new pb(n,i)),ha(e)&&e(t,n,i)},i),r.ra},g.kg=function(t,e){x("Firebase.setPriority",1,2,arguments.length),mf("Firebase.setPriority",this.path),hf("Firebase.setPriority",1,t),A("Firebase.setPriority",2,e,!0);var n=new hb;return this.u.Jb(this.path.n(".priority"),t,null,ib(n,e)),n.ra},g.push=function(t,e){x("Firebase.push",0,2,arguments.length),mf("Firebase.push",this.path),df("Firebase.push",t,this.path,!0),A("Firebase.push",2,e,!0);var n=zh(this.u),i=uf(n),n=this.n(i);if(null!=t){var r=this,o=n.set(t,e).then(function(){return r.n(i)});n.then=q(o.then,o),n.catch=q(o.then,o,void 0),ha(e)&&jb(o)}return n},g.ib=function(){return mf("Firebase.onDisconnect",this.path),new V(this.u,this.path)},U.prototype.child=U.prototype.n,U.prototype.set=U.prototype.set,U.prototype.update=U.prototype.update,U.prototype.setWithPriority=U.prototype.Jb,U.prototype.remove=U.prototype.remove,U.prototype.transaction=U.prototype.transaction,U.prototype.setPriority=U.prototype.kg,U.prototype.push=U.prototype.push,U.prototype.onDisconnect=U.prototype.ib,Lc(U.prototype,"database",U.prototype.Gf),Lc(U.prototype,"key",U.prototype.getKey),Lc(U.prototype,"parent",U.prototype.getParent),Lc(U.prototype,"root",U.prototype.Of),"undefined"==typeof firebase)throw Error("Cannot install Firebase Database - be sure to load firebase-app.js first.");try{firebase.INTERNAL.registerService("database",function(t){var e=Ye.Vb(),i=t.options.databaseURL;n(i)||Ac("Can't determine Firebase Database URL.  Be sure to include databaseURL option when calling firebase.intializeApp().");var r=Bc(i),i=r.jc;return Xe("Invalid Firebase Database URL",r),r.path.e()||Ac("Database URL must point to the root of a Firebase Database (not including a child path)."),(r=w(e.lb,t.name))&&Ac("FIREBASE INTERNAL ERROR: Database initialized multiple times."),r=new Te(i,e.wf,t),e.lb[t.name]=r,r.Ya},{Reference:U,Query:X,Database:Se,enableLogging:xc,INTERNAL:Y,TEST_ACCESS:Z,ServerValue:Ve})}catch(t){Ac("Failed to register the Firebase Database Service ("+t+")")}}(),module.exports=firebase.database},472:function(t,e,n){"use strict";function i(t){return t&&t.__esModule?t:{default:t}}function r(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function o(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function a(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}Object.defineProperty(e,"__esModule",{value:!0});var s=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),u=n(298),c=i(u),h=n(473),f=i(h),l=function(t){function e(){return r(this,e),o(this,(e.__proto__||Object.getPrototypeOf(e)).apply(this,arguments))}return a(e,t),s(e,[{key:"render",value:function(){return c.default.createElement(f.default,null)}}]),e}(c.default.Component);e.default=l},473:function(t,e,n){"use strict";function i(t){return t&&t.__esModule?t:{default:t}}function r(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function o(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function a(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}Object.defineProperty(e,"__esModule",{value:!0});var s=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),u=n(298),c=i(u),h=function(t){function e(){return r(this,e),o(this,(e.__proto__||Object.getPrototypeOf(e)).apply(this,arguments))}return a(e,t),s(e,[{key:"render",value:function(){return c.default.createElement("p",null,"QuoteForm!!")}}]),e}(c.default.Component);e.default=h}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,